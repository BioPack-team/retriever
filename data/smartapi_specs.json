{
   "max_score": 0.98509884,
   "took": 89,
   "total": 102,
   "hits": [
      {
         "_id": "bfd371630f0bcb198d428488d061e7b3",
         "_score": 0.98509884,
         "info": {
            "contact": {
               "email": "mark.williams5@nih.gov",
               "name": "Mark Williams",
               "x-role": "responsible developer"
            },
            "description": "a work in progress KP example",
            "termsOfService": "https://opensource.org/licenses/MIT",
            "title": "NCATS KP Scaffold",
            "version": "3.0"
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "responses": {
                        "200": {
                           "description": "A query response object"
                        }
                     },
                     "summary": "POST a ReasonerStdAPI formatted query to the service.  Note, the service can only accept a limited set of query types currently."
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://transltr.io:7072"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "b0c489ea3a4d5aacfd833616d07a037a",
         "_score": 0.915305,
         "info": {
            "contact": {
               "email": "shefchek@oregonstate.edu",
               "name": "Kent Shefchek",
               "x-id": "https://github.com/kshefchek",
               "x-role": "responsible developer"
            },
            "description": "The SRI reference KG aims to aggregate knowledge sources across translator using KGX.  The initial graph contains data files provided by the Monarch Initiative and several ontologies.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Reference+KG+API&provider_long=the+Translator+Consortium",
            "title": "SRI Reference Knowledge Graph API",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Standards Reference Implementation Team"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://monarch-sandbox.cgrb.oregonstate.edu"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "528c38e2218202a1095cc70c612af625",
         "_score": 0.915305,
         "info": {
            "contact": {
               "email": "bizon@renci.org",
               "name": "Chris Bizon",
               "x-id": "https://github.com/cbizon",
               "x-role": "responsible developer"
            },
            "description": "The <a href=\"https://biolink.github.io/biolink-model/\">Biolink Model</a> defines allowed predicates in the Translator ecosystem.  Ingesting data from arbitrary sources requires mapping predicates in those sources to Translator predicates. <p/> The <a href=\"https://bl-lookup-sri.renci.org/apidocs\">Biolink Lookup Service</a> can find predicates if they have an exact mapping in the model.  The EdgeNormalization service takes this a step further, and attempts to find the best match to a Biolink predicate, even if there is not an explicit mapping. ",
            "license": {
               "name": "MIT",
               "url": "https://opensource.org/licenses/MIT"
            },
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Edge+Normalization&provider_long=the+Translator+Consortium",
            "title": "Edge Normalization Service",
            "version": "1.0.0",
            "x-translator": {
               "component": "Utility",
               "team": [
                  "Standards Reference Implementation Team"
               ]
            }
         },
         "paths": [
            {
               "path": "/resolve_predicate",
               "pathitem": {
                  "get": {
                     "description": "Get Biolink model compliant predicate(s) using the passed predicate(s).",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "predicate",
                           "schema": {
                              "example": [
                                 "SEMMEDDB:CAUSES",
                                 "RO:0000052"
                              ],
                              "items": {
                                 "type": "string"
                              },
                              "type": "array"
                           }
                        },
                        {
                           "in": "query",
                           "name": "version",
                           "schema": {
                              "example": "latest",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "example": {
                                       "RO:0000052": {
                                          "identifier": "SEMMEDDB:AFFECTS",
                                          "label": "affects"
                                       },
                                       "SEMMEDDB:CAUSES": {
                                          "identifier": "RO:0002410",
                                          "label": "causes"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Results"
                        }
                     },
                     "summary": "Resolve predicate CURIE(s) into Biolink model compliant counterpart(s), first checking the BioLink model for exact matches of a CURIE.  If the CURIE is from the Relation Ontology, the service will check its superproperties until an exact match is found.",
                     "tags": [
                        "redis"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://edgenormalization-sri.renci.org/"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "127b0fcac2f18c901378a43c965de5db",
         "_score": 0.915305,
         "info": {
            "contact": {
               "email": "lisa@renci.org",
               "name": "Lisa Stillwell"
            },
            "description": "This API returns estimated measurements of airborne particulate exposures for a given time period and spatial location of interest.\n\nEstimates are derived from the US EPA CONUS estimates of air quality available at\u00a0https://www.epa.gov/hesc/rsig-related-downloadable-data-files. These data sets provide 8-hour ozone daily maximums (in ppbV) and daily PM2.5 daily averages (in \u00b5g/m3). The US EPA provides estimates at the resolution of US Census tract centroids for the continental US. For a given location, the API returns the estimated exposure for the census tract the location occurs in.\n\nThe API provides exposure estimates for calendar years 2002-2016. Resolution for model estimates is 12 km-squared, provisioned at a resolution of the US Census track centroid. The US census tract definition is from the calendar year 2010 definition of the US Census Bureau, for all years of CMAQ data.\n\nThe data sets sources are derived from air quality monitoring data from the National Air Monitoring Stations and Local Air Monitoring Stations (NAMS/LAMS) and numerical output from the Models-3/Community Multiscale Air Quality (CMAQ -\u00a0https://www.epa.gov/cmaq).\nThe API currently provides the following exposure variables:\n  * O3: provides estimated O3 concentration levels. Estimated values are for daily maximums in units of ppbV.\n  * PM2.5: provides estimated pm2.5 concentration levels. Estimated values are for daily averages in units of \u00b5g/m3.\n\nLocations are expressed using WGS84 decimal format. WGS84 is the World Geodetic System for expressing latitude and longitude. For example, Raleigh, North Carolina is at latitude 35.7796 and longitude -78.6382.\n",
            "license": {
               "name": "MIT",
               "url": "http://opensource.org/licenses/MIT"
            },
            "title": "CMAQ Exposures API",
            "version": "1.0.0"
         },
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "89590198e93fb9377ab547eb903c5532",
         "_score": 0.915305,
         "info": {
            "contact": {
               "email": "translator@broadinstitute.org",
               "name": "Broad PGM translator",
               "url": "https://translator.ncats.io/broad-pgm-translator/",
               "x-id": "https://github.com/broadinstitute/broad-translator",
               "x-role": "responsible organization"
            },
            "termsOfService": "https://translator.ncats.io/broad-pgm-translator",
            "title": "Broad probabilistic graphical models translator",
            "version": "0.1.0"
         },
         "paths": [
            {
               "path": "/modelList",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "modelID": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful response"
                        }
                     },
                     "summary": "List available models"
                  }
               }
            },
            {
               "path": "/{modelID}/modelSignature",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Model identifier",
                           "in": "path",
                           "name": "modelID",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "modelID": {
                                          "type": "string"
                                       },
                                       "variableGroup": {
                                          "items": {
                                             "properties": {
                                                "asInput": {
                                                   "type": "boolean"
                                                },
                                                "asOutput": {
                                                   "type": "boolean"
                                                },
                                                "authorityURL": {
                                                   "type": "string"
                                                },
                                                "groupDistribution": {
                                                   "enum": [
                                                      "discrete",
                                                      "empirical",
                                                      "Gaussian",
                                                      "Poisson"
                                                   ]
                                                },
                                                "groupType": {
                                                   "enum": [
                                                      "Bollean",
                                                      "Number",
                                                      "String"
                                                   ],
                                                   "type": "string"
                                                },
                                                "groupValue": {
                                                   "items": {
                                                      "type": "string"
                                                   },
                                                   "type": "array"
                                                },
                                                "modelVariable": {
                                                   "items": {
                                                      "properties": {
                                                         "authorityURI": {
                                                            "type": "string"
                                                         },
                                                         "groupDistribution": {
                                                            "enum": [
                                                               "discrete",
                                                               "empirical",
                                                               "Gaussian",
                                                               "Poisson"
                                                            ]
                                                         },
                                                         "variableID": {
                                                            "type": "string"
                                                         },
                                                         "variableType": {
                                                            "enum": [
                                                               "Bollean",
                                                               "Number",
                                                               "String"
                                                            ],
                                                            "type": "string"
                                                         },
                                                         "variableValue": {
                                                            "items": {
                                                               "type": "string"
                                                            },
                                                            "type": "array"
                                                         }
                                                      },
                                                      "type": "object"
                                                   },
                                                   "type": "array"
                                                },
                                                "variableGroupID": {
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful response"
                        }
                     },
                     "summary": "Get model signature"
                  }
               }
            },
            {
               "path": "/evaluateModel",
               "pathitem": {
                  "post": {
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "properties": {
                                    "modelID": {
                                       "type": "string"
                                    },
                                    "modelInput": {
                                       "items": {
                                          "properties": {
                                             "modelVariable": {
                                                "items": {
                                                   "properties": {
                                                      "priorDistribution": {
                                                         "properties": {
                                                            "GaussianDistribution": {
                                                               "properties": {
                                                                  "distributionMean": {
                                                                     "type": "number"
                                                                  },
                                                                  "distributionStDev": {
                                                                     "type": "number"
                                                                  }
                                                               },
                                                               "type": "object"
                                                            },
                                                            "PoissonDistribution": {
                                                               "properties": {
                                                                  "lambdaParameter": {
                                                                     "type": "number"
                                                                  }
                                                               },
                                                               "type": "object"
                                                            },
                                                            "discreteDistribution": {
                                                               "items": {
                                                                  "properties": {
                                                                     "priorProbability": {
                                                                        "type": "number"
                                                                     },
                                                                     "variableValue": {
                                                                        "type": "string"
                                                                     }
                                                                  },
                                                                  "type": "object"
                                                               },
                                                               "type": "array"
                                                            },
                                                            "empiricalDistribution": {
                                                               "properties": {
                                                                  "distributionMean": {
                                                                     "type": "number"
                                                                  },
                                                                  "distributionPercentile": {
                                                                     "items": {
                                                                        "type": "number"
                                                                     },
                                                                     "type": "array"
                                                                  },
                                                                  "distributionStDev": {
                                                                     "type": "number"
                                                                  }
                                                               },
                                                               "type": "object"
                                                            }
                                                         },
                                                         "type": "object"
                                                      },
                                                      "variableID": {
                                                         "type": "string"
                                                      }
                                                   },
                                                   "type": "object"
                                                },
                                                "type": "array"
                                             },
                                             "variableGroupID": {
                                                "type": "string"
                                             }
                                          },
                                          "type": "object"
                                       },
                                       "type": "array"
                                    },
                                    "modelOutput": {
                                       "items": {
                                          "properties": {
                                             "rawOutput": {
                                                "type": "boolean"
                                             },
                                             "variableGroupID": {
                                                "type": "string"
                                             },
                                             "variableID": {
                                                "items": {
                                                   "type": "string"
                                                },
                                                "type": "array"
                                             }
                                          },
                                          "type": "object"
                                       },
                                       "type": "array"
                                    }
                                 },
                                 "type": "object"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "posteriorProbabilities": {
                                          "items": {
                                             "properties": {
                                                "modelVariable": {
                                                   "items": {
                                                      "properties": {
                                                         "posteriorDistribution": {
                                                            "properties": {
                                                               "GaussianDistribution": {
                                                                  "properties": {
                                                                     "distributionMean": {
                                                                        "type": "number"
                                                                     },
                                                                     "distributionStDev": {
                                                                        "type": "number"
                                                                     }
                                                                  },
                                                                  "type": "object"
                                                               },
                                                               "PoissonDistribution": {
                                                                  "properties": {
                                                                     "lambdaParameter": {
                                                                        "type": "number"
                                                                     }
                                                                  },
                                                                  "type": "object"
                                                               },
                                                               "discreteDistribution": {
                                                                  "items": {
                                                                     "properties": {
                                                                        "posteriorProbability": {
                                                                           "type": "number"
                                                                        },
                                                                        "variableValue": {
                                                                           "type": "string"
                                                                        }
                                                                     },
                                                                     "type": "object"
                                                                  },
                                                                  "type": "array"
                                                               },
                                                               "empiricalDistribution": {
                                                                  "properties": {
                                                                     "distributionMean": {
                                                                        "type": "number"
                                                                     },
                                                                     "distributionPercentile": {
                                                                        "items": {
                                                                           "type": "number"
                                                                        },
                                                                        "type": "array"
                                                                     },
                                                                     "distributionStDev": {
                                                                        "type": "number"
                                                                     }
                                                                  },
                                                                  "type": "object"
                                                               },
                                                               "rawDistribution": {
                                                                  "items": {
                                                                     "type": "number"
                                                                  },
                                                                  "type": "array"
                                                               }
                                                            },
                                                            "type": "object"
                                                         },
                                                         "variableID": {
                                                            "type": "string"
                                                         }
                                                      },
                                                      "type": "object"
                                                   },
                                                   "type": "array"
                                                },
                                                "variableGroupID": {
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful response"
                        }
                     },
                     "summary": "evaluate model"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://translator.ncats.io/broad-pgm-translator"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "02fdf5136618160a6531a3844bbcde1a",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A literature co-occurence graph based on scigraph parsing of the CORD-19 paper set. All triples contain covid-19 as either subject or object.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Cord19%20Scigraph&provider_long=RENCI",
            "title": "Automat Cord19 Scigraph",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/cord19-scigraph"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "57539ea28b4e19ecd36074566ca2cd56",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph containing eqtl and sqtl information from [GTEx Portal (https://gtexportal.org/home/)](https://gtexportal.org/home/). Also includes genes that the variants lie within or near.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20GTEx&provider_long=RENCI",
            "title": "Automat GTEx",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/gtex"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "3e74f67bd571c74f1832829a5b5a40eb",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on the [Comparative Toxicogenomics Database (ctdbase.org)](ctdbase.org).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat CTD&provider_long=RENCI",
            "title": "Automat CTD",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/ctd"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "f8f7142da2323703dfa32b8cc4cdff5f",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph consisting of viral proteins from UniProt, connected by similarity edges from UniRef.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Viral%20Proteome&provider_long=RENCI",
            "title": "Automat Viral Proteome",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/viral-proteome"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "786e41a17dbb75399f22e09858f828b7",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on [chem2bio2rdf (http://cheminfov.informatics.indiana.edu:8080/c2b2r/)](http://cheminfov.informatics.indiana.edu:8080/c2b2r/).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Chembio&provider_long=RENCI",
            "title": "Automat Chembio",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/chembio"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "523a1ce8b6d4fc9a1d0f9f22321f4c4c",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on the [IUPHAR Guide to Pharmacology (https://www.guidetopharmacology.org/)](https://www.guidetopharmacology.org/)",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Gtopdb&provider_long=RENCI",
            "title": "Automat Gtopdb",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/gtopdb"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "7b1b6a88cbf2913c4b614fabddcaabb4",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": " A literature co-occurrence graph created by the Translator Text Mining KP.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Textmining%20KP&provider_long=RENCI",
            "title": "Automat Textmining KP",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/textminingkp"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "1f277e1563fcfd124bfae2cc3c4bcdec",
         "_score": 0.9068705,
         "components": {
            "x-bte-kgs-operations": {
               "ma_has_subclass_ma": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "goid": "{inputs[0]}"
                     },
                     "predicate": "has_subclass",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ma_has_subclass_ma"
                     },
                     "source": "gene ontology",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "ma_has_subclass_ma": {
                  "GO": "results.children.id",
                  "name": "results.children.name",
                  "relation": "results.children.relation"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@pharmgkb.org",
               "name": "pharmgkb help desk",
               "x-role": "responsible developer"
            },
            "description": "The QuickGO REST API provides access to key biological data from QuickGO and GOA. The services provide a unified interface to query information about ontology terms from GO (the Gene Ontology) and ECO (the Evidence & Conclusion Ontology), Gene Ontology annotations from the EBI's GOA database, and gene products (proteins from UniProt, RNA from RNAcentral and complexes from ComplexPortal). ",
            "termsOfService": "https://www.ebi.ac.uk/QuickGO/services",
            "title": "QuickGO API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/ontology/go/terms/{goid}/children",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put Gene Ontology ID here, e.g. GO:0000082",
                           "example": "GO:0000082",
                           "in": "path",
                           "name": "goid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A gene ontolgoy annotation object"
                        }
                     },
                     "summary": "retrieve the children of specified ontology terms",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ma_has_subclass_ma"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://www.ebi.ac.uk/QuickGO/services"
            }
         ],
         "tags": [
            {
               "name": "ontology"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "1c0aff2a70b1ed677867c0db8011746f",
         "_score": 0.9068705,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph for ontological hierarchy extracted from Uberongraph.",
            "termsOfService": "http://linkmissing",
            "title": "Automat Ontological Hierarchy",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/ontological-hierarchy"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "Automat"
            }
         ]
      },
      {
         "_id": "4f7b6f661ac61ed64190d5b26d87aff5",
         "_score": 0.9068705,
         "components": {
            "x-bte-kgs-operations": {
               "associatedWith": {
                  "inputs": [
                     {
                        "id": "hgnc",
                        "semantic": "Gene"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "chembl",
                        "semantic": "ChemicalSubstance"
                     }
                  ],
                  "parameters": {
                     "chemical_id": "HGNC:{input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                  },
                  "supportBatch": false
               },
               "contraindication": {
                  "inputs": [
                     {
                        "id": "chembl",
                        "semantic": "ChemicalSubstance"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "mondo",
                        "semantic": "DiseaseOrPhenotypicFeature"
                     }
                  ],
                  "parameters": {
                     "chemical_id": "CHEMBL:{input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/chemical-disease"
                  },
                  "supportBatch": false
               },
               "partOf": {
                  "inputs": [
                     {
                        "id": "hgnc",
                        "semantic": "Gene"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "panther",
                        "semantic": "GeneFamily"
                     }
                  ],
                  "parameters": {
                     "chemical_id": "HGNC:{input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/gene-genefamily"
                  },
                  "supportBatch": false
               },
               "treats": {
                  "inputs": [
                     {
                        "id": "chembl",
                        "semantic": "ChemicalSubstance"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "mondo",
                        "semantic": "DiseaseOrPhenotypicFeature"
                     }
                  ],
                  "parameters": {
                     "chemical_id": "CHEMBL:{input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/chemical-disease"
                  },
                  "supportBatch": false
               }
            },
            "x-bte-response-mapping": {
               "chemical-disease": {
                  "@context": "http://schema.org",
                  "@type": "ChemicalSubstance",
                  "bts:chembl": "treats.source_id",
                  "bts:contraindication": {
                     "$input": "bts:chembl",
                     "$source": "robokop",
                     "@type": "DiseaseOrPhenotypicFeature",
                     "bts:mondo": "contraindicated_for.mondo",
                     "bts:pubmed": "contraindicated_for.publications",
                     "bts:source": "contraindicated_for.source_database"
                  },
                  "bts:treats": {
                     "$input": "bts:chembl",
                     "$source": "robokop",
                     "@type": "DiseaseOrPhenotypicFeature",
                     "bts:mondo": "treats.mondo",
                     "bts:pubmed": "treats.publications",
                     "bts:source": "treats.source_database"
                  }
               },
               "gene-chemical": {
                  "@context": "http://schema.org",
                  "@type": "Gene",
                  "bts:associatedWith": {
                     "$input": "bts:hgnc",
                     "$source": "robokop",
                     "@type": "ChemicalSubstance",
                     "bts:chembl": "literature_co-occurrence.chembl",
                     "bts:source": "literature_co-occurrence.source_database"
                  },
                  "bts:hgnc": "literature_co-occurrence.source_id"
               },
               "gene-genefamily": {
                  "@context": "http://schema.org",
                  "@type": "Gene",
                  "bts:hgnc": "part_of.source_id",
                  "bts:partOf": {
                     "$input": "bts:hgnc",
                     "$source": "panther",
                     "@type": "GeneFamily",
                     "bts:panther": "part_of.panther",
                     "bts:pubmed": "part_of.publications",
                     "bts:source": "part_of.source_database"
                  }
               }
            }
         },
         "info": {
            "contact": {
               "email": "patrick@covar.com",
               "name": "Patrick Wang",
               "url": "robokop.renci.org"
            },
            "description": "An API for answering biomedical questions",
            "termsOfService": "https://robokop.renci.org/termsofservice/",
            "title": "ROBOKOP",
            "version": "1.0"
         },
         "paths": [
            {
               "path": "/simple/expand/chemical_substance/{chemical_id}/disease_or_phenotypic_feature/",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "chembl id",
                           "example": "CHEMBL:CHEMBL744",
                           "in": "path",
                           "name": "chemical_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A association object",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/chemical-disease"
                           }
                        }
                     },
                     "summary": "retrieve diseases related to chemical",
                     "x-bte-kgs-operations": {
                        "contraindication": {
                           "$ref": "#/components/x-bte-kgs-operations/contraindication"
                        },
                        "treats": {
                           "$ref": "#/components/x-bte-kgs-operations/treats"
                        }
                     }
                  }
               }
            },
            {
               "path": "/simple/expand/gene/{gene_id}/gene_family/",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "hgnc id",
                           "example": "HGNC:1771",
                           "in": "path",
                           "name": "gene_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A association object",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/gene-genefamily"
                           }
                        }
                     },
                     "summary": "retrieve gene family related to gene",
                     "x-bte-kgs-operations": {
                        "partOf": {
                           "$ref": "#/components/x-bte-kgs-operations/partOf"
                        }
                     }
                  }
               }
            },
            {
               "path": "/simple/expand/gene/{gene_id}/chemical_substance/",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "hgnc id",
                           "example": "HGNC:1771",
                           "in": "path",
                           "name": "gene_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A association object",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                           }
                        }
                     },
                     "summary": "retrieve chemicals related to gene",
                     "x-bte-kgs-operations": {
                        "associatedWith": {
                           "$ref": "#/components/x-bte-kgs-operations/associatedWith"
                        }
                     }
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://robokop.renci.org/api"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "99592dd5fc3a69d3ed27692f3f278e47",
         "_score": 0.8872977,
         "info": {
            "contact": {
               "email": "mduby@broadinstitute.org",
               "name": "Marc Duby",
               "url": "https://github.com/broadinstitute/genetics-kp-dev"
            },
            "description": "A Translator API for Genetic Disease Asociation",
            "termsOfService": "http://www.apache.org/licenses/LICENSE-2.0.html",
            "title": "Genetics Provider",
            "version": "1.0.0",
            "x-reasoner_standard_version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Genetics Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:Gene": {
                                          "biolink:Disease": [
                                             "biolink:gene_associated_with_condition"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get Genetics Provider supported relationships by source and target",
                     "tags": [
                        "predicates",
                        "1.0.0"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "",
                     "operationId": "query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": {
                                          "e00": {
                                             "object": "n01",
                                             "predicate": "biolink:gene_associated_with_condition",
                                             "subject": "n00"
                                          }
                                       },
                                       "nodes": {
                                          "n00": {
                                             "category": "biolink:Gene",
                                             "id": "NCBIGene:1803"
                                          },
                                          "n01": {
                                             "category": "biolink:Disease"
                                          }
                                       }
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query Genetics Provider TRAPI API as KP",
                     "tags": [
                        "query",
                        "1.0.0"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://translator.broadinstitute.org/genetics_provider/trapi/v1.0"
            }
         ],
         "tags": [
            {
               "name": "1.0.0"
            },
            {
               "name": "translator"
            },
            {
               "name": "x-translator"
            },
            {
               "name": "reasoner"
            },
            {
               "name": "metadata"
            },
            {
               "name": "query"
            }
         ]
      },
      {
         "_id": "4ea6d865ffb6de29023e0f294347526e",
         "_score": 0.872416,
         "info": {
            "contact": {
               "email": "william.baumgartner@cuanschutz.edu",
               "name": "Bill Baumgartner"
            },
            "description": "TRAPI interface for the Text Mining Provider text-mined Biolink association KG",
            "license": {
               "name": "MIT License",
               "url": "https://opensource.org/licenses/MIT"
            },
            "termsOfService": "https://opensource.org/licenses/MIT",
            "title": "Text-mined Biolink Association TRAPI",
            "version": "0.1"
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "operationId": "postQuery",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": [
                                          {
                                             "id": "e0",
                                             "source_id": "n0",
                                             "target_id": "n1",
                                             "type": "negatively_regulates_entity_to_entity"
                                          }
                                       ],
                                       "nodes": [
                                          {
                                             "curie": "CHEBI:3215",
                                             "id": "n0",
                                             "type": "chemical_substance"
                                          },
                                          {
                                             "curie": "PR:000031567",
                                             "id": "n1",
                                             "type": "gene_product"
                                          }
                                       ]
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/TRAPIQueryRequestBody"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": ""
                        },
                        "default": {
                           "content": {
                              "text/plain": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": ""
                        }
                     },
                     "summary": "Submit a TRAPI question graph and retrieve matching solutions. This REST portal serves Biolink associations that have been mined from the scientific literature. For details on the KG content, please visit: http://35.232.64.189/docs"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "http://35.232.64.189"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "0a29abdf1b63a762ee93d29f29a8db67",
         "_score": 0.84015244,
         "info": {
            "contact": {
               "email": "patrick@covar.com",
               "name": "Patrick Wang",
               "x-id": "https://github.com/patrickkwang",
               "x-role": "responsible developer"
            },
            "description": "ARAGORN Ranker: The ranker used by the ARAGORN ARA, which takes a TRAPI 1.0 message containing answers, and calculates numerical scores for each answer.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=ARAGORN Ranker&provider_long=RENCI",
            "title": "ARAGORN Ranker",
            "version": "2.2.2",
            "x-translator": {
               "component": "ARA",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/omnicorp_overlay",
               "pathitem": {
                  "post": {
                     "description": "Add support to message.\n\nAdd support edges to knowledge_graph and bindings to results.",
                     "operationId": "query_omnicorp_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Response"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query",
                     "tags": [
                        "ARAGORN-Ranker"
                     ]
                  }
               }
            },
            {
               "path": "/score",
               "pathitem": {
                  "post": {
                     "description": "Score answers.\n\nThis is mostly glue around the heavy lifting in ranker_obj.Ranker",
                     "operationId": "query_score_post",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "jaccard_like",
                           "required": false,
                           "schema": {
                              "default": false,
                              "title": "Jaccard Like",
                              "type": "boolean"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Response"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query",
                     "tags": [
                        "ARAGORN-Ranker"
                     ]
                  }
               }
            },
            {
               "path": "/weight_correctness",
               "pathitem": {
                  "post": {
                     "description": "Weight kgraph edges based on metadata.\n\n\"19 pubs from CTD is a 1, and 2 should at least be 0.5\"\n    - cbizon",
                     "operationId": "query_weight_correctness_post",
                     "parameters": [
                        {
                           "description": "Portion of cooccurrence publications relevant to a question",
                           "in": "query",
                           "name": "relevance",
                           "required": false,
                           "schema": {
                              "default": 0.0025,
                              "description": "Portion of cooccurrence publications relevant to a question",
                              "title": "Relevance",
                              "type": "number"
                           }
                        },
                        {
                           "description": "Minimum weight (at 0 publications)",
                           "in": "query",
                           "name": "wt_min",
                           "required": false,
                           "schema": {
                              "default": 0.0,
                              "description": "Minimum weight (at 0 publications)",
                              "title": "Wt Min",
                              "type": "number"
                           }
                        },
                        {
                           "description": "Maximum weight (at inf publications)",
                           "in": "query",
                           "name": "wt_max",
                           "required": false,
                           "schema": {
                              "default": 1.0,
                              "description": "Maximum weight (at inf publications)",
                              "title": "Wt Max",
                              "type": "number"
                           }
                        },
                        {
                           "description": "Publications at 50% of wt_max",
                           "in": "query",
                           "name": "p50",
                           "required": false,
                           "schema": {
                              "default": 2.0,
                              "description": "Publications at 50% of wt_max",
                              "title": "P50",
                              "type": "number"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Response"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query",
                     "tags": [
                        "ARAGORN-Ranker"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://aragorn-ranker.renci.org"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "ARAGORN"
            },
            {
               "name": "ARA"
            }
         ]
      },
      {
         "_id": "55510544e95386a5a8ac3b88f9d00d21",
         "_score": 0.8176485,
         "info": {
            "contact": {
               "email": "patrick@covar.com",
               "name": "Patrick Wang",
               "x-id": "https://github.com/patrickkwang",
               "x-role": "responsible developer"
            },
            "description": "Name resolution service<p/>This service takes lexical strings and attempts to map them to identifiers (curies) from a vocabulary or ontology.  The lookup is not exact, but includes partial matches.<p/> Multiple results may be returned representing possible conceptual matches, but all of the identifiers have been correctly normalized using the <a href=\"https://nodenormalization-sri.renci.org>NodeNormalization service</a>.",
            "termsOfService": "robokop.renci.org:7055/tos?service_long=Name+Resolver&provider_long=the+Translator+Consortium",
            "title": "Name Resolver",
            "version": "1.0.0",
            "x-translator": {
               "component": "Utility",
               "team": [
                  "Standards Reference Implementation Team"
               ]
            }
         },
         "paths": [
            {
               "path": "/lookup",
               "pathitem": {
                  "post": {
                     "description": "Look up curies from name or fragment.",
                     "operationId": "lookup_curies_lookup_post",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "string",
                           "required": true,
                           "schema": {
                              "title": "String",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "offset",
                           "required": false,
                           "schema": {
                              "default": 0,
                              "title": "Offset",
                              "type": "integer"
                           }
                        },
                        {
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "default": 10,
                              "maximum": 1000.0,
                              "title": "Limit",
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "items": {
                                          "type": "string"
                                       },
                                       "type": "array"
                                    },
                                    "title": "Response Lookup Curies Lookup Post",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Lookup Curies",
                     "tags": [
                        "lookup"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://name-resolution-sri.renci.org/"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "70117385218edc9bc01633829011dfcf",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-response-mappings": {
               "chi_square": {
                  "biolink:OMOP": "results.concept_id_2",
                  "biolink:chi_squared_statistic": "results.chi_square",
                  "biolink:has_count": "results.n_c1_c2",
                  "biolink:name": "results.concept_2_name",
                  "biolink:p_value": "results.adj_p-value"
               },
               "obs_exp_ratio": {
                  "biolink:OMOP": "results.concept_id_2",
                  "biolink:has_count": "results.observed_count",
                  "biolink:name": "results.concept_2_name"
               },
               "relative_frequency": {
                  "biolink:OMOP": "results.concept_id_2",
                  "biolink:has_count": "results.concept_pair_count",
                  "biolink:has_quotient": "results.relative_frequency",
                  "biolink:has_total": "results.concept_2_count",
                  "biolink:name": "results.concept_2_name"
               }
            }
         },
         "info": {
            "contact": {
               "email": "ct2865@cumc.columbia.edu",
               "name": "Casey Ta",
               "url": "http://chunhualab.org/",
               "x-role": "responsible developer"
            },
            "description": "The Columbia Open Health Data (COHD) API provides access to counts and frequencies (i.e., EHR prevalence) of conditions, procedures, drug exposures, and patient demographics, and the co-occurrence frequencies between them. Count and frequency data were derived from the [Columbia University Medical Center's](http://www.cumc.columbia.edu/) [OHDSI](https://www.ohdsi.org/) database including inpatient and outpatient data. Counts are the number of patients associated with the concept, e.g., diagnosed with a condition, exposed to a drug, or who had a procedure. Frequencies are the number of unique patients associated with the concept divided by the total number of patients in the dataset, i.e., prevalence in the electronic health records. To protect patient privacy, all concepts and pairs of concepts where the count <= 10 were excluded, and counts were randomized by the Poisson distribution.         \n\nFour datasets are available: \n1) 5-year non-hierarchical dataset: Includes clinical data from 2013-2017  \n2) lifetime non-hierarchical dataset: Includes clinical data from all dates  \n3) 5-year hierarchical dataset: Counts for each concept include patients from descendant concepts. Includes clinical data from 2013-2017.\n4) BETA! Temporal co-occurrence data\n\nIn the 5-year hierarchical data set, the counts for each concept include the patients from all descendant concepts. For example, the count for ibuprofen (ID 1177480) includes patients with Ibuprofen 600 MG Oral Tablet (ID 19019073 patients), Ibuprofen 400 MG Oral Tablet (ID 19019072), Ibuprofen 20 MG/ML Oral Suspension (ID 19019050), etc. \n\nWhile the lifetime dataset captures a larger patient population and range of concepts, the 5-year dataset has better underlying data consistency. \n\nClinical concepts (e.g., conditions, procedures, drugs) are coded by their standard concept ID in the [OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki). API methods are provided to map to/from other vocabularies supported in OMOP and other ontologies using the EMBL-EBI Ontology Xref Service (OxO). \n\n\nThe following resources are available through this API: \n\n\n1. Metadata: Metadata on the COHD database, including dataset descriptions, number of concepts, etc. \n\n\n2. OMOP: Access to the common vocabulary for name and concept identifier mapping\n\n\n3. Clinical Frequencies: Access to the counts and frequencies of conditions, procedures, and drug exposures, and the associations between them. Frequency was determined as the number of patients with the code(s) / total number of patients. \n\n\n4. Concept Associations: Inferred associations between concepts using chi-square analysis, ratio between observed to expected frequency, and relative frequency. \n\n\nA [Python notebook](https://github.com/WengLab-InformaticsResearch/cohd_api/blob/master/notebooks/COHD_API_Example.ipynb) demonstrates simple examples of how to use the COHD API.\n\n\nCOHD was developed at the [Columbia University Department of Biomedical Informatics](https://www.dbmi.columbia.edu/) as a collaboration between the [Weng Lab](http://people.dbmi.columbia.edu/~chw7007/), [Tatonetti Lab](http://tatonettilab.org/), and the [NCATS Biomedical Data Translator](https://ncats.nih.gov/translator) program (Red Team). This work was supported in part by grants: NCATS OT3TR002027, NLM R01LM009886-08A1, and NIGMS R01GM107145.\n\nThe following external resources may be useful:  \n[OHDSI](https://www.ohdsi.org/)  \n[OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki)  \n[Athena](http://athena.ohdsi.org) (OMOP vocabularies, search, concept relationships, concept hierarchy)  \n[Atlas](http://www.ohdsi.org/web/atlas/) (OMOP vocabularies, search, concept relationships, concept hierarchy, concept sets)      \n",
            "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            },
            "termsOfService": "http://cohd.nsides.io/terms/",
            "title": "Columbia Open Health Data (COHD)",
            "version": "3.0.0",
            "x-accessRestriction": "none",
            "x-implementationLanguage": "Python",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Clinical Data Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/metadata/datasets",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of datasets, including dataset ID, name, and description.",
                     "operationId": "datasets",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "dataset_description": {
                                                   "example": "5-year non-hierarchical dataset: Includes clinical data from 2013-2017",
                                                   "type": "string"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "dataset_name": {
                                                   "example": "5-year non-hierarchical",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of dataset descriptions."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Enumerates the datasets available in COHD",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/domainCounts",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of domains and the number of concepts in each domain.",
                     "operationId": "domainCounts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "count": {
                                                   "example": 1000,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of domain counts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "The number of concepts in each domain",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/domainPairCounts",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of pairs of domains and the number of pairs of concepts in each.",
                     "operationId": "domainPairCounts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "count": {
                                                   "example": 1000,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "domain_id_1": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "domain_id_2": {
                                                   "example": "Drug",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of domain pair counts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "The number of pairs of concepts in each pair of domains",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/patientCount",
               "pathitem": {
                  "get": {
                     "description": "Returns the number of patients in the dataset.",
                     "operationId": "patientCount",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "count": {
                                                   "example": 100000,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of patient counts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "The number of patients in the dataset",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/omop/concepts",
               "pathitem": {
                  "get": {
                     "description": "Returns the OMOP concept names and domains for the given list of concept IDs.",
                     "operationId": "concepts",
                     "parameters": [
                        {
                           "description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"",
                           "example": "192855,2008271",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Concept definitions from concept ID",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/findConceptIDs",
               "pathitem": {
                  "get": {
                     "description": "Searches the OMOP concept table for concept names similar to the query. Returns a list of concepts, including their names and IDs, sorted in decreasing order by the concept's prevalence. ",
                     "operationId": "findConceptIDs",
                     "parameters": [
                        {
                           "description": "The name of the concept to search for, e.g., \"cancer\" or \"ibuprofen\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The dataset to reference when sorting concepts by their frequency. Default: 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The domain (e.g., \"Condition\", \"Drug\", \"Procedure\") to restrict the search to. If not specified, the search will be unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Condition",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The minimum concept count (inclusive) to include a concept in the search results. Setting the min_count to 0 will cause findConceptIDs to return all matching standard OMOP concepts (this can be slow). Setting the min_count to 1 will cause findConceptIDs to only return concepts with count data (much faster). Default: 1.",
                           "example": 1,
                           "in": "query",
                           "name": "min_count",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 368,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Search for OMOP concepts by name and domain",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/conceptAncestors",
               "pathitem": {
                  "get": {
                     "description": "Retrieves the given concept's hierarchical ancestors and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. For more information, see the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).",
                     "operationId": "conceptAncestors",
                     "parameters": [
                        {
                           "description": "An OMOP concept ID, e.g., 19019073",
                           "example": 19019073,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm (only and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted",
                           "example": "RxNorm",
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)",
                           "example": 3,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "ancestor_concept_id": {
                                                   "example": 1177480,
                                                   "type": "integer"
                                                },
                                                "concept_class_id": {
                                                   "example": "Ingredient",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "5640",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 233514,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Ibuprofen",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Drug",
                                                   "type": "string"
                                                },
                                                "max_levels_of_separation": {
                                                   "example": 2,
                                                   "type": "integer"
                                                },
                                                "min_levels_of_separation": {
                                                   "example": 2,
                                                   "type": "integer"
                                                },
                                                "standard_concept": {
                                                   "example": "S",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "RxNorm",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Retrieve the concept's hierarchical ancestors",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/conceptDescendants",
               "pathitem": {
                  "get": {
                     "description": "Retrieves the given concept's hierarchical descendants and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. See the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).",
                     "operationId": "conceptDescendants",
                     "parameters": [
                        {
                           "description": "An OMOP concept ID, e.g., 313217",
                           "example": 313217,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "concept_class_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)",
                           "example": 3,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "49436004",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 53272,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Atrial fibrillation",
                                                   "type": "string"
                                                },
                                                "descendant_concept_id": {
                                                   "example": 313217,
                                                   "type": "integer"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "max_levels_of_separation": {
                                                   "example": 0,
                                                   "type": "integer"
                                                },
                                                "min_levels_of_separation": {
                                                   "example": 0,
                                                   "type": "integer"
                                                },
                                                "standard_concept": {
                                                   "example": "S",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Retrieve the concept's hierarchical descendants",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/mapToStandardConceptID",
               "pathitem": {
                  "get": {
                     "description": "Uses the OMOP concept_relationship table to map from a non-standard concept code (e.g., ICD9CM 715.3) to a standard OMOP concept ID (e.g., 72990). This method may return multiple results if vocabulary_id is not specified and the concept_code is not unique across vocabularies. If both concept_code and vocabulary_id are specified, then 1 result will be returned at most. ",
                     "operationId": "mapToStandardConceptID",
                     "parameters": [
                        {
                           "description": "The concept code to map from, e.g., 715.3",
                           "example": "715.3",
                           "in": "query",
                           "name": "concept_code",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The vocabulary (e.g., \"ICD9CM\") that the concept code belongs to. If this parameter is not specified, the method will return mappings from any source vocabulary with matching concept code. See /omop/vocabularies for the list of supported vocabularies.",
                           "example": "ICD9CM",
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "source_concept_code": {
                                                   "example": "715.3",
                                                   "type": "string"
                                                },
                                                "source_concept_id": {
                                                   "example": 44834979,
                                                   "type": "integer"
                                                },
                                                "source_concept_name": {
                                                   "example": "Osteoarthrosis, localized, not specified whether primary or secondary",
                                                   "type": "string"
                                                },
                                                "source_vocabulary_id": {
                                                   "example": "ICD9CM",
                                                   "type": "string"
                                                },
                                                "standard_concept_id": {
                                                   "example": 72990,
                                                   "type": "integer"
                                                },
                                                "standard_concept_name": {
                                                   "example": "Localized osteoarthrosis uncertain if primary OR secondary",
                                                   "type": "string"
                                                },
                                                "standard_domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Map from a non-standard concept code to a standard OMOP concept ID",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/mapFromStandardConceptID",
               "pathitem": {
                  "get": {
                     "description": "Uses the OMOP concept_relationship table to map from a standard concept ID (e.g., 72990) to concept code(s) (e.g., ICD9CM 715.3, 715.31, 715.32, etc.). An OMOP standard concept ID may map to many concepts in the external vocabulary.",
                     "operationId": "mapFromStandardConceptID",
                     "parameters": [
                        {
                           "description": "The standard OMOP concept id to map from, e.g., 72990",
                           "example": 72990,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The vocabulary (e.g., \"ICD9CM\") to map to. If this parameter is not specified, the method will return mappings to any matching vocabularies. See /omop/vocabularies for the list of supported vocabularies.",
                           "example": "ICD9CM",
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "4-dig nonbill code",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "715.3",
                                                   "type": "string"
                                                },
                                                "concept_id": {
                                                   "example": 44834979,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Osteoarthrosis, localized, not specified whether primary or secondary",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "standard_concept": {
                                                   "example": null,
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "ICD9CM",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Map from a standard concept ID to concept code(s) in an external vocabulary",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/vocabularies",
               "pathitem": {
                  "get": {
                     "description": "List of vocabulary_ids. Useful if you need to use /omop/mapToStandardConceptID to map a concept code from a source vocabulary to the OMOP standard vocabulary.",
                     "operationId": "vocabularies",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of vocabularies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "List of vocabularies",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/xrefToOMOP",
               "pathitem": {
                  "get": {
                     "description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method attempts to use OxO to map from the original ontology to an intermediate ontology that is included in OMOP (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OMOP mappings to the standard concepts. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.",
                     "operationId": "xrefToOMOP",
                     "parameters": [
                        {
                           "description": "Compact URI (CURIE) of the concept to map, e.g., DOID:8398",
                           "example": "DOID:8398",
                           "in": "query",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from the original concept to an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept. One additional step may be taken by the COHD API to map to the OMOP standard concept. Default: 2.",
                           "example": 2,
                           "in": "query",
                           "name": "distance",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "local",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping based on path distances. Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "recommend",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "intermediate_oxo_id": {
                                                   "example": "ICD9CM:715.3",
                                                   "type": "string"
                                                },
                                                "intermediate_oxo_label": {
                                                   "example": "",
                                                   "type": "string"
                                                },
                                                "omop_concept_name": {
                                                   "example": "Localized osteoarthrosis uncertain if primary OR secondary",
                                                   "type": "string"
                                                },
                                                "omop_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "omop_domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "omop_standard_concept_id": {
                                                   "example": 72990,
                                                   "type": "integer"
                                                },
                                                "oxo_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "source_oxo_id": {
                                                   "example": "DOID:8398",
                                                   "type": "string"
                                                },
                                                "source_oxo_label": {
                                                   "example": "osteoarthritis",
                                                   "type": "string"
                                                },
                                                "total_distance": {
                                                   "example": 2,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of mappings from external concepts to OMOP concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/xrefFromOMOP",
               "pathitem": {
                  "get": {
                     "description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method maps from the OMOP standard concept to an intermediate vocabulary included is OxO (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OxO API to map to other ontologies. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.",
                     "operationId": "xrefFromOMOP",
                     "parameters": [
                        {
                           "description": "OMOP standard concept_id to map, e.g., 192855",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "Target ontologies for OxO. Comma separated target prefixes, e.g., \"DOID,UMLS\"",
                           "example": "UMLS",
                           "in": "query",
                           "name": "mapping_targets",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept to the desired ontology. One additional step may be taken by the COHD API to map to the OMOP standard concept to ICD9CM, ICD10CM, SNOMEDCT, or MeSH. Default: 2.",
                           "example": 2,
                           "in": "query",
                           "name": "distance",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "local",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping for each target based on path distances. Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "recommend",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "intermediate_omop_concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "intermediate_omop_concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "intermediate_omop_concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "intermediate_omop_vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                },
                                                "intermediate_oxo_curie": {
                                                   "example": "SNOMEDCT:92546004",
                                                   "type": "string"
                                                },
                                                "intermediate_oxo_label": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "omop_distance": {
                                                   "example": 0,
                                                   "type": "integer"
                                                },
                                                "oxo_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "source_omop_concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "source_omop_concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "source_omop_concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "source_omop_vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                },
                                                "target_curie": {
                                                   "example": "UMLS:C0154091",
                                                   "type": "string"
                                                },
                                                "target_label": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "total_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of mappings from OMOP concepts to external concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/singleConceptFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of individual concepts. Multiple concepts may be requested in a comma separated list.",
                     "operationId": "singleConceptFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"",
                           "example": "192855",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_count": {
                                                   "example": 368,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.0002055371025188907,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of single concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequency of individual concepts",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/pairedConceptFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of a pair of concepts.",
                     "operationId": "pairedConceptFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "A comma pair of OMOP concept ids, e.g., \"192855,2008271\"",
                           "example": "192855,2008271",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_count": {
                                                   "example": 10,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 5.585247351056813e-06,
                                                   "type": "integer"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 2008271,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of paired concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequency of a pair of concepts",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/associatedConceptFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id. Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.",
                     "operationId": "associatedConceptFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "associated_concept_id": {
                                                   "example": 19041324,
                                                   "type": "integer"
                                                },
                                                "associated_concept_name": {
                                                   "example": "Acetaminophen 325 MG Oral Tablet [Tylenol]",
                                                   "type": "string"
                                                },
                                                "associated_domain_id": {
                                                   "example": "Drug",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 277,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.0001547113516242737,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of associated concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequencies of all pairs of concepts given a concept id",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/associatedConceptDomainFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id restricted by domain of the associated concept_id.  Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.",
                     "operationId": "associatedConceptDomainFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Procedure",
                           "in": "query",
                           "name": "domain",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "associated_concept_id": {
                                                   "example": 2211361,
                                                   "type": "integer"
                                                },
                                                "associated_concept_name": {
                                                   "example": "Radiologic examination, chest, 2 views, frontal and lateral",
                                                   "type": "string"
                                                },
                                                "associated_domain_id": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 257,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.00014354085692216007,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of associated concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequencies of all pairs of concepts given a concept id",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/mostFrequentConcepts",
               "pathitem": {
                  "get": {
                     "description": "Retrieves the most frequent concepts.",
                     "operationId": "mostFrequentConcepts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "(Optional) The number of concepts to retreieve, e.g., 100. 0 or unspecified will return all matching concepts.",
                           "example": 100,
                           "in": "query",
                           "name": "q",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "(Optional) The domain_id to restrict to, e.g., \"Condition\", \"Drug\", \"Procedure\". See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Condition",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "(Optional) The vocabulary_id(s) to restrict to, e.g., \"SNOMED\", \"MedDRA\", \"RxNorm\", \"ATC\" etc. Comma separated to include multiple vocabularies, e.g., \"SNOMED,MedDRA\". Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "(Optional) The concept_class_id(s) to restrict to. concept_class_ids are specific to each vocabulary, e.g.,: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Comma separated to include multiple concept_class_ids, e.g., \"PT,HLT\". Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "concept_class_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 233790,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.1305774978203572,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 320128,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Essential hypertension",
                                                   "type": "string"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of most frequent concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Most frequent concepts [by domain]",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/association/chiSquare",
               "pathitem": {
                  "get": {
                     "description": "Returns the chi-square statistic and p-value between pairs of concepts. Results are returned in descending order of the chi-square statistic. Note that due to large sample sizes, the chi-square can become very large. \n\nThe expected frequencies for the chi-square analysis are calculated based on the single concept frequencies and assuming independence between concepts. P-value is calculated with 1 DOF. \n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n",
                     "operationId": "chiSquare",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id_1",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"2008271\". If this parameter is specified, then the chi-square between concept_id_1 and concept_id_2 is returned. If this parameter is not specified, then a list of chi-squared results between concept_id_1 and other concepts is returned.",
                           "example": 2008271,
                           "in": "query",
                           "name": "concept_id_2",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Drug",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "adj_p-value": {
                                                   "description": "Bonferonni adjusted p-value, adjusted with the total number of pairs of concepts in the dataset.",
                                                   "example": 0.0314,
                                                   "type": "number"
                                                },
                                                "chi_square": {
                                                   "example": 370026.1780081638,
                                                   "type": "integer"
                                                },
                                                "concept_2_domain": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_2_name": {
                                                   "example": "Instillation of therapeutic substance into bladder",
                                                   "type": "string"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 4021588,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 3,
                                                   "type": "integer"
                                                },
                                                "p-value": {
                                                   "example": 0.0314,
                                                   "type": "number"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concept pairs and chi-squared values."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Chi-square analysis on pairs of concepts",
                     "tags": [
                        "Concept Associations"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ]
                  }
               }
            },
            {
               "path": "/association/obsExpRatio",
               "pathitem": {
                  "get": {
                     "description": "Returns the natural logarithm of the ratio between the observed count and expected count. Expected count is calculated from the single concept frequencies and assuming independence between the concepts. Results are returned in descending order of ln_ratio.\n\nexpected_count = Count_1_and_2 * num_patients / (Count_1 * Count_2)\n\nln_ratio = ln(expected_count)\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Results for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n",
                     "operationId": "obsExpRatio",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id_1",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.",
                           "example": 2008271,
                           "in": "query",
                           "name": "concept_id_2",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Drug",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The confidence level used for calculating confidence intervals (default 0.99).",
                           "example": 0.99,
                           "in": "query",
                           "name": "confidence",
                           "required": false,
                           "schema": {
                              "type": "number"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_2_domain": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_2_name": {
                                                   "example": "Closed [transurethral] biopsy of bladder",
                                                   "type": "string"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 2003784,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "expected_count": {
                                                   "example": 0.060838982345591645,
                                                   "type": "integer"
                                                },
                                                "ln_ratio": {
                                                   "example": 7.561698473261244,
                                                   "type": "integer"
                                                },
                                                "observed_count": {
                                                   "example": 117,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of paired concepts and observed-expected frequency ratio."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Observed Count / Expected Count",
                     "tags": [
                        "Concept Associations"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ]
                  }
               }
            },
            {
               "path": "/association/relativeFrequency",
               "pathitem": {
                  "get": {
                     "description": "Calculates the relative frequency (i.e., conditional probability) between pairs of concepts. Results are returned in descending order of relative frequency. Note that due to the randomization of the counts, the calculated relative frequencies can exceed the limit of 1.0.\n\nRelative Frequency = Count_1_and_2 / Count_2\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n",
                     "operationId": "relativeFrequency",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id_1",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.",
                           "example": 2008271,
                           "in": "query",
                           "name": "concept_id_2",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict concept_id_2 (the base concept) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Drug",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The confidence level used for calculating confidence intervals (default 0.99).",
                           "example": 0.99,
                           "in": "query",
                           "name": "confidence",
                           "required": false,
                           "schema": {
                              "type": "number"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_2_count": {
                                                   "example": 82,
                                                   "type": "integer"
                                                },
                                                "concept_2_domain": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_2_name": {
                                                   "example": "Radical cystectomy",
                                                   "type": "string"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 2003805,
                                                   "type": "integer"
                                                },
                                                "concept_pair_count": {
                                                   "example": 29,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "relative_frequency": {
                                                   "example": 0.35365853658536583,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of paired concepts and relative frequency."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Relative frequency between pairs of concepts",
                     "tags": [
                        "Concept Associations"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ]
                  }
               }
            },
            {
               "path": "/temporal/conceptAgeCounts",
               "pathitem": {
                  "get": {
                     "description": "Counts of ages when concepts were first observed in a patient. Different concepts will have different bin_widths. All binning schemes start with age 0, and no bin starts with an age > 90. The largest age bin includes all ages greater or equal to the starting age of the bin. For example, with a bin_width of 4, the ages of each bin are [0-3, 4-7, 8-11, ..., 84-87, 88+]. Counts in each bin are independently perturbed with a Poisson distribution. Counts < 10 are suppressed, represented by the value 1. Counts of 0 are reported as 0.\n",
                     "operationId": "conceptAgeCounts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set.",
                           "example": 4,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"313217\"",
                           "example": 313217,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "bin_width": {
                                                   "example": 2,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 313217,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Atrial fibrillation",
                                                   "type": "string"
                                                },
                                                "counts": {
                                                   "description": "Array of counts ordered from 0 to the largest bin.",
                                                   "items": {
                                                      "example": 9000,
                                                      "type": "integer"
                                                   },
                                                   "type": "array"
                                                },
                                                "dataset_id": {
                                                   "example": 4,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "The concept's age distribution"
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Counts of ages when concepts were first observed in a patient",
                     "tags": [
                        "Temporal Clinical Data"
                     ]
                  }
               }
            },
            {
               "path": "/temporal/findSimilarAgeDistributions",
               "pathitem": {
                  "get": {
                     "description": "Finds concepts with a similar concept-age distribution as with the desired concept_id.\nUses Jaccard similarity to compare concept-age distributions\n",
                     "operationId": "findSimilarAgeDistributions",
                     "parameters": [
                        {
                           "description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set.",
                           "example": 4,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"313217\"",
                           "example": 313217,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "True: excludes concepts that frequently co-occur (0-day delta) with concept_id. False: do not exclude. Default is True.",
                           "example": true,
                           "in": "query",
                           "name": "exclude_related",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "description": "(Optional) True: restricts potentially similar concepts to the same type of concept as concept_id, e.g.,  the same domain_id for Conditions, Drugs, and Procedures. For drugs, if the concept is an ingredient, also restricts concept_class_id to 'Ingredient'.\n",
                           "example": true,
                           "in": "query",
                           "name": "restrict_type",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "description": "Minimum threshold for similarity. Range is 0-1, higher is more similar. Default 0.7.",
                           "example": 0.7,
                           "in": "query",
                           "name": "threshold",
                           "required": false,
                           "schema": {
                              "type": "number"
                           }
                        },
                        {
                           "description": "Maximum number of concepts to return at each bin width. Default 20.",
                           "example": 20,
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "bin_width": {
                                                   "example": 2,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 313217,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Atrial fibrillation",
                                                   "type": "string"
                                                },
                                                "counts": {
                                                   "description": "Array of counts ordered from 0 to the largest bin.",
                                                   "items": {
                                                      "example": 9000,
                                                      "type": "integer"
                                                   },
                                                   "type": "array"
                                                },
                                                "dataset_id": {
                                                   "example": 4,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "The concept's age distribution"
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Find concepts with a similar concept-age distribution",
                     "tags": [
                        "Temporal Clinical Data"
                     ]
                  }
               }
            },
            {
               "path": "/temporal/conceptPairDeltaCounts",
               "pathitem": {
                  "get": {
                     "description": "Counts of time differences (deltas) between when a pair of concepts were first observed in a patient. given a pair of concepts (source_concept and target_concept), a positive delta indicates that source_concept was  observed before target_concept. Likewise, a negaitve delta indicates that source_concept was observed after target_concept. Performing this query with the two concepts swapped will produce a mirrored distribution.   \n  \nBin widths grow exponentially, and different concept pairs will have different bin_widths. The binning schemes are as follows (delta bins with negative values mirror the positive delta bins):  \n  bin_width=1: [0 day, 1 day, 2-3 days, 4-7 days, 8-15 days, ..., 2048-4095 days (5.6-11.2y), and 4096+ days\n  (11.2+ years)].  \n  bin_width=2: [0 day, 1-3 days, 4-15 days, 16-63 days, ..., 256-1023 days, 1024+ days (2.8+ years)]  \n  bin_width=4: [0 day, 1-15 days, 16-255 days, 256+ days]  \n  bin_width=8: [0 day, 1-255 days, 256+ days]  \n  bin_width=16: [0 day, 1+ days]  \n  The 0-day bin never gets incorporated into larger bins.\n    \nCounts in each bin are independently perturbed with a Poisson distribution. Counts < 10 are suppressed, represented by the value 1. Counts of 0 are reported as 0.\n",
                     "operationId": "conceptPairDeltaCounts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set. ",
                           "example": 4,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"312327\"",
                           "example": 312327,
                           "in": "query",
                           "name": "source_concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"313217\"",
                           "example": 313217,
                           "in": "query",
                           "name": "target_concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "bin_width": {
                                                   "example": 2,
                                                   "type": "integer"
                                                },
                                                "counts": {
                                                   "description": "Array of counts ordered from the most negative bin to the largest positive bin.",
                                                   "items": {
                                                      "example": 9000,
                                                      "type": "integer"
                                                   },
                                                   "type": "array"
                                                },
                                                "dataset_id": {
                                                   "example": 4,
                                                   "type": "integer"
                                                },
                                                "n": {
                                                   "example": 6,
                                                   "type": "integer"
                                                },
                                                "source_concept_id": {
                                                   "example": 312327,
                                                   "type": "integer"
                                                },
                                                "source_concept_name": {
                                                   "example": "Acute myocardial infarction",
                                                   "type": "string"
                                                },
                                                "target_concept_id": {
                                                   "example": 313217,
                                                   "type": "integer"
                                                },
                                                "target_concept_name": {
                                                   "example": "Atrial fibrillation",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "The concept pair's delta distribution"
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Counts of time deltas between",
                     "tags": [
                        "Temporal Clinical Data"
                     ]
                  }
               }
            },
            {
               "path": "/temporal/sourceToTarget",
               "pathitem": {
                  "get": {
                     "description": "Analysis to determine if there's a temporal relationship between the source_concept and the target_concept.  \nCompares the delta distribution between source_concept and target_concept against delta distributions from other concepts to the target_concept. Find comparable concepts by measuring similarity of the age distributions to the age distribution of the source_concept.\n",
                     "operationId": "sourceToTarget",
                     "parameters": [
                        {
                           "description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set.",
                           "example": 4,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"312327\"",
                           "example": 312327,
                           "in": "query",
                           "name": "source_concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"313217\"",
                           "example": 313217,
                           "in": "query",
                           "name": "target_concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "The concept pair's delta distribution"
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Temporal relationship between source_concept and target_concept.",
                     "tags": [
                        "Temporal Clinical Data"
                     ]
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "translator",
                        "reasoner"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Query the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\n    \nFor the subject node, the id must be specified (category is ignored).\n    \nFor the object node, both the id and category are optional. If id is specified for the object node, then the association between the two identified concepts is returned. If id is not specified and category is specified, the associations between the subject node and all concepts with the specified category are returned. If neither are specified, then the associations between the subject node and all concepts are returned.\nThe COHD data are natively represented using OMOP. COHD will attempt to map between Biolink and OMOP both in the input and response.\nAdditional behavior options can be controlled using the optional parameters in query_options.",
                     "operationId": "query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": {\n        \"n00\": {\n          \"id\": \"DOID:9053\",\n          \"category\": \"biolink:Disease\"\n        },\n        \"n01\": {\n          \"category\": \"biolink:Procedure\"\n        }\n      },\n      \"edges\": {\n        \"e00\": {\n          \"predicate\": \"biolink:correlated_with\",\n          \"subject\": \"n00\",\n          \"object\": \"n01\"\n        }\n      }\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"max_results\": 50,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\n        \"ICD9\",\n        \"SNOMEDCT\",\n        \"DOID\"\n      ],\n      \"biolink:Drug\": [\n        \"RxNorm\"\n      ],\n      \"biolink:Procedure\": [\n        \"ICD10PCS\",\n        \"SNOMEDCT\"\n      ],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query COHD following NCATS Translator Reasoner Standard API",
                     "tags": [
                        "translator",
                        "reasoner"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/0.9.3/query",
               "pathitem": {
                  "post": {
                     "description": "This endpoint is temporarily provided to support TRAPI 0.9.3 queries\nQuery the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\nFor the source node, the curie must be specified (type is ignored).\nFor the target node, both the curie and type are optional. If curie is specified for the target node, then the association between the two identified concepts is returned. If curie is not specified and type is specified, the associations between the source node and all concepts with the specified type are returned. If neither are specified, then the associations between the source node and all concepts are returned.\nCOHD will attempt to map the CURIE to an OMOP concept and the node type to an OMOP domain.",
                     "operationId": "query093",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n  \"max_results\": 50,\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": [\n        {\n          \"id\": \"n00\",\n          \"curie\": \"DOID:9053\",\n          \"type\": \"biolink:Disease\"\n        },\n        {\n          \"id\": \"n01\",\n          \"type\": \"biolink:Procedure\"\n        }\n      ],\n      \"edges\": [\n        {\n          \"id\": \"e00\",\n          \"type\": \"biolink:correlated_with\",\n          \"source_id\": \"n00\",\n          \"target_id\": \"n01\"\n        }\n      ]\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\"ICD9\", \"SNOMEDCT\", \"DOID\"],\n      \"biolink:Drug\": [\"RxNorm\"],\n      \"biolink:Procedure\": [\"ICD10PCS\", \"SNOMEDCT\"],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "successful operation"
                        },
                        "400": {
                           "description": "Invalid status value"
                        }
                     },
                     "summary": "Query COHD following NCATS Translator Reasoner Standard API version 0.9.3",
                     "tags": [
                        "translator",
                        "reasoner"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/translator/biolink_to_omop",
               "pathitem": {
                  "post": {
                     "description": "Map Biolink CURIEs to OMOP concepts",
                     "operationId": "biolink_to_omop",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n    \"curies\": [\n        \"HP:0002907\",\n        \"MONDO:0001187\"\n    ]\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/CurieList"
                              }
                           }
                        },
                        "description": "List of CURIEs",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "example": "{\n  \"MONDO:0001187\": {\n    \"distance\": 2,\n    \"omop_concept_id\": 197508,\n    \"omop_concept_name\": \"Malignant tumor of urinary bladder\"\n  }\n}",
                                 "schema": {
                                    "additionalProperties": {
                                       "description": "Mapping from OMOP concept to Biolink",
                                       "properties": {
                                          "distance": {
                                             "description": "mapping distance",
                                             "type": "integer"
                                          },
                                          "omop_concept_id": {
                                             "type": "integer"
                                          },
                                          "omop_concept_name": {
                                             "type": "string"
                                          }
                                       },
                                       "type": "object"
                                    }
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        }
                     },
                     "summary": "Map from Biolink to OMOP",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/translator/omop_to_biolink",
               "pathitem": {
                  "post": {
                     "description": "Map OMOP concepts to normalized Biolink nodes using SRI Node Normalizer.",
                     "operationId": "omop_to_biolink",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n    \"omop_ids\": [\n        78472,\n        197508\n    ]\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/OmopList"
                              }
                           }
                        },
                        "description": "List of OMOP IDs",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "type": "object"
                                    },
                                    "example": "{\n  \"197508\": {\n    \"equivalent_identifiers\": [\n        {\n            \"identifier\": \"MONDO:0001187\",\n            \"label\": \"urinary bladder cancer\"\n        },\n        {\n            \"identifier\": \"DOID:11054\"\n        },\n        {\n            \"identifier\": \"OMIM:109800\"\n        },\n        {\n            \"identifier\": \"UMLS:C0005684\"\n        },\n        {\n            \"identifier\": \"NCIT:C9334\"\n        },\n        {\n            \"identifier\": \"SNOMEDCT:399326009\"\n        }\n    ],\n    \"id\": {\n        \"identifier\": \"MONDO:0001187\",\n        \"label\": \"urinary bladder cancer\"\n    },\n    \"type\": [\n        \"biolink:Disease\",\n        \"biolink:DiseaseOrPhenotypicFeature\",\n        \"biolink:BiologicalEntity\",\n        \"biolink:NamedThing\"\n    ]\n  }\n}",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized. Mapping from OMOP concept to Biolink normalized nodes. See [SRI Node Normalizer](https://nodenormalization-sri.renci.org/docs#/) for response format"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        }
                     },
                     "summary": "Map from OMOP to Biolink",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "http://tr-kp-clinical.ncats.io/api/"
            },
            {
               "url": "http://cohd.io/api/"
            }
         ],
         "tags": [
            {
               "description": "COHD metadata",
               "name": "Metadata"
            },
            {
               "description": "OMOP Common Data Model concepts",
               "name": "OMOP"
            },
            {
               "description": "Clinical frequency data",
               "name": "Clinical Frequencies"
            },
            {
               "description": "Estimated association between concepts",
               "name": "Concept Associations"
            },
            {
               "description": "Concept-age distributions, concept-pair delta distributions, and temporal analyses",
               "name": "Temporal Clinical Data"
            },
            {
               "description": "NCATS Biomedical Data Translator APIs",
               "name": "translator"
            },
            {
               "description": "Implements the NCATS Translator Reasoner API standards",
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "14cfbb82d72211adde316005a84d6e66",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "john.c.earls@gmail.com",
               "name": "John C. Earls"
            },
            "description": "Big GIM (Gene Interaction Miner) is a Translator Knowledge Source that contains function interaction data for all pairs of genes. Functional interaction data are available from four different sources: 1) tissue-specific gene expression correlations from healthy tissue samples (GTEx), 2) tissue-specific gene expression correlations from cancer samples (TCGA), 3) tissue-specific probabilities of function interaction (GIANT), and 4) direct interactions (BioGRID). The data is stored as a Google BigQuery table enabling fast access.",
            "title": "Big GIM(Gene Interaction Miner)",
            "version": "1.0"
         },
         "paths": [
            {
               "path": "/metadata/study",
               "pathitem": {
                  "get": {
                     "operationId": "get_metadata_studies",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Study"
                                 }
                              }
                           },
                           "description": "Success"
                        }
                     },
                     "summary": "Return all available studies",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/interactions/query/status/{request_id}",
               "pathitem": {
                  "get": {
                     "operationId": "get_interactions_status",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query_request_status"
                                 }
                              }
                           },
                           "description": "OK"
                        },
                        "404": {
                           "description": "Request id not found"
                        }
                     },
                     "summary": "Gets the status of a query request",
                     "tags": [
                        "interactions"
                     ]
                  },
                  "parameters": [
                     {
                        "description": "The request id for a query",
                        "in": "path",
                        "name": "request_id",
                        "required": true,
                        "schema": {
                           "type": "string"
                        }
                     }
                  ]
               }
            },
            {
               "path": "/metadata/openapiv3",
               "pathitem": {
                  "get": {
                     "operationId": "get_open_api_spec",
                     "responses": {
                        "200": {
                           "description": "Success"
                        }
                     },
                     "summary": "Return the OpenAPI v3 spec for this API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/table/{table_name}",
               "pathitem": {
                  "get": {
                     "operationId": "get_metadata_table_resource",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Table"
                                 }
                              }
                           },
                           "description": "Success"
                        },
                        "404": {
                           "description": "Table not found"
                        }
                     },
                     "summary": "Retrieve metadata about a table",
                     "tags": [
                        "metadata"
                     ]
                  },
                  "parameters": [
                     {
                        "description": "the name of a biqquery table",
                        "in": "path",
                        "name": "table_name",
                        "required": true,
                        "schema": {
                           "type": "string"
                        }
                     }
                  ]
               }
            },
            {
               "path": "/metadata/table",
               "pathitem": {
                  "get": {
                     "operationId": "get_metadata_table_resources",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Table"
                                 }
                              }
                           },
                           "description": "Success"
                        }
                     },
                     "summary": "Retrieve list of available tables",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/study/{study_name}",
               "pathitem": {
                  "get": {
                     "operationId": "get_metadata_study",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Study"
                                 }
                              }
                           },
                           "description": "Success"
                        },
                        "404": {
                           "description": "Study not found"
                        }
                     },
                     "summary": "Return a single study and associated substudies",
                     "tags": [
                        "metadata"
                     ]
                  },
                  "parameters": [
                     {
                        "description": "the name of a Big GIM study",
                        "in": "path",
                        "name": "study_name",
                        "required": true,
                        "schema": {
                           "type": "string"
                        }
                     }
                  ]
               }
            },
            {
               "path": "/metadata/tissue/{tissue_name}",
               "pathitem": {
                  "get": {
                     "operationId": "get_tissue",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/TissueSubstudies"
                                 }
                              }
                           },
                           "description": "Success"
                        },
                        "404": {
                           "description": "Tissue not found"
                        }
                     },
                     "summary": "Return a list of substudies and columns associated with a tissue",
                     "tags": [
                        "metadata"
                     ]
                  },
                  "parameters": [
                     {
                        "description": "the name of tissue",
                        "in": "path",
                        "name": "tissue_name",
                        "required": true,
                        "schema": {
                           "type": "string"
                        }
                     }
                  ]
               }
            },
            {
               "path": "/metadata/swagger",
               "pathitem": {
                  "get": {
                     "operationId": "get_swagger_spec",
                     "responses": {
                        "200": {
                           "description": "Success"
                        }
                     },
                     "summary": "Return the swagger v2 spec for this API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/tissue",
               "pathitem": {
                  "get": {
                     "operationId": "get_tissue",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Tissues"
                                 }
                              }
                           },
                           "description": "Success"
                        }
                     },
                     "summary": "Return a list of available tissues",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/table/{table_name}/column/{column_name}",
               "pathitem": {
                  "get": {
                     "operationId": "get_metadata_column_resource",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Column"
                                 }
                              }
                           },
                           "description": "Success"
                        },
                        "404": {
                           "description": "Column not found"
                        }
                     },
                     "summary": "Retrieve metadata about a tables column",
                     "tags": [
                        "metadata"
                     ]
                  },
                  "parameters": [
                     {
                        "description": "the name of a biqquery table",
                        "in": "path",
                        "name": "table_name",
                        "required": true,
                        "schema": {
                           "type": "string"
                        }
                     },
                     {
                        "description": "the name of a column in this biqquery table",
                        "in": "path",
                        "name": "column_name",
                        "required": true,
                        "schema": {
                           "type": "string"
                        }
                     }
                  ]
               }
            },
            {
               "path": "/interactions/query",
               "pathitem": {
                  "get": {
                     "operationId": "get_interactions_query",
                     "parameters": [
                        {
                           "description": "\nThe type of join made on restrictions. Either `intersect` or `union`\n\n**Default**: intersect\n\n**Example**: intersect\n",
                           "in": "query",
                           "name": "restriction_join",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "\nThe maximum number of rows to return.\n\n\n**Default**: 10000\n",
                           "in": "query",
                           "name": "limit",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is greater than the given value.\n\n**Default**: No restrictions\n\n**Example**: TCGA_GBM_Correlation,.2, GTEx_Brain_Correlation,.2\n",
                           "in": "query",
                           "name": "restriction_gt",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is less than the given value.\n\n**Default**: No restrictions\n\n**Example**:TCGA_GBM_Pvalue,1.3, GTEx_Brain_Pvalue,1.3\n",
                           "in": "query",
                           "name": "restriction_lt",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "\nThe table to select from.\n\nAvailable tables are provided by  `/api/metadata/tables`.\n\n**Default**: BigGIM_70_v1\n",
                           "in": "query",
                           "name": "table",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Entrez gene ids to select.\n\nIf not given, the query selects any gene related to a gene in ids 1.\nIf given, the query only selects relations that contain a gene in ids1 and a gene in ids2.\n\n**Default**: all genes.\n\n**Example**:\"5111,6996,57697,6815,889,7112,2176,1019,5888,5706\"\n",
                           "in": "query",
                           "name": "ids2",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is True or False.\n\n**Default**: No restrictions\n\n**Example**: BioGRID_Interaction,True\n",
                           "in": "query",
                           "name": "restriction_bool",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "A comma delimited list of column names to return.\n\nGene ids are always returned and do not need to be specified. If a column is not present, then an error is returned.\n\nAvailable columns are provided by `/api/metadata/tables/{table_name}/columns`.\n\n**Default**: all columns.\n\n**Example**: TCGA_GBM_Correlation,TCGA_GBM_Pvalue,GTEx_Brain_Correlation,GTEx_Brain_Pvalue\n",
                           "in": "query",
                           "name": "columns",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "A comma delimited list of Entrez gene ids to select.\n                \n**Default**: all genes.\n\n**Example**:\"5111,6996,57697,6815,889,7112,2176,1019,5888,5706\"\n",
                           "in": "query",
                           "name": "ids1",
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/The_query_response"
                                 }
                              }
                           },
                           "description": "Success"
                        },
                        "400": {
                           "description": "Bad query request."
                        }
                     },
                     "summary": "Submit a new query request",
                     "tags": [
                        "interactions"
                     ]
                  },
                  "post": {
                     "operationId": "post_interactions_query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query_request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/The_query_response"
                                 }
                              }
                           },
                           "description": "Success"
                        },
                        "400": {
                           "description": "Bad query request."
                        }
                     },
                     "summary": "Submit a new query request",
                     "tags": [
                        "interactions"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "http://biggim.ncats.io/api"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "ISB"
            },
            {
               "name": "gene"
            },
            {
               "name": "similarity"
            },
            {
               "name": "tissue"
            },
            {
               "name": "TCGA"
            },
            {
               "name": "GIANT"
            },
            {
               "name": "BioGrid"
            },
            {
               "name": "GTEx"
            },
            {
               "name": "BigQuery"
            },
            {
               "name": "network"
            },
            {
               "name": "DeepTranslate"
            }
         ]
      },
      {
         "_id": "978fe380a147a8641caf72320862697b",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical-gene-negative": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object.PR,association.evidence",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "negatively_regulates",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "chemical-gene-positive": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object.PR,association.evidence",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "positively_regulates",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "chemical-geneorgeneproduct-negative": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "GeneOrGeneProduct"
                        }
                     ],
                     "parameters": {
                        "fields": "object.PR,association.evidence",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "negatively_regulates",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "chemical-geneorgeneproduct-positive": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "GeneOrGeneProduct"
                        }
                     ],
                     "parameters": {
                        "fields": "object.PR,association.evidence",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "positively_regulates",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "chemical-protein-negative": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object.PR,association.evidence",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "negatively_regulates",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "chemical-protein-positive": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object.PR,association.evidence",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "positively_regulates",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "gene-chemical-negative": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject.CHEBI,association.evidence",
                        "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "negatively_regulated_by",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "gene-chemical-positive": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject.CHEBI,association.evidence",
                        "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "positively_regulated_by",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "geneorgeneproduct-chemical-negative": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "GeneOrGeneProduct"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject.CHEBI,association.evidence",
                        "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "negatively_regulated_by",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "geneorgeneproduct-chemical-positive": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "GeneOrGeneProduct"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject.CHEBI,association.evidence",
                        "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "positively_regulated_by",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "protein-chemical-negative": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject.CHEBI,association.evidence",
                        "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "negatively_regulated_by",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "protein-chemical-positive": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject.CHEBI,association.evidence",
                        "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity",
                        "size": 1000
                     },
                     "predicate": "positively_regulated_by",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical-gene": {
                  "PR": "hits.object.PR",
                  "object_spans": "hits.association.evidence.object_spans",
                  "pubmed": "hits.association.evidence.publications",
                  "relation_spans": "hits.association.evidence.relation_spans",
                  "score": "hits.association.evidence.score",
                  "sentence": "hits.association.evidence.sentence",
                  "subject_spans": "hits.association.evidence.subject_spans"
               },
               "gene-chemical": {
                  "CHEBI": "hits.subject.CHEBI",
                  "object_spans": "hits.association.evidence.object_spans",
                  "pubmed": "hits.association.evidence.publications",
                  "relation_spans": "hits.association.evidence.relation_spans",
                  "score": "hits.association.evidence.score",
                  "sentence": "hits.association.evidence.sentence",
                  "subject_spans": "hits.association.evidence.subject_spans"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Text Mining Targeted Association query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Text Mining Targeted Association API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Text Mining Provider",
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "275bfadd2b4c60c3",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "object.id:CHEMBL.COMPOUND\\:CHEMBL26",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-gene-positive"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-gene-negative"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-chemical-positive"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-chemical-negative"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-protein-positive"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-protein-negative"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/protein-chemical-positive"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/protein-chemical-negative"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-geneorgeneproduct-positive"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-geneorgeneproduct-negative"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/geneorgeneproduct-chemical-positive"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/geneorgeneproduct-chemical-negative"
                        }
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/text_mining_targeted_association"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/text_mining_targeted_association"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "chemical"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "f339b28426e7bf72028f60feefcd7465",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "has_part": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "part_of.go"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_part"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "has_subclass": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "children"
                     },
                     "predicate": "has_subclass",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_subclass"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "part_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of.go"
                     },
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/part_of"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "subclass_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "parents"
                     },
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/subclass_of"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "has_part": {
                  "GO": "_id"
               },
               "has_subclass": {
                  "GO": "children"
               },
               "part_of": {
                  "GO": "part_of.go"
               },
               "subclass_of": {
                  "GO": "parents"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Gene Ontology Cellular Component query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Gene Ontology Cellular Component API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/geneset",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple GO geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Geneset"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching geneset objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of geneset IDs, return the matching geneset object",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/geneset/{genesetid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve geneset objects based on GO geneset ID.  Supports JSONP and CORS as well.",
                           "example": "GO:0098791",
                           "in": "path",
                           "name": "genesetid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Geneset"
                                 }
                              }
                           },
                           "description": "A matching geneset object"
                        },
                        "404": {
                           "description": "A response indicating an unknown geneset ID"
                        }
                     },
                     "summary": "Retrieve geneset objects based on ID",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from DISEASES",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "parents:\"GO:0098791\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch geneset queries and return matching geneset hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_subclass"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/subclass_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/part_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_part"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/go_cc"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/go_cc"
            }
         ],
         "tags": [
            {
               "name": "ontology"
            },
            {
               "name": "cellular component"
            },
            {
               "name": "geneset"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "415c3b1a85ead4ceb58caf00dee9b24e",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "brett.smith@isbscience.org",
               "x-role": "responsible developer"
            },
            "description": "imProving Agent OpenAPI TRAPI Specification",
            "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            },
            "termsOfService": "https://spoke.rbvi.ucsf.edu/license.html",
            "title": "imProving Agent",
            "version": "1.0.0",
            "x-translator": {
               "component": "ARA",
               "team": [
                  "imProving Agent"
               ]
            },
            "x-trapi": {
               "version": "1.0.0"
            }
         },
         "paths": [
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "predicates"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "",
                     "operationId": "query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query reasoner via one of several inputs",
                     "tags": [
                        "query"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://evidara.healthdatascience.cloud/api/v1/"
            }
         ],
         "tags": [
            {
               "description": "Get supported relationships by source and target",
               "name": "predicates"
            },
            {
               "description": "Query reasoner using a predefined question type",
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            },
            {
               "externalDocs": {
                  "description": "Documentation of SPOKE data",
                  "url": "https://spoke.rbvi.ucsf.edu/docs/index.html"
               },
               "name": "SPOKE"
            }
         ]
      },
      {
         "_id": "8f08d1446e0bb9c2b323713ce83e2bd3",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "contraindicatedBy": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "chembl.molecule_chembl_id",
                        "size": "250"
                     },
                     "predicate": "contraindicated_for",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "drugcentral.drug_use.contraindication.umls_cui"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chembl"
                     },
                     "source": "drugcentral",
                     "supportBatch": true
                  }
               ],
               "contraindication": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "drugcentral.drug_use.contraindication"
                     },
                     "predicate": "contraindication",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "chembl.molecule_chembl_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/contraindication"
                     },
                     "source": "drugcentral",
                     "supportBatch": true
                  }
               ],
               "metabolize": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DRUGBANK",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "drugbank.id",
                        "size": "250"
                     },
                     "predicate": "metabolize",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "drugbank.enzymes.gene_name"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/drugbank"
                     },
                     "source": "drugbank",
                     "supportBatch": true
                  }
               ],
               "metabolizedBy": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DRUGBANK",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "drugbank.enzymes"
                     },
                     "predicate": "metabolic_processing_affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "drugbank.id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/metabolizedBy"
                     },
                     "source": "drugbank",
                     "supportBatch": true
                  }
               ],
               "target": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DRUGBANK",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "drugbank.targets"
                     },
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "drugbank.id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/target-drugbank"
                     },
                     "source": "drugbank",
                     "supportBatch": true
                  },
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "drugcentral.bioactivity"
                     },
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "chembl.molecule_chembl_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/target-drugcentral"
                     },
                     "source": "drugcentral",
                     "supportBatch": true
                  }
               ],
               "targetedBy": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DRUGBANK",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "drugbank.id",
                        "size": "250"
                     },
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "drugbank.targets.gene_name"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/drugbank"
                     },
                     "source": "drugbank",
                     "supportBatch": true
                  },
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "chembl.molecule_chembl_id",
                        "size": "250"
                     },
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "drugcentral.bioactivity.uniprot.gene_symbol"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chembl"
                     },
                     "source": "drugcentral",
                     "supportBatch": true
                  }
               ],
               "treatedBy": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "chembl.molecule_chembl_id",
                        "size": "250"
                     },
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "drugcentral.drug_use.indication.umls_cui"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chembl"
                     },
                     "source": "drugcentral",
                     "supportBatch": true
                  }
               ],
               "treats": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "drugcentral.drug_use.indication"
                     },
                     "predicate": "treats",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "chembl.molecule_chembl_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/treats"
                     },
                     "source": "drugcentral",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chembl": {
                  "CHEMBL.COMPOUND": "chembl.molecule_chembl_id"
               },
               "contraindication": {
                  "SNOMED": "drugcentral.drug_use.contraindication.snomed_concept_id",
                  "UMLS": "drugcentral.drug_use.contraindication.umls_cui",
                  "name": "drugcentral.drug_use.contraindication.concept_name"
               },
               "drugbank": {
                  "DRUGBANK": "drugbank.id"
               },
               "metabolizedBy": {
                  "SYMBOL": "drugbank.enzymes.gene_name",
                  "action": "drugbank.enzymes.actions",
                  "function": "drugbank.enzymes.general_function",
                  "name": "drugbank.enzymes.name"
               },
               "target-drugbank": {
                  "SYMBOL": "drugbank.targets.gene_name",
                  "action": "drugbank.targets.actions",
                  "function": "drugbank.targets.general_function",
                  "name": "drugbank.targets.name",
                  "pubmed": "drugbank.targets.pmids"
               },
               "target-drugcentral": {
                  "SYMBOL": "drugcentral.bioactivity.uniprot.gene_symbol",
                  "action": "drugcentral.bioactivity.action_type",
                  "name": "drugcentral.bioactivity.target_name"
               },
               "treats": {
                  "SNOMED": "drugcentral.drug_use.indication.snomed_concept_id",
                  "UMLS": "drugcentral.drug_use.indication.umls_cui",
                  "name": "drugcentral.drug_use.indication.concept_name"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the MyChem.info chem query web services.  Learn more about [MyChem.info](http://MyChem.info/)",
            "termsOfService": "http://MyChem.info/terms",
            "title": "MyChem.info API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/chem",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple chemical IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Chem"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching chemical objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of chemical IDs, return the matching chemical object",
                     "tags": [
                        "chemical"
                     ]
                  }
               }
            },
            {
               "path": "/chem/{chemid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve chemical objects based on ID - currently one of: [InChiKey](https://en.wikipedia.org/wiki/International_Chemical_Identifier#InChIKey), [DrugBank accession number](https://www.drugbank.ca/documentation), [ChEMBLID](https://www.ebi.ac.uk/chembl/faq#faq40), [ChEBI identifier](http://www.ebi.ac.uk/chebi/aboutChebiForward.do), [PubChem CID](https://pubchem.ncbi.nlm.nih.gov/search/help_search.html#Cid), [UNII](https://www.fda.gov/ForIndustry/DataStandards/SubstanceRegistrationSystem-UniqueIngredientIdentifierUNII/).  Supports JSONP and CORS as well.",
                           "example": "USNINKBPBVKHHZ-CYUUQNCZSA-L",
                           "in": "path",
                           "name": "chemid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Chem"
                                 }
                              }
                           },
                           "description": "A matching chemical object"
                        },
                        "404": {
                           "description": "A response indicating an unknown chemical ID"
                        }
                     },
                     "summary": "Retrieve chemical objects based on ID",
                     "tags": [
                        "chemical"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MyChem.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from MyChem.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MyChem.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a MyChem.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://MyChem.info).  Examples: \"Fludara\", \"CHEMBI:63599\", \"DB01073\".",
                           "example": "Fludara",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make chemical queries and return matching chemical hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch chemical queries and return matching chemical hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/metabolizedBy"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/target"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/treats"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/contraindication"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/metabolize"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/targetedBy"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/treatedBy"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/contraindicatedBy"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://mychem.info/v1"
            },
            {
               "description": "Production server",
               "url": "http://mychem.info/v1"
            }
         ],
         "tags": [
            {
               "name": "chemical"
            },
            {
               "name": "drug"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "a7f784626a426d054885a5f33f17d3f8",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "disease-gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "DISEASES.associatedWith"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "DISEASES.doid"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-gene"
                     },
                     "source": "DISEASES",
                     "supportBatch": true
                  }
               ],
               "gene-disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "DISEASES.doid",
                        "size": "250"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "DISEASES.associatedWith.symbol"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-disease"
                     },
                     "source": "DISEASES",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "disease-gene": {
                  "SYMBOL": "DISEASES.associatedWith.symbol",
                  "category": "DISEASES.associatedWith.category"
               },
               "gene-disease": {
                  "DOID": "DISEASES.doid"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the DISEASES query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "DISEASES API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/disease",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple MONDO Disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/disease/{diseaseid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on MONDO disease ID  Supports JSONP and CORS as well.",
                           "example": "MONDO:0016537",
                           "in": "path",
                           "name": "diseaseid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from DISEASES",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a DISEASES disease object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "DISEASES.doid:\"DOID:0110389\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/query-post"
                           }
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/DISEASES"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/DISEASES"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "e4594ac1218186891fb2e48c63e182a3",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph representation of Uberongraph, an integration of ontologies including GO, CHEBI, Uberon, and HPO.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Uberongraph&provider_long=RENCI",
            "title": "Automat Uberongraph",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/uberongraph"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "3f3c925151f42aac9a5aca7a7eabe814",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph integrating DrugBank, DrugCentral, and Aeolus data as provided by [mychem.info](mychem.info).",
            "termsOfService": "http://http://robokop.renci.org:7055/tos?service_long=Automat Mychem&provider_long=RENCI",
            "title": "Automat MyChem",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/mychem"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "a3cfb0c18f630ce73ccf86b1db5117db",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": " A graph of gene families and pathways from [Panther (pantherdb.org)](pantherdb.org)",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Panther&provider_long=RENCI",
            "title": "Automat Panther",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/panther"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "20051e07e2e70ecba18e6bf8f2ca680b",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "rw37@drexel.edu",
               "name": "Rosina Weber",
               "x-id": "RosinaWeber",
               "x-role": "responsible developer"
            },
            "description": "A Translator Reasoner API for the Explanatory Agent",
            "license": {
               "name": "To Be Determined",
               "url": "TBD"
            },
            "termsOfService": "TBD",
            "title": "Explanatory Agent API",
            "version": "1.0",
            "x-reasoner_standard_version": "1.0.0",
            "x-translator": {
               "component": "ARA",
               "team": [
                  "Explanatory Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/predicates/",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:Disease": {
                                          "biolink:Gene": [
                                             "biolink:condition_associated_with_gene"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "Predicates"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            },
            {
               "path": "/query/",
               "pathitem": {
                  "post": {
                     "externalDocs": {
                        "url": "https://github.com/NCATSTranslator/Explanatory-Agent/tree/master/Agent"
                     },
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        },
                        "400": {
                           "description": "The request provided does not conform to the TRAPI standard."
                        },
                        "500": {
                           "description": "An internal server error has occurred."
                        }
                     },
                     "summary": "Get answers to a question",
                     "tags": [
                        "Query"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production Server",
               "url": "https://explanatory-agent.azurewebsites.net/v1.0/"
            }
         ],
         "tags": [
            {
               "name": "explanatory"
            },
            {
               "name": "translator"
            },
            {
               "name": "1.0.0"
            }
         ]
      },
      {
         "_id": "94cb5d61356b04e0be1c51c70945918b",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "help@myvariant.info",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the MyVariant.info Variant Query web services. Learn more about [MyVariant.info](http://myvariant.info/)",
            "termsOfService": "http://myvariant.info/terms/",
            "title": "MyVariant.info API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string. Examples \"rs752396467\", \"possibly_damaging\", \"CDK7\".",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/hgnc.symbol/",
                              "http://identifiers.org/dbsnp/",
                              "http://identifiers.org/ensembl.gene/",
                              "http://identifiers.org/ensembl.transcript/",
                              "http://identifiers.org/ensembl.protein/",
                              "http://identifiers.org/ccds/",
                              "http://identifiers.org/uniprot/",
                              "http://identifiers.org/clinvar/",
                              "http://identifiers.org/omim/",
                              "http://identifiers.org/efo/",
                              "http://identifiers.org/orphanet/",
                              "http://identifiers.org/hgnc/",
                              "http://identifiers.org/pubmed/",
                              "http://identifiers.org/refseq/",
                              "http://identifiers.org/clinicalsignificance/"
                           ]
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with \"hits\" property",
                           "x-JSONLDContext": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/master/myvariant.info/jsonld_context/myvariant_context.json",
                           "x-responseValueType": [
                              {
                                 "path": "_id",
                                 "valueType": "http://identifiers.org/hgvs/"
                              },
                              {
                                 "path": "cadd.gene.genename",
                                 "valueType": "http://identifiers.org/hgnc.symbol/"
                              },
                              {
                                 "path": "clinvar.rsid",
                                 "valueType": "http://identifiers.org/dbsnp/"
                              },
                              {
                                 "path": "cadd.gene.gene_id",
                                 "valueType": "http://identifiers.org/ensembl.gene/"
                              },
                              {
                                 "path": "cadd.gene.feature_id",
                                 "valueType": "http://identifiers.org/ensembl.transcript/"
                              },
                              {
                                 "path": "cadd.gene.ccds_id",
                                 "valueType": "http://identifiers.org/ccds/"
                              },
                              {
                                 "path": "clinvar.uniprot",
                                 "valueType": "http://identifiers.org/uniprot/"
                              },
                              {
                                 "path": "clinvar.omim",
                                 "valueType": "http://identifiers.org/omim/"
                              },
                              {
                                 "path": "clinvar.rcv.accession",
                                 "valueType": "http://identifiers.org/clinvar/"
                              },
                              {
                                 "path": "clinvar.rcv.conditions.identifiers.omim",
                                 "valueType": "http://identifiers.org/omim/"
                              },
                              {
                                 "path": "clinvar.rcv.conditions.identifiers.efo",
                                 "valueType": "http://identifiers.org/efo/"
                              },
                              {
                                 "path": "clinvar.rcv.conditions.identifiers.orphanet",
                                 "valueType": "http://identifiers.org/orphanet/"
                              },
                              {
                                 "path": "clinvar.gene.id",
                                 "valueType": "http://identifiers.org/hgnc/"
                              },
                              {
                                 "path": "dbnsfp.ensembl.proteinid",
                                 "valueType": "http://identifiers.org/ensembl.protein/"
                              },
                              {
                                 "path": "docm.pubmed_id",
                                 "valueType": "http://identifiers.org/pubmed/"
                              },
                              {
                                 "path": "evs.gene.accession",
                                 "valueType": "http://identifiers.org/refseq/"
                              },
                              {
                                 "path": "clinvar.rcv.clinical_significance",
                                 "valueType": "http://identifiers.org/clinicalsignificance/"
                              }
                           ]
                        }
                     },
                     "summary": "Make variant query and return matching variant hits"
                  }
               }
            },
            {
               "path": "/variant/{variantid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Variant HGVS ID, dbSNP ID",
                           "in": "path",
                           "name": "variantid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/hgvs/",
                              "http://identifiers.org/dbsnp/"
                           ]
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A variant object",
                           "x-JSONLDContext": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/master/myvariant.info/jsonld_context/myvariant_context.json",
                           "x-responseValueType": [
                              {
                                 "path": "cadd.gene.genename",
                                 "valueType": "http://identifiers.org/hgnc.symbol/"
                              },
                              {
                                 "path": "clinvar.rsid",
                                 "valueType": "http://identifiers.org/dbsnp/"
                              },
                              {
                                 "path": "cadd.gene.gene_id",
                                 "valueType": "http://identifiers.org/ensembl.gene/"
                              },
                              {
                                 "path": "cadd.gene.feature_id",
                                 "valueType": "http://identifiers.org/ensembl.transcript/"
                              },
                              {
                                 "path": "cadd.gene.ccds_id",
                                 "valueType": "http://identifiers.org/ccds/"
                              },
                              {
                                 "path": "clinvar.uniprot",
                                 "valueType": "http://identifiers.org/uniprot/"
                              },
                              {
                                 "path": "clinvar.rcv.accession",
                                 "valueType": "http://identifiers.org/clinvar/"
                              },
                              {
                                 "path": "clinvar.rcv.conditions.identifiers.omim",
                                 "valueType": "http://identifiers.org/omim/"
                              },
                              {
                                 "path": "clinvar.rcv.conditions.identifiers.efo",
                                 "valueType": "http://identifiers.org/efo/"
                              },
                              {
                                 "path": "clinvar.rcv.conditions.identifiers.orphanet",
                                 "valueType": "http://identifiers.org/orphanet/"
                              },
                              {
                                 "path": "clinvar.gene.id",
                                 "valueType": "http://identifiers.org/hgnc/"
                              },
                              {
                                 "path": "dbnsfp.ensembl.proteinid",
                                 "valueType": "http://identifiers.org/ensembl.protein/"
                              },
                              {
                                 "path": "docm.pubmed_id",
                                 "valueType": "http://identifiers.org/pubmed/"
                              },
                              {
                                 "path": "evs.gene.accession",
                                 "valueType": "http://identifiers.org/refseq/"
                              },
                              {
                                 "path": "clinvar.rcv.clinical_significance",
                                 "valueType": "http://identifiers.org/clinicalsignificance/"
                              }
                           ]
                        }
                     },
                     "summary": "For a given variant id, return the matching variant object"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://myvariant.info/v1"
            }
         ],
         "tags": [
            {
               "name": "variant"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "a8463805ce36964733414a6aaf820cb7",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "patrick@covar.com",
               "name": "Patrick Wang",
               "x-id": "https://github.com/patrickkwang",
               "x-role": "responsible developer"
            },
            "description": "Answer coalesce: This serivce accepts a TRAPI 1.0 object containing answers and returns answers that have been coalesced by property, graph or ontology analysis.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Answer coalesce&provider_long=RENCI",
            "title": "Answer coalesce",
            "version": "0.1.0",
            "x-translator": {
               "component": "ARA",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/coalesce/{method}",
               "pathitem": {
                  "post": {
                     "description": "Answer coalesce operations. You may choose all, property, graph or ontology analysis. ",
                     "operationId": "coalesce_handler_coalesce__method__post",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "method",
                           "required": true,
                           "schema": {
                              "$ref": "#/components/schemas/MethodName"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Response"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Coalesce Handler",
                     "tags": [
                        "Answer coalesce"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://answercoalesce.renci.org"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "ARAGORN"
            },
            {
               "name": "ARA"
            }
         ]
      },
      {
         "_id": "67932b75e2c51d1e1da2bf8263e59f0a",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "help@mygene.info",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the MyGene.info Gene Query web services. Learn more about [MyGene.info](http://mygene.info/)",
            "termsOfService": "http://mygene.info/terms/",
            "title": "MyGene.info API",
            "version": "3.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string. Examples \"CDK2\", \"NM_052827\", \"204639_at\". The detailed query syntax can be found at http://docs.mygene.info/en/latest/doc/query_service.html",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/hgnc.symbol/",
                              "http://identifiers.org/refseq/",
                              "http://identifiers.org/unigene/",
                              "http://identifiers.org/uniprot/",
                              "http://identifiers.org/pdb/",
                              "http://identifiers.org/biocarta.pathway/",
                              "http://identifiers.org/kegg.pathway/",
                              "http://identifiers.org/wikipathways/",
                              "http://identifiers.org/pharmgkb.pathways/",
                              "http://identifiers.org/reactome/"
                           ]
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with \"hits\" property",
                           "x-JSONLDContext": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/master/mygene.info/jsonld_context/mygene_context.json",
                           "x-responseValueType": [
                              {
                                 "path": "hits._id",
                                 "valueType": "http://identifiers.org/ncbigene/"
                              },
                              {
                                 "path": "hits.entrezgene",
                                 "valueType": "http://identifiers.org/ncbigene/"
                              },
                              {
                                 "path": "hits.symbol",
                                 "valueType": "http://identifiers.org/hgnc.symbol/"
                              },
                              {
                                 "path": "hits.taxid",
                                 "valueType": "http://identifiers.org/taxonomy/"
                              }
                           ]
                        }
                     },
                     "summary": "Make gene query and return matching gene hits"
                  }
               }
            },
            {
               "path": "/gene/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired Entrez Gene id works too if it is replaced by a new one, e.g., 245794",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/ncbigene/",
                              "http://identifiers.org/ensembl/"
                           ]
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A gene object",
                           "x-JSONLDContext": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/master/mygene.info/jsonld_context/mygene_context.json",
                           "x-responseValueType": [
                              {
                                 "path": "symbol",
                                 "valueType": "http://identifiers.org/hgnc.symbol/"
                              },
                              {
                                 "path": "unigene",
                                 "valueType": "http://identifiers.org/unigene/"
                              },
                              {
                                 "path": "uniprot.Swiss-Prot",
                                 "valueType": "http://identifiers.org/uniprot/"
                              },
                              {
                                 "path": "pdb",
                                 "valueType": "http://identifiers.org/pdb/"
                              },
                              {
                                 "path": "pathway.biocarta.id",
                                 "valueType": "http://identifiers.org/biocarta.pathway/"
                              },
                              {
                                 "path": "pathway.kegg.id",
                                 "valueType": "http://identifiers.org/kegg.pathway/"
                              },
                              {
                                 "path": "pathway.reactome.id",
                                 "valueType": "http://identifiers.org/reactome/"
                              },
                              {
                                 "path": "pathway.wikipathways.id",
                                 "valueType": "http://identifiers.org/wikipathways/"
                              },
                              {
                                 "path": "pathway.pharmgkb.id",
                                 "valueType": "http://identifiers.org/pharmgkb.pathways/"
                              }
                           ]
                        }
                     },
                     "summary": "For a given gene id, return the matching gene object"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://mygene.info/v3"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "ddd4fdce05c3e1b7b4499c80b8e3fb00",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "patrick@covar.com",
               "name": "Patrick Wang",
               "x-id": "https://github.com/patrickkwang",
               "x-role": "responsible developer"
            },
            "description": "ARAGORN: Performs a query operation which compiles data from numerous ARAGORN ranking agent services.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=ARAGORN&provider_long=RENCI",
            "title": "ARAGORN",
            "version": "0.0.2",
            "x-translator": {
               "component": "ARA",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Performs a query operation which compiles data from numerous ARAGORN ranking agent services.\nThe services are called in the following order, each passing their output to the next service as an input:\n\nStrider -> (optional) Answer Coalesce -> ARAGORN-Ranker:omnicorp overlay -> ARAGORN-Ranker:weight correctness -> ARAGORN-Ranker:score",
                     "operationId": "query_handler_query_post",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "answer_coalesce_type",
                           "required": false,
                           "schema": {
                              "allOf": [
                                 {
                                    "$ref": "#/components/schemas/MethodName"
                                 }
                              ],
                              "default": "graph"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Response"
                                    }
                                 ],
                                 "default": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {
                                             "e01": {
                                                "object": "n1",
                                                "predicate": "biolink:correlated_with",
                                                "subject": "n0"
                                             }
                                          },
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Disease",
                                                "id": "MONDO:0004979"
                                             },
                                             "n1": {
                                                "category": "biolink:ChemicalSubstance"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Response"
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Handler",
                     "tags": [
                        "ARAGORN"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://aragorn.renci.org"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "ARA"
            }
         ]
      },
      {
         "_id": "1c056ffc7ed0dd1229e71c4752239465",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "disease_has_subclass_disease": [
                  {
                     "inputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "id": "{inputs[0]}"
                     },
                     "predicate": "has_subclass",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease_has_subclass_disease"
                     },
                     "source": "disease ontology",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "disease_has_subclass_disease": {
                  "DOID": "_embedded.terms.obo_id",
                  "description": "_embedded.terms.description",
                  "name": "_embedded.terms.label"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@pharmgkb.org",
               "name": "pharmgkb help desk",
               "x-role": "responsible developer"
            },
            "description": "The OLS REST API provides access to key biological data from OLS. The services provide a unified interface to query information about ontology terms from GO (the Gene Ontology) and ECO (the Evidence & Conclusion Ontology), Gene Ontology annotations from the EBI's GOA database, and gene products (proteins from UniProt, RNA from RNAcentral and complexes from ComplexPortal). ",
            "termsOfService": "https://www.ebi.ac.uk/OLS/services",
            "title": "Ontology Lookup Service API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/ontologies/doid/children",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put Disease Ontology ID here, e.g. DOID:0050686",
                           "example": "DOID:0050686",
                           "in": "query",
                           "name": "id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A DISEASE ontolgoy annotation object",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/hasChildren"
                           }
                        }
                     },
                     "summary": "retrieve the children of specified ontology terms",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease_has_subclass_disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://www.ebi.ac.uk/ols/api"
            }
         ],
         "tags": [
            {
               "name": "ontology"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "4652c55b62f5c20dd35acb3141b0a376",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical2disease": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-doid"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-mondo"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  }
               ],
               "chemical2gene": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2gene"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  }
               ],
               "disease2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chembl"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chebi"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  }
               ],
               "disease2gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2gene"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  }
               ],
               "gene2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chembl"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chebi"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  }
               ],
               "gene2disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-doid"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-mondo"
                     },
                     "source": "pharos",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "chemical2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               },
               "chemical2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "disease2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "disease2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "disease2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "gene2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "gene2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "gene2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "gene2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@renci.org",
               "name": "Chris B."
            },
            "description": "Scibite",
            "termsOfService": "https://automat.renci.org",
            "title": "Automat PHAROS API",
            "version": "2.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene/chemical_substance/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2chemical"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/gene/disease/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2disease",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/disease/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2disease",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/gene/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease/gene/{mondo}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put DOID ID here, e.g. \"DOID:123\"",
                           "example": "DOID:123",
                           "in": "path",
                           "name": "mondo",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "disease2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease2gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease/chemical_substance/{mondo}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put DOID ID here, e.g. \"DOID:123\"",
                           "example": "DOID:123",
                           "in": "path",
                           "name": "mondo",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "disease2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease2chemical"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://automat.renci.org/pharos"
            }
         ],
         "tags": [
            {
               "name": "drug"
            },
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "automat"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "eb28713e2e23160e80e88f3a5dabcca4",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "hasHomolog": {
                  "inputs": [
                     {
                        "id": "rgd",
                        "semantic": "Gene"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "symbol",
                        "semantic": "Gene"
                     }
                  ],
                  "parameters": {
                     "geneid": "{input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/gene-homolog"
                  },
                  "supportBatch": false
               }
            },
            "x-bte-response-mapping": {
               "gene-homolog": {
                  "@context": "http://schema.org",
                  "@type": "Gene",
                  "bts:hasHomolog": {
                     "$input": "bts:rgd",
                     "$source": "RGD",
                     "@type": "Gene",
                     "bts:symbol": "ensemblGeneSymbol"
                  },
                  "bts:rgd": "rgd"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@rgd.org",
               "name": "rgd help desk",
               "x-role": "responsible developer"
            },
            "description": "The RGD API",
            "termsOfService": "http://www.rgd.org",
            "title": "RGD API",
            "version": "1.0"
         },
         "paths": [
            {
               "path": "/genes/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "RGD id",
                           "example": "620465",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A RGD object",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/gene-homolog"
                           }
                        }
                     },
                     "summary": "retrieve rgd data",
                     "x-bte-kgs-operations": {
                        "associatedWith": {
                           "$ref": "#/components/x-bte-kgs-operations/hasHomolog"
                        }
                     }
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://rest.rgd.mcw.edu/rgdws"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "gene"
            }
         ]
      },
      {
         "_id": "81955d376a10505c1c69cd06dbda3047",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "Gene-affected_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affected_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affected_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affected_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affected_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affected_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affected_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affected_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affected_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affected_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-affects-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-affects-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-causes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-causes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-causes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-causes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupted_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupted_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupted_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupted_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-disrupts-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-disrupts-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulated_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulates-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-negatively_regulates-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-physically_interacts_with-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulated_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-positively_regulates-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-prevents-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "prevents"
                     },
                     "path": "/query",
                     "predicate": "prevents",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-prevents-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-related_to-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-related_to-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-related_to-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-related_to-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-related_to-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-related_to-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-related_to-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-related_to-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-related_to-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-related_to-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-related_to-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-related_to-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-related_to-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-related_to-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Gene-treats-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "treats"
                     },
                     "path": "/query",
                     "predicate": "treats",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-treats-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "Gene-affected_by-BiologicalProcess": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Gene-affected_by-CellularComponent": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Gene-affected_by-ChemicalSubstance": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Gene-affected_by-Disease": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Gene-affected_by-Gene": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Gene-affects-AnatomicalEntity": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-affects-BiologicalProcess": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-affects-Cell": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-affects-CellularComponent": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-affects-ChemicalSubstance": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-affects-Disease": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-affects-Gene": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-affects-PhenotypicFeature": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Gene-causes-BiologicalProcess": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "Gene-causes-Disease": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "Gene-disrupted_by-BiologicalProcess": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Gene-disrupted_by-ChemicalSubstance": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Gene-disrupted_by-Disease": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Gene-disrupted_by-Gene": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Gene-disrupts-AnatomicalEntity": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-disrupts-BiologicalProcess": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-disrupts-Cell": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-disrupts-CellularComponent": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-disrupts-ChemicalSubstance": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-disrupts-Disease": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-disrupts-Gene": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-disrupts-PhenotypicFeature": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Gene-negatively_regulated_by-AnatomicalEntity": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulated_by-BiologicalProcess": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulated_by-Cell": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulated_by-CellularComponent": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulated_by-ChemicalSubstance": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulated_by-Disease": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulated_by-Gene": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulated_by-PhenotypicFeature": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Gene-negatively_regulates-BiologicalProcess": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Gene-negatively_regulates-CellularComponent": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Gene-negatively_regulates-ChemicalSubstance": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Gene-negatively_regulates-Disease": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Gene-negatively_regulates-Gene": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Gene-negatively_regulates-PhenotypicFeature": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Gene-physically_interacts_with-AnatomicalEntity": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-physically_interacts_with-BiologicalProcess": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-physically_interacts_with-Cell": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-physically_interacts_with-CellularComponent": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-physically_interacts_with-ChemicalSubstance": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-physically_interacts_with-Disease": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-physically_interacts_with-Gene": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-physically_interacts_with-PhenotypicFeature": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Gene-positively_regulated_by-AnatomicalEntity": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulated_by-BiologicalProcess": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulated_by-Cell": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulated_by-CellularComponent": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulated_by-ChemicalSubstance": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulated_by-Disease": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulated_by-Gene": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulated_by-PhenotypicFeature": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Gene-positively_regulates-AnatomicalEntity": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-positively_regulates-BiologicalProcess": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-positively_regulates-Cell": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-positively_regulates-CellularComponent": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-positively_regulates-ChemicalSubstance": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-positively_regulates-Disease": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-positively_regulates-Gene": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-positively_regulates-PhenotypicFeature": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Gene-prevents-Disease": {
                  "pmid": "prevents.pmid",
                  "umls": "prevents.umls"
               },
               "Gene-related_to-AnatomicalEntity": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Gene-related_to-BiologicalProcess": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Gene-related_to-Cell": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Gene-related_to-ChemicalSubstance": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Gene-related_to-Disease": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Gene-related_to-Gene": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Gene-related_to-PhenotypicFeature": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Gene-treats-Disease": {
                  "pmid": "treats.pmid",
                  "umls": "treats.umls"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)",
            "termsOfService": "http://biothings.ncats.io",
            "title": "SEMMED Gene API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/gene/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on ID",
                           "example": "C0004096",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from mydisease.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a mydisease.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/query-post"
                           }
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-affects-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-causes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-causes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-prevents-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-related_to-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-related_to-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-related_to-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-related_to-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-related_to-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-related_to-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-related_to-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-treats-Disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://biothings.ncats.io/semmedgene"
            }
         ],
         "tags": [
            {
               "name": "disease"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "semmed"
            }
         ]
      },
      {
         "_id": "89054eff6ee6d91641d278d9ffdb3993",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "vincent.emonet@maastrichtuniversity.nl"
            },
            "description": "Translator Reasoner API for the Knowledge Collaboratory, hosted on the [Nanopublications network](http://nanopub.org/wordpress/), for annotated drug indications or any other BioLink-compliant claims. \n\n This Open API supports [Translator Reasoner API](https://github.com/NCATSTranslator/ReasonerAPI) version `1.0.0-beta` queries and the [`KGX`](https://github.com/biolink/kgx) format \n\nSee the API GitHub repository: [github.com/MaastrichtU-IDS/knowledge-collaboratory-api](https://github.com/MaastrichtU-IDS/knowledge-collaboratory-api) \n\nThis service is supported by the [NCATS Translator project](https://ncats.nih.gov/translator/about)",
            "license": {
               "name": "MIT license",
               "url": "https://opensource.org/licenses/MIT"
            },
            "termsOfService": "https://github.com/MaastrichtU-IDS/knowledge-collaboratory-api/blob/master/LICENSE",
            "title": "Translator Knowledge Collaboratory API",
            "version": "1.0.0-beta",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Clinical Data Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/kgx",
               "pathitem": {
                  "get": {
                     "operationId": "api.get_kgx",
                     "parameters": [
                        {
                           "description": "Get drug indications from which KG",
                           "in": "query",
                           "name": "from_kg",
                           "schema": {
                              "default": "NeuroDKG",
                              "enum": [
                                 "NeuroDKG",
                                 "Nanopublications"
                              ],
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/zip": {
                                 "schema": {
                                    "format": "binary",
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Zip file with nodes and edges files in KGX TSV format"
                        }
                     },
                     "summary": "Get the Knowledge Collaboratory drug indications in KGX TSV format (TSV files in a .zip)",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "operationId": "api.get_predicates",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "predicates"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Send a [ReasonerAPI](https://github.com/NCATSTranslator/ReasonerAPI) query to request the predicted targets given: a source node, and the relation to predict. Use classes and relations from the [BioLink model](https://biolink.github.io/biolink-model)",
                     "operationId": "api.post_reasoner_query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query reasoner via one of several inputs",
                     "tags": [
                        "query"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://api.collaboratory.semanticscience.org"
            }
         ],
         "tags": [
            {
               "description": "Get supported relationships by source and target",
               "name": "predicates"
            },
            {
               "description": "Query reasoner using a predefined question type",
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "2e2f0e06199e0dd59d046b75c86c14a8",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "lisa@renci.org",
               "name": "Lisa Stillwell"
            },
            "description": "\nThis API returns data from the US Census Bureau American Community Survey (ACS) for a given spatial location of interest.\n\nThe API returns estimated values for socio-economic variables and related variables for small geographic areas that may act as indirect indicators of relevant health behaviors and outcomes. The data are collected by the US Census Bureau and are publicly available.\n\nThe variables are taken from the five-year summary data file of the US Census Bureau ACS, which is constructed from five annual waves of the bureau\u2019s largest household survey. Approximately, two million households have completed the survey annually since calendar year 2005. (Five waves of the survey before 2005 sampled approximately 500,000 households each.) See\u00a0https://www.census.gov/acs/www/methodology/sample-size-and-data-quality/sample-size/\u00a0for more detail. Microdata are available, but small-area data are only available in summary tabulations.\n\nValues are provided at the US Census Block Group level, representing the 2007-2011 and 2012-2016 calendar-year periods for locations within the continental USA. Block groups, the smallest geographic area for which sample survey data are released, generally contain 600 to 3,000 people (e.g., the size of a single city apartment building). Block Groups are aggregates of an average of 39 Blocks each, each of which is delineated by visible and invisible geographic boundaries. Block groups, in turn, are aggregated into Census Tracts, which generally have a population size between 1,200 and 8,000 people, with an optimum size of 4,000 people. Census Tracts aggregate into counties and counties into states. Metropolitan and micropolitan areas are aggregates of counties. See\u00a0https://www2.census.gov/geo/pdfs/reference/geodiagram.pdf\u00a0for further detail. Census geography, even Block Groups, may cross municipal lines and may include both urbanized and rural areas. Because population is a large factor in determining Census geography, some Block Groups may cover an extensive rural or wilderness area while others are quite compact. Census Block, Block Group, and Tract boundaries may change somewhat with each decennial Census, but remain stable in between Censuses.\n\nThe US Census Bureau is mandated to preserve the confidentiality of individual-level data. Therefore, data are often summarized, coarsened into categories, or suppressed by complex secret algorithms (especially, but not limited to household income data). In addition, because the variables of interest may only apply to a small subset of Block Group missing data can occur. In some versions of the data, calculated values are suppressed in Block Groups with less than 50 residents.\n\nStandard errors for the socio-demographic variables are provided. Because each of the values in the ACS data files are summary statistics calculated from sample survey data for each Block Group, different samples yield somewhat different values. Therefore, the Census Bureau generates 80 replicate values for selected variables. These provide the basis for the estimated standard errors of the estimates.\n\nThe currently available variables are listed here:\n\n **(2007-2011 data)**\n- **YEARS**\u00a0\u2013 the range of years for which this census data is valid\n- **GEOID**\u00a0\u2013 a FIPS like code for identifying which census block group this data pertains to, see (https://www.census.gov/geo/reference/geoidentifiers.html)\n- **EstTotalPopulation**\u00a0- estimated population count in block group\n- **MedianHouseholdIncome**\u00a0- estimated median household income\n- **EstResidentialDensity**\u00a0- block group population density\n- **EstPropNonHispWhite**\u00a0\u2013 proportion of the block group population that is non-Hispanic white\n- **EstPropPersons5PlusNoEnglish**\u00a0- proportion of the block group population aged 5 plus sometimes speaking a language other than English at home\n- **EstPropMaleLittleWork**\u00a0- proportion of block group males aged 16-64 who worked less than 26 weeks in the previous year\n- **EstPropHouseholdsNoAuto**\u00a0- proportion of the block group households with no automobile\n- **EstPropHouseholdSSI**\u00a0- proportion of the block group households receiving Supplemental Security Income\n- **EstPropHouseholdPA**\u00a0- proportion of the block group households receiving Public Assistance\n- **EstPropHighSchoolMaxEducation**\u00a0- proportion of the block group population aged 25 and up with a HS diploma or less\n- **EstPropHighSchoolDropout**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates\n- **EstPropHighSchoolDropoutNoWork**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates and are without work\n- **EstPropFemaleHouseholdNoSpouse**\u00a0- proportion of the block group family households headed by a female (no male partner present)\n- **EstPropFemaleHouseholdFamilyChild**\u00a0- proportion of the block group family households headed by a female with related children aged 18 or under (no male partner present)\n- **EstPropFemaleHouseholdAnyChild**\u00a0- proportion of the block group total households headed by a female with any children aged 18 or less (no male partner present)\n\n **(2012-2016 data)**\n- **YEARS**\u00a0\u2013 the range of years for which this census data is valid\n- **GEOID**\u00a0\u2013 a FIPS like code for identifying which census block group this data pertains to, see (https://www.census.gov/geo/reference/geoidentifiers.html)\n- **EstTotalPopulation**\u00a0- estimated population count in block group\n- **EstTotalPopulation_SE**\u00a0- standard error of total population in block group\n  - **EstResidentialDensity**\u00a0- block group population density\n- **EstResidentialDensity_SE**\u00a0- standard error of residential population density in block group\n- **MedianHouseholdIncome**\u00a0- estimated median household income\n- **MedianHouseholdIncome_SE**\u00a0- standard error of median household income\n- **EstPropPersonsNoHealthIns**\u00a0- proportion of the block group population with no health insurance - **EstPropPersonsNoHealthIns_SE**\u00a0- standard error of proportion of the block group population with no health insurance\n- **EstPropNonHispWhite**\u00a0\u2013 proportion of the block group population that is non-Hispanic white\n- **EstPropNonHispWhite_SE**\u00a0- standard error of proportion of the block group population that  is non-Hispanic white\n- **EstPropPersons5PlusNoEnglish**\u00a0- proportion of the block group population aged 5 plus sometimes speaking a language other than English at home\n- **EstPropPersons5PlusNoEnglish_SE**\u00a0- standard error of proportion of the block group population aged 5 plus sometimes speaking a language other than English at home\n- **EstPropMaleLittleWork**\u00a0- proportion of block group males aged 16-64 who worked less than 26 weeks in the previous year\n- **EstPropHouseholdsNoAuto**\u00a0- proportion of the block group households with no automobile\n- **EstPropHouseholdsNoAuto_SE**\u00a0- standard error of proportion of the block group households with no automobile\n- **EstPropHouseholdSSI**\u00a0- proportion of the block group households receiving Supplemental Security Income\n- **EstPropHouseholdSSI_SE**\u00a0- standard error of proportion of the block group households receiving Supplemental Security Income\n- **EstPropHouseholdPA**\u00a0- proportion of the block group households receiving Public Assistance\n- **EstPropHouseholdPA_SE**\u00a0- standard error of proportion of the block group households receiving Public Assistance\n- **EstPropHighSchoolMaxEducation**\u00a0- proportion of the block group population aged 25 and up with a HS diploma or less\n- **EstPropHighSchoolMaxEducation_SE**\u00a0- standard error of proportion of the block group population aged 25 and up with a HS diploma or less\n- **EstPropHighSchoolDropout**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates\n- **EstPropHighSchoolDropoutNoWork**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates and are without work\n- **EstPropFemaleHouseholdNoSpouse**\u00a0- proportion of the block group family households headed by a female (no male partner present)\n- **EstPropFemaleHouseholdNoSpouse_SE**\u00a0- standard error of proportion of the block group family households headed by a female (no male partner present)\n- **EstPropFemaleHouseholdFamilyChild**\u00a0- proportion of the block group family households headed by a female with related children aged 18 or under (no male partner present)\n- **EstPropFemaleHouseholdFamilyChild_SE**\u00a0- standard error of proportion of the block group family households headed by a female with related children aged 18 or under (no male partner present)\n- **EstPropFemaleHouseholdAnyChild**\u00a0- proportion of the block group total households headed by a female with any children aged 18 or less (no male partner present)\n- **EstPropFemaleHouseholdAnyChild_SE**\u00a0- standard error of proportion of the block group total households headed by a female with any children aged 18 or less (no male partner present)\n\nLocations are expressed using WGS84 decimal format. WGS84 is the World Geodetic System for expressing latitude and longitude. For example, Raleigh, North Carolina is at latitude 35.7796 and longitude -78.6382.\n\nAdditional details on the data can be found in this documentation: (https://github.com/lstillwe/socio-economic-api/blob/master/docs/CensusData.md)\n",
            "license": {
               "name": "MIT",
               "url": "http://opensource.org/licenses/MIT"
            },
            "title": "Socio-Environmental Exposures API",
            "version": "1.0.1"
         },
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "a680e39140826113c3c9f426dc0a7289",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A literature co-occurence graph based on the [scibite parsing (https://github.com/SciBiteLabs/CORD19)](https://github.com/SciBiteLabs/CORD19) of the CORD-19 paper set.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Cord19%20Scibite&provider_long=RENCI",
            "title": "Automat Cord19 Scibite",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/cord19-scibite"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "34bad236d77bea0a0ee6c6cba5be54a6",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "has_part": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "part_of.go"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_part"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "has_subclass": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "children"
                     },
                     "predicate": "has_subclass",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_subclass"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "part_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of.go"
                     },
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/part_of"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "subclass_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "parents"
                     },
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/subclass_of"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "has_part": {
                  "GO": "_id"
               },
               "has_subclass": {
                  "GO": "children"
               },
               "part_of": {
                  "GO": "part_of.go"
               },
               "subclass_of": {
                  "GO": "parents"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Gene Ontology Molecular Activity query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Gene Ontology Molecular Activity API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/geneset",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple GO geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Geneset"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching geneset objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of geneset IDs, return the matching geneset object",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/geneset/{genesetid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve geneset objects based on GO geneset ID.  Supports JSONP and CORS as well.",
                           "example": "GO:0018672",
                           "in": "path",
                           "name": "genesetid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Geneset"
                                 }
                              }
                           },
                           "description": "A matching geneset object"
                        },
                        "404": {
                           "description": "A response indicating an unknown geneset ID"
                        }
                     },
                     "summary": "Retrieve geneset objects based on ID",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from DISEASES",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "parents:\"GO:0016705\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch geneset queries and return matching geneset hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_subclass"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/subclass_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/part_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_part"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/go_mf"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/go_mf"
            }
         ],
         "tags": [
            {
               "name": "ontology"
            },
            {
               "name": "molecular activity"
            },
            {
               "name": "geneset"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "adf20dd6ff23dfe18e8e012bde686e31",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical-gene": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "association.context.disease.mondo,subject.NCBIGene,association.effect_size,association.pvalue",
                        "q": "object.PUBCHEM:{inputs[0]} AND association.effect_size:<0 AND association.pvalue:<0.05",
                        "size": "1000",
                        "sort": "association.pvalue"
                     },
                     "predicate": "gene_has_variant_that_contributes_to_drug_response_association",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "gene-chemical": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "association.context.disease.mondo,object.PUBCHEM,association.effect_size,association.pvalue",
                        "q": "subject.NCBIGene:{inputs[0]} AND association.effect_size:<0 AND association.pvalue:<0.05",
                        "size": "1000",
                        "sort": "association.pvalue"
                     },
                     "predicate": "gene_has_variant_that_contributes_to_drug_response_association",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical-gene": {
                  "NCBIGene": "hits.subject.NCBIGene",
                  "disease_context": "hits.association.context.disease.mondo",
                  "effect_size": "hits.association.effect_size",
                  "pvalue": "hits.association.pvalue"
               },
               "gene-chemical": {
                  "PUBCHEM": "hits.object.PUBCHEM",
                  "disease_context": "hits.association.context.disease.mondo",
                  "effect_size": "hits.association.effect_size",
                  "pvalue": "hits.association.pvalue"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Drug Response KP query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Drug Response KP API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Multiomics Provider",
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "NRAS-TCGA-LUAD",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "subject.NCBIGene:51742",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-chemical"
                        }
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/drug_response_kp"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/drug_response_kp"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "chemical"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "51742c9f6ca40d46bdeb6facd76257ff",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on the [Human Metabolome DataBase (hmdb.org)](hmdb.org).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat HMDB&provider_long=RENCI",
            "title": "Automat HMDB",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/hmdb"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "59dce17363dce279d389100834e43648",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "PathwayHasGene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "REACT",
                           "semantic": "Pathway"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "entrezgene",
                        "size": 1000,
                        "species": "human"
                     },
                     "predicate": "functional_association",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "pathway.reactome.id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/functional_association_reactome_gene"
                     },
                     "source": "CPDB",
                     "supportBatch": true
                  },
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "REACT",
                           "semantic": "Pathway"
                        }
                     ],
                     "parameters": {
                        "fields": "pathway.reactome",
                        "species": "human"
                     },
                     "predicate": "functional_association",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "entrezgene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/functional_association_reactome"
                     },
                     "source": "CPDB",
                     "supportBatch": true
                  }
               ],
               "enablesMF": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "go.MF"
                     },
                     "predicate": "functional_association",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "entrezgene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/functional_association_mf"
                     },
                     "source": "entrez",
                     "supportBatch": true
                  }
               ],
               "hasGeneProduct": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "ENSEMBL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROTKB",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "uniprot.Swiss-Prot"
                     },
                     "predicate": "has_gene_product",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "ensembl.gene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_gene_product"
                     },
                     "supportBatch": true
                  },
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "ENSEMBL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "ENSEMBL",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "ensembl.protein"
                     },
                     "predicate": "has_gene_product",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "ensembl.gene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_gene_product"
                     },
                     "supportBatch": true
                  }
               ],
               "hasHomolog": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MGI",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "pantherdb.ortholog"
                     },
                     "predicate": "homologous_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "entrezgene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/homologous_to"
                     },
                     "supportBatch": true
                  }
               ],
               "hasTranscript": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "ENSEMBL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "ENSEMBL",
                           "semantic": "Transcript"
                        }
                     ],
                     "parameters": {
                        "fields": "ensembl.transcript"
                     },
                     "predicate": "gene_to_transcript_relationship",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "ensembl.gene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene_to_transcript_relationship"
                     },
                     "supportBatch": true
                  }
               ],
               "involvedInBP": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "go.BP"
                     },
                     "predicate": "functional_association",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "entrezgene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/functional_association_bp"
                     },
                     "source": "entrez",
                     "supportBatch": true
                  }
               ],
               "involvedInCC": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "go.CC"
                     },
                     "predicate": "functional_association",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "entrezgene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/functional_association_cc"
                     },
                     "source": "entrez",
                     "supportBatch": true
                  }
               ],
               "involvedInPathway": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "WIKIPATHWAYS",
                           "semantic": "Pathway"
                        }
                     ],
                     "parameters": {
                        "fields": "pathway.wikipathways"
                     },
                     "predicate": "functional_association",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "entrezgene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/functional_association_wikipathways"
                     },
                     "source": "CPDB",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "ENSEMBL": "ensembl.gene",
               "HGNC": "HGNC",
               "NCBIGene": "entrezgene",
               "OMIM": "MIM",
               "PHARMGKB": "pharmgkb",
               "PHAROS": "pahros.target_id",
               "SYMBOL": "symbol",
               "UMLS": "umls.cui",
               "description": "summary",
               "functional_association_bp": {
                  "GO": "go.BP.id",
                  "evidence": "go.BP.evidence",
                  "pubmed": "go.BP.pubmed",
                  "term": "go.BP.term"
               },
               "functional_association_cc": {
                  "GO": "go.CC.id",
                  "evidence": "go.CC.evidence",
                  "pubmed": "go.CC.pubmed",
                  "term": "go.CC.term"
               },
               "functional_association_mf": {
                  "GO": "go.MF.id",
                  "evidence": "go.MF.evidence",
                  "pubmed": "go.MF.pubmed",
                  "term": "go.MF.term"
               },
               "functional_association_reactome": {
                  "NCBIGene": "entrezgene"
               },
               "functional_association_wikipathways": {
                  "WIKIPATHWAYS": "pathway.wikipathways.id",
                  "name": "pathway.wikipathways.name"
               },
               "gene_to_transcript_relationship": {
                  "ENSEMBL": "ensembl.transcript"
               },
               "has_gene_product": {
                  "ENSEMBL": "ensembl.protein",
                  "UNIPROTKB": "uniprot.Swiss-Prot"
               },
               "homologous_to": {
                  "ENSEMBL": "pantherdb.ortholog.Ensembl",
                  "FlyBase": "pantherdb.ortholog.FlyBase",
                  "HGNC": "pantherdb.ortholog.HGNC",
                  "MGI": "pantherdb.ortholog.MGI",
                  "POMBASE": "pantherdb.ortholog.PomBase",
                  "RGD": "pantherdb.ortholog.RGD",
                  "SGD": "pantherdb.ortholog.SGD",
                  "TAIR": "pantherdb.ortholog.TAIR",
                  "ZFIN": "pantherdb.ortholog.ZFIN",
                  "dictyBase": "pantherdb.ortholog.dictyBase",
                  "inTaxon": "pantherdb.ortholog.taxid"
               },
               "inTaxon": "taxid",
               "name": [
                  "name",
                  "other_names"
               ]
            }
         },
         "info": {
            "contact": {
               "email": "help@mygene.info",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the MyGene.info Gene Query web services. Learn more about [MyGene.info](http://mygene.info/)",
            "termsOfService": "http://mygene.info/terms/",
            "title": "MyGene.info API",
            "version": "3.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/species",
                           "name": "species"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple geneids seperated by comma, e.g., \"ids=1017,1018\" or \"ids=695,ENSG00000123374\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Gene"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "a list of matching gene objects"
                        }
                     },
                     "summary": "For a list of gene ids, return the matching gene objects",
                     "tags": [
                        "annotation"
                     ]
                  }
               }
            },
            {
               "path": "/gene/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired Entrez Gene id works too if it is replaced by a new one, e.g., 245794",
                           "example": "1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Gene"
                                 }
                              }
                           },
                           "description": "A matching gene object"
                        }
                     },
                     "summary": "Retrieve gene annotation object based on Entrez or Ensembl gene id, support JSONP and CORS as well.",
                     "tags": [
                        "annotation"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MyGene.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from MyGene.info."
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Pass a search term to filter the available fields, e.g. \"search=clinvar\".",
                           "in": "query",
                           "name": "search",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".",
                           "in": "query",
                           "name": "prefix",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MyGene.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from MyGene.info."
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string. Examples \"CDK2\", \"NM_052827\", \"204639_at\", \"chr1:151,073,054-151,383,976\", \"hg19.chr1:151073054-151383976\". The detailed query syntax can be found from our [docs](http://docs.mygene.info/en/latest/doc/query_service.html).",
                           "example": "CDK2",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/species",
                           "name": "species"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "description": "a single field or comma-separated fields to return facets, for example, \"facets=taxid\", \"facets=taxid,type_of_gene\".",
                           "in": "query",
                           "name": "facets",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "relevant when faceting on species (i.e., \u201cfacets=taxid\u201d are passed). It\u2019s used to pass species filter without changing the scope of faceting, so that the returned facet counts won\u2019t change. Either species name or taxonomy id can be used, just like \u201cspecies\u201d parameter.",
                           "in": "query",
                           "name": "species_facet_filter",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "when passed as \u201cTrue\u201d or \u201c1\u201d, the query returns only the hits with valid Entrez gene ids. Default: False.",
                           "in": "query",
                           "name": "entrezonly",
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "description": "when passed as \u201cTrue\u201d or \u201c1\u201d, the query returns only the hits with valid Ensembl gene ids. Default: False.",
                           "in": "query",
                           "name": "ensemblonly",
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response object with \"hits\" property"
                        }
                     },
                     "summary": "Make gene query and return matching gene list. Support JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/species",
                           "name": "species"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=1017,1018\" or \"q=CDK2+BTK\"",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "Specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=entrezgene\", \"scopes=entrezgene,ensemblgene\". The available \"fields\" can be passed to \"scopes\" parameter are listed [here](http://mygene.info/doc/query_service.html#available-fields). Default: \"scopes=entrezgene,ensemblgene,retired\" (either Entrez or Ensembl gene ids).",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "q"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with \"hits\" property"
                        }
                     },
                     "summary": "Make gene batch query and return matching gene hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/enablesMF"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/involvedInBP"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/involvedInCC"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/involvedInPathway"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/hasTranscript"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/hasGeneProduct"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/hasHomolog"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PathwayHasGene"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://mygene.info/v3"
            },
            {
               "description": "Production server",
               "url": "http://mygene.info/v3"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "cc857d5b7c8b7609b5bbb38ff990bfff",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "has_part": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "part_of.go"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_part"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "has_subclass": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "children"
                     },
                     "predicate": "has_subclass",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_subclass"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "negatively_regulated_by": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "negatively_regulates.go"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/negatively_regulated_by"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "negatively_regulates": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates.go"
                     },
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/negatively_regulates"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "part_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of.go"
                     },
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/part_of"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "positively_regulated_by": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "positively_regulates.go"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/positively_regulated_by"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "positively_regulates": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates.go"
                     },
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/positively_regulates"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "regulated_by": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "regulates.go"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/regulated_by"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "regulates": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "regulates.go"
                     },
                     "predicate": "regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/regulates"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ],
               "subclass_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "parents"
                     },
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/subclass_of"
                     },
                     "source": "Gene Ontology",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "has_part": {
                  "GO": "_id"
               },
               "has_subclass": {
                  "GO": "children"
               },
               "negatively_regulated_by": {
                  "GO": "_id"
               },
               "negatively_regulates": {
                  "GO": "negatively_regulates.go"
               },
               "part_of": {
                  "GO": "part_of.go"
               },
               "positively_regulated_by": {
                  "GO": "_id"
               },
               "positively_regulates": {
                  "GO": "positively_regulates.go"
               },
               "regulated_by": {
                  "GO": "_id"
               },
               "regulates": {
                  "GO": "regulates.go"
               },
               "subclass_of": {
                  "GO": "parents"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Gene Ontology Biological Process query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Gene Ontology Biological Process API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/geneset",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple GO geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Geneset"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching geneset objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of geneset IDs, return the matching geneset object",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/geneset/{genesetid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve geneset objects based on GO geneset ID.  Supports JSONP and CORS as well.",
                           "example": "GO:0042121",
                           "in": "path",
                           "name": "genesetid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Geneset"
                                 }
                              }
                           },
                           "description": "A matching geneset object"
                        },
                        "404": {
                           "description": "A response indicating an unknown geneset ID"
                        }
                     },
                     "summary": "Retrieve geneset objects based on ID",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from DISEASES",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "parents:\"GO:0071704\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch geneset queries and return matching geneset hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_subclass"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/subclass_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/positively_regulates"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/negatively_regulates"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/positively_regulated_by"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/negatively_regulated_by"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_part"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/part_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/regulates"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/regulated_by"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/go_bp"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/go_bp"
            }
         ],
         "tags": [
            {
               "name": "ontology"
            },
            {
               "name": "biological process"
            },
            {
               "name": "geneset"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "ec6d76016ef40f284359d17fbf78df20",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "developes_from": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "developes_from.uberon"
                     },
                     "predicate": "developes_from",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/developes_from"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "has_part": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "part_of.uberon"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_part"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "has_subclass": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "children"
                     },
                     "predicate": "has_subclass",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_subclass"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "located_in": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "located_in.uberon"
                     },
                     "predicate": "located_in",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/located_in"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "location_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "location_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/location_of"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "part_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of.uberon"
                     },
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/part_of"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "produced_by": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by.uberon"
                     },
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/produced_by"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "produces": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "_id"
                     },
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "produced_by.uberon"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/produces"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ],
               "subclass_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "parents"
                     },
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/subclass_of"
                     },
                     "source": "UBERON Ontology",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "developes_from": {
                  "UBERON": "developes_from.uberon"
               },
               "has_part": {
                  "UBERON": "_id"
               },
               "has_subclass": {
                  "UBERON": "children"
               },
               "located_in": {
                  "UBERON": "located_in.uberon"
               },
               "location_of": {
                  "UBERON": "_id"
               },
               "part_of": {
                  "UBERON": "part_of.uberon"
               },
               "produced_by": {
                  "UBERON": "produced_by.uberon"
               },
               "produces": {
                  "UBERON": "_id"
               },
               "subclass_of": {
                  "UBERON": "parents"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the UBERON query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "UBERON Ontology API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/anatomy",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple UBERON anatomy IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Phenotype"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching anatomy objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of anatomy IDs, return the matching anatomy object",
                     "tags": [
                        "anatomy"
                     ]
                  }
               }
            },
            {
               "path": "/anatomy/{anatomyid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve anatomy objects based on UBERON anatomy ID  Supports JSONP and CORS as well.",
                           "example": "UBERON:2002108",
                           "in": "path",
                           "name": "anatomyid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Phenotype"
                                 }
                              }
                           },
                           "description": "A matching anatomy object"
                        },
                        "404": {
                           "description": "A response indicating an unknown anatomy ID"
                        }
                     },
                     "summary": "Retrieve anatomy objects based on ID",
                     "tags": [
                        "anatomy"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "UBERON metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from UBERON",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "UBERON metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "parents:\"UBERON:2001995\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching anatomy hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" propert"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch anatomy queries and return matching anatomy hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_subclass"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/subclass_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/part_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_part"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/developes_from"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/located_in"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/location_of"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/produced_by"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/produces"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/uberon"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/uberon"
            }
         ],
         "tags": [
            {
               "name": "anatomy"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "3173aec3bbab719f42844698a6a9308e",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "lisa@renci.org",
               "name": "Lisa Stillwell"
            },
            "description": "This API returns the distance in meters from a location of interest to the nearest roadway.\n\nRoadway data are derived from GIS shapefiles provided by the US Federal Highway Administration's Highway Performance Monitoring System (HPMS). See the HPMS Field Manual (https://www.fhwa.dot.gov/policyinformation/hpms/fieldmanual/) for detailed explanation of methods and fields.\n\nResults are limited to major (or primary) roadway types, including interstates, principal arteries, minor arteries, and major collectors, in the United States.\n\nLocations are expressed using WGS84 decimal format. WGS84 is the World Geodetic System for expressing latitude and longitude. For example, Raleigh, North Carolina is at latitude 35.7796 and longitude -78.6382.\n\nIn addition to distance, the API retrieves additional information, including the roadway type, the maximum speed limit, the annual average daily traffic (AADT), and the total number of lanes. See\u00a0https://www.fhwa.dot.gov/policyinformation/travel_monitoring/pubs/aadt/\u00a0for information on how AADT is computed.\n\nThe following roadway types are supported:\n* Off-Network\n* Rural Restricted Access\n* Rural Unrestricted Access\n* Urban Restricted Access\n* Urban Unrestricted Access\n\nIn some cases, roadway type, AADT, and speed are not available in the HPMS data set. In this case, data from the US Census Bureau TIGER (Topologically Integrated Geographic Encoding and Referencing) data set (available at census.gov) was used to obtain roadway type. Roadway segments without roadway type were dropped from the dataset; this amounted to approximately 5% of roadways, many of which had not yet been built. Missing AADT and speeds were populated using a variety of methods. First, a lookup table was built with county averages by roadway type and facility type and populated with values from segments that already had AADT and/or speed. Second, in cases in which the lookup table could not be used (e.g., ramps often didn\u2019t match), speeds were assigned based on the function class of the roadway, state averages, or averages for a similar (but different) roadway type.\n\nThe API is currently restricted to calendar year 2016.\n",
            "license": {
               "name": "MIT",
               "url": "http://opensource.org/licenses/MIT"
            },
            "title": "Roadway Exposures API",
            "version": "1.0.0"
         },
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "edeb26858bd27d0322af93e7a9e08761",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "associatedWith": {
                  "inputSeparator": ",",
                  "inputs": [
                     {
                        "id": "pathwayFigureID",
                        "semantic": "Pathway"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "entrez",
                        "semantic": "Gene"
                     }
                  ],
                  "parameters": {
                     "dotfield": false,
                     "fields": "associatedWith"
                  },
                  "requestBody": {
                     "body": {
                        "q": "{input1}",
                        "scopes": "_id"
                     },
                     "header": "application/x-www-form-urlencoded"
                  },
                  "supportBatch": true
               }
            },
            "x-bte-response-mapping": {
               "query-post": {
                  "@context": "http://schema.org",
                  "@type": "Pathway",
                  "bts:associatedWith": {
                     "$input": "bts:pathwayFigureID",
                     "$source": "PFOCR",
                     "@type": "Gene",
                     "bts:entrez": "associatedWith.genes",
                     "bts:pmc": "associatedWith.pmc"
                  },
                  "bts:pathwayFigureID": "_id"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the pfocr query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "pfocr API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/geneset",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Geneset"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching geneset objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of geneset IDs, return the matching geneset object",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/geneset/{genesetid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve geneset objects based on geneset ID  Supports JSONP and CORS as well.",
                           "example": "PMC2673547__nihms99366f8.jpg",
                           "in": "path",
                           "name": "genesetid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/geneset"
                                 }
                              }
                           },
                           "description": "A matching geneset object"
                        },
                        "404": {
                           "description": "A response indicating an unknown geneset ID"
                        }
                     },
                     "summary": "Retrieve geneset objects based on ID",
                     "tags": [
                        "geneset"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "pfocr metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from pfocr",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "pfocr metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a pfocr geneset object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "associatedWith.genes:1378",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/query-post"
                           }
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch geneset queries and return matching geneset hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": {
                        "associatedWith": {
                           "$ref": "#/components/x-bte-kgs-operations/associatedWith"
                        }
                     }
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://pending.biothings.io/pfocr"
            },
            {
               "description": "Production server",
               "url": "http://pending.biothings.io/pfocr"
            }
         ],
         "tags": [
            {
               "name": "geneset"
            },
            {
               "name": "gene"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "df231f1efca0c3409e28dd5ca7228c1f",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical2disease": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-doid"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-mondo"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  }
               ],
               "chemical2gene": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2gene"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  }
               ],
               "disease2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chembl"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chebi"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  }
               ],
               "disease2gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2gene"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  }
               ],
               "gene2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chembl"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chebi"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  }
               ],
               "gene2disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-doid"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-mondo"
                     },
                     "source": "hmdb",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "chemical2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               },
               "chemical2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "disease2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "disease2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "disease2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "gene2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "gene2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "gene2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "gene2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@renci.org",
               "name": "Chris B."
            },
            "description": "Scibite",
            "termsOfService": "https://automat.renci.org",
            "title": "Automat HMDB API",
            "version": "2.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene/chemical_substance/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2chemical"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/disease/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2disease",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/gene/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease/chemical_substance/{mondo}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put DOID ID here, e.g. \"DOID:123\"",
                           "example": "DOID:123",
                           "in": "path",
                           "name": "mondo",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "disease2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease2chemical"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://automat.renci.org/hmdb"
            }
         ],
         "tags": [
            {
               "name": "drug"
            },
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "automat"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "9df83f691d5fa0d8eb9c9f5f6b6ebb39",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "bizon@renci.org",
               "name": "Chris Bizon",
               "x-id": "https://github.com/cbizon",
               "x-role": "responsible developer"
            },
            "description": "The <a href=\"https://biolink.github.io/biolink-model/\">Biolink Model</a> defines a set of common concepts for use in Translator. These include semantic types for entities, as well as the relations between them. These concepts are organized into an inheritance hierarchy capturing different granularities of description. Furthermore, each concept contains metadata relating the concept to ontologies.\nThe Biolink Lookup Service provides a computational interface to the model, including access to previous versions. When the service is deployed, it queries the Biolink Github repository, and updates itself to access the latest version.",
            "license": {
               "name": "MIT",
               "url": "https://opensource.org/licenses/MIT"
            },
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Biolink+Model+Lookup&provider_long=the+Translator+Consortium",
            "title": "Biolink Model Lookup",
            "version": "1.0.0",
            "x-translator": {
               "component": "Utility",
               "team": [
                  "Standards Reference Implementation Team"
               ]
            }
         },
         "paths": [
            {
               "path": "/bl/{concept}/ancestors",
               "pathitem": {
                  "get": {
                     "description": "",
                     "parameters": [
                        {
                           "default": "chemical_substance",
                           "in": "path",
                           "name": "concept",
                           "required": true
                        },
                        {
                           "default": "latest",
                           "in": "query",
                           "name": "version"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "type": "string"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        }
                     },
                     "summary": "Return all ancestors (superclasses or superproperties) of concept, based on the BioLink Model YAML.",
                     "tags": [
                        "lookup"
                     ]
                  }
               }
            },
            {
               "path": "/bl/{concept}/descendants",
               "pathitem": {
                  "get": {
                     "description": "",
                     "parameters": [
                        {
                           "default": "chemical_substance",
                           "in": "path",
                           "name": "concept",
                           "required": true
                        },
                        {
                           "default": "latest",
                           "in": "query",
                           "name": "version"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "type": "string"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        }
                     },
                     "summary": "Return descendants (subclasses or subproperties) of concept, based on the BioLink Model YAML",
                     "tags": [
                        "lookup"
                     ]
                  }
               }
            },
            {
               "path": "/bl/{concept}/lineage",
               "pathitem": {
                  "get": {
                     "description": "",
                     "parameters": [
                        {
                           "default": "chemical_substance",
                           "in": "path",
                           "name": "concept",
                           "required": true
                        },
                        {
                           "default": "latest",
                           "in": "query",
                           "name": "version"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "type": "string"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        }
                     },
                     "summary": "Return the ancestors and descendants of concept, based on the BioLink Model YAML",
                     "tags": [
                        "lookup"
                     ]
                  }
               }
            },
            {
               "path": "/uri_lookup/{uri}",
               "pathitem": {
                  "get": {
                     "description": "",
                     "parameters": [
                        {
                           "example": "RO:0002606",
                           "in": "path",
                           "name": "uri",
                           "required": true
                        },
                        {
                           "default": "latest",
                           "in": "query",
                           "name": "version"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "type": "string"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        }
                     },
                     "summary": "Given the URI for a property, return the corresponding BioLink Model slot. Checks the Biolink Model YAML for both slot_uri and mappings.",
                     "tags": [
                        "lookup"
                     ]
                  }
               }
            },
            {
               "path": "/bl/{concept}",
               "pathitem": {
                  "get": {
                     "description": "",
                     "parameters": [
                        {
                           "default": "chemical_substance",
                           "in": "path",
                           "name": "concept",
                           "required": true
                        },
                        {
                           "default": "latest",
                           "in": "query",
                           "name": "version"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "successful operation"
                        }
                     },
                     "summary": "Get all properties for concept from the BioLink Model YAML.",
                     "tags": [
                        "lookup"
                     ]
                  }
               }
            },
            {
               "path": "/versions",
               "pathitem": {
                  "get": {
                     "description": "",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "type": "string"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        }
                     },
                     "summary": "Get available BioLink Model versions. These values can be used to parameterize other function calls.",
                     "tags": [
                        "meta"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://bl-lookup-sri.renci.org/"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "lookup"
            },
            {
               "name": "meta"
            }
         ]
      },
      {
         "_id": "dca415f2d792976af9d642b7e73f7a41",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "variant_located_in_gene": [
                  {
                     "inputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "variantid": "{inputs[0]}%23%23"
                     },
                     "predicate": "located_in",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/variant_located_in_gene"
                     },
                     "source": "dbsnp",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "variant_located_in_gene": {
                  "SYMBOL": "gene.name"
               }
            }
         },
         "info": {
            "contact": {
               "email": "luzh@ncbi.nlm.nih.gov",
               "name": "Zhiyong Lu"
            },
            "description": "LitVar allows the search and retrieval of variant relevant information from the biomedical literature and shows key biological relations between a variant and its close related entities (e.g. genes, diseases, and drugs). The LitVar results are automatically extracted (with regular updates) from over 27 million PubMed articles as well as applicable full-text articles in PubMed Central.",
            "termsOfService": "https://www.ncbi.nlm.nih.gov/home/about/policies/",
            "title": "LitVar API",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/entity/litvar/{variantid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "rsid",
                           "example": "rs121913527",
                           "in": "path",
                           "name": "variantid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "publications mentioned the submitted variant"
                        }
                     },
                     "summary": "Retrieve PMIDs of publications mentioning submitted variants",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/variant_located_in_gene"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://www.ncbi.nlm.nih.gov/research/bionlp/litvar/api/v1"
            }
         ],
         "tags": [
            {
               "name": "variant"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "4692da88e681a6b23e1ea9ed2152bd85",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "biosampleAssociatedWithDisease": {
                  "inputs": [
                     {
                        "id": "samd",
                        "semantic": "Biosample"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "mondo",
                        "semantic": "DiseaseOrPhenotypicFeature"
                     }
                  ],
                  "parameters": {
                     "sampleid": "{input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/biosample"
                  },
                  "supportBatch": false
               },
               "clAssociatedWithBiosample": {
                  "inputs": [
                     {
                        "id": "clo",
                        "semantic": "CellLine"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "samd",
                        "semantic": "Biosample"
                     }
                  ],
                  "parameters": {
                     "q": "biolink:CellLine={input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/cellline-biosample"
                  },
                  "supportBatch": false
               },
               "diseaseAssociatedWithBiosample": {
                  "inputs": [
                     {
                        "id": "mondo",
                        "semantic": "DiseaseOrPhenotypicFeature"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "samd",
                        "semantic": "Biosample"
                     }
                  ],
                  "parameters": {
                     "q": "biolink:Disease={input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/disease-biosample"
                  },
                  "supportBatch": false
               }
            },
            "x-bte-response-mapping": {
               "biosample": {
                  "@context": "http://schema.org",
                  "@type": "Biosample",
                  "bts:biosampleAssociatedWithDisease": [
                     {
                        "$input": "bts:samd",
                        "$source": "NCBI Biosample Database",
                        "@type": "DiseaseOrPhenotypicFeature",
                        "bts:age": "data.attributes.age",
                        "bts:cellline": "data.attributes.cell_line.name",
                        "bts:mondo": "data.attributes.Disease.mondo",
                        "bts:organism": "data.attributes.organism",
                        "bts:sex": "data.attributes.sex.name"
                     }
                  ],
                  "bts:samd": "samd"
               },
               "cellline-biosample": {
                  "@context": "http://schema.org",
                  "@type": "CellLine",
                  "bts:clAssociatedWithBiosample": [
                     {
                        "$input": "bts:clo",
                        "$source": "NCBI Biosample Database",
                        "@type": "Biosample",
                        "bts:age": "data.attributes.age",
                        "bts:cellline": "data.attributes.cell_line.name",
                        "bts:organism": "data.oorganism",
                        "bts:samd": "data.biosampleAccession",
                        "bts:sex": "data.attributes.sex.name"
                     }
                  ],
                  "bts:clo": "clo"
               },
               "disease-biosample": {
                  "@context": "http://schema.org",
                  "@type": "DiseaseOrPhenotypicFeature",
                  "bts:diseaseAssociatedWithBiosample": [
                     {
                        "$input": "bts:mondo",
                        "$source": "NCBI Biosample Database",
                        "@type": "Biosample",
                        "bts:age": "data.attributes.age",
                        "bts:cellline": "data.attributes.cell_line.name",
                        "bts:organism": "data.oorganism",
                        "bts:samd": "data.biosampleAccession",
                        "bts:sex": "data.attributes.sex.name"
                     }
                  ],
                  "bts:mondo": "mondo"
               }
            }
         },
         "info": {
            "contact": {
               "email": "marcosmr@stanford.edu",
               "name": " "
            },
            "description": "Prototype utilities to query a subset of NCBI BioSample metadata records that were processed using semantic technology.\n\nThe current database contains 4,346 records for three diseases: hepatocellular carcinoma, myelodysplasia, and systemic lupus erythematosus. The original records were downloaded on February 2, 2020 from the NCBI's FTP server (https://ftp.ncbi.nih.gov/biosample).",
            "termsOfService": "http://api.kp.metadatacenter.org/biosample/tos",
            "title": "Metadata Provider API",
            "version": "prototype"
         },
         "paths": [
            {
               "path": "/biosample/search",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "query",
                           "example": "biolink:Disease=MONDO:0007256",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "size of the output",
                           "example": 200,
                           "in": "query",
                           "name": "limit",
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A biosample object",
                           "x-bte-response-mapping": [
                              {
                                 "$ref": "#/components/x-bte-response-mapping/disease-biosample"
                              },
                              {
                                 "$ref": "#/components/x-bte-response-mapping/cellline-biosample"
                              }
                           ]
                        }
                     },
                     "summary": "retrieve biosample information",
                     "x-bte-kgs-operations": {
                        "clAssociatedWithBiosample": {
                           "$ref": "#/components/x-bte-kgs-operations/clAssociatedWithBiosample"
                        },
                        "diseaseAssociatedWithBiosample": {
                           "$ref": "#/components/x-bte-kgs-operations/diseaseAssociatedWithBiosample"
                        }
                     }
                  }
               }
            },
            {
               "path": "/biosample/{sampleid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "the SAMD biosample ID",
                           "example": "SAMD00005006",
                           "in": "path",
                           "name": "sampleid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A biosample object",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/biosample"
                           }
                        }
                     },
                     "summary": "retrieve biosample information",
                     "x-bte-kgs-operations": {
                        "biosampleAssociatedWithDisease": {
                           "$ref": "#/components/x-bte-kgs-operations/biosampleAssociatedWithDisease"
                        }
                     }
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "http://api.kp.metadatacenter.org/"
            }
         ],
         "tags": [
            {
               "name": "metadata"
            },
            {
               "name": "biosample"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "ec1f4b0cfc37d7c2b9534591767e0c5a",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "balhoff@renci.org",
               "name": "Jim Balhoff"
            },
            "description": "TRAPI interface to integrated ontology knowledgebase",
            "license": {
               "name": "MIT License",
               "url": "https://opensource.org/licenses/MIT"
            },
            "termsOfService": "https://opensource.org/licenses/MIT",
            "title": "Ontology-KP API",
            "version": "0.1",
            "x-translator": {
               "component": "KP",
               "team": "SRI"
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "operationId": "postQuery",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/TRAPIQueryRequestBody"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/TRAPIMessage"
                                 }
                              }
                           },
                           "description": ""
                        },
                        "default": {
                           "content": {
                              "text/plain": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": ""
                        }
                     },
                     "summary": "Submit a TRAPI question graph and retrieve matching solutions"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://stars-app.renci.org/sparql-kp"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "542ba165e1b4227854cf7c0a8addcc79",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "gene_related_to_chemical": [
                  {
                     "inputs": [
                        {
                           "id": "ENSEMBL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "datasource": "chembl",
                        "fields": "drug",
                        "size": 100,
                        "target": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene_related_to_chemical"
                     },
                     "source": "CHEMBL",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "gene_related_to_chemical": {
                  "CHEMBL.COMPOUND": "data.drug.id",
                  "moleculeType": "data.drug.molecule_type",
                  "name": "data.drug.molecule_name"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@opentarget.org",
               "name": "opentarget help desk",
               "x-role": "responsible developer"
            },
            "description": "The Opentarget API",
            "termsOfService": "http://www.opentarget.org",
            "title": "OpenTarget API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/platform/public/evidence/filter",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "ensembl gene id",
                           "example": "ENSG00000088832",
                           "in": "query",
                           "name": "target",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "size of the output",
                           "example": 100,
                           "in": "query",
                           "name": "size",
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "the output field",
                           "example": "drug",
                           "in": "query",
                           "name": "fields",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "the data source",
                           "example": "chembl",
                           "in": "query",
                           "name": "datasource",
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A biosample object"
                        }
                     },
                     "summary": "retrieve evidence",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene_related_to_chemical"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://platform-api.opentargets.io/v3"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "opentarget"
            }
         ]
      },
      {
         "_id": "c0c88b5e6728d537860db6fdc6a1d4f0",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical2disease": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-doid"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-mondo"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  }
               ],
               "chemical2gene": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2gene"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  }
               ],
               "disease2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chembl"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chebi"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  }
               ],
               "disease2gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2gene"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  }
               ],
               "gene2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chembl"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chebi"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  }
               ],
               "gene2disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-doid"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-mondo"
                     },
                     "source": "chembio",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "chemical2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               },
               "chemical2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "disease2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "disease2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "disease2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "gene2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "gene2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "gene2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "gene2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@renci.org",
               "name": "Chris B."
            },
            "description": "Scibite",
            "termsOfService": "https://automat.renci.org",
            "title": "Automat CHEMBIO API",
            "version": "2.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene/chemical_substance/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2chemical"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/gene/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2gene"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://automat.renci.org/chembio"
            }
         ],
         "tags": [
            {
               "name": "drug"
            },
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "automat"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "cc7324e732c4ffc7157a468bfbd0778c",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "mark.williams5@nih.gov",
               "name": "Mark Williams",
               "x-role": "responsible developer"
            },
            "description": "a work in progress ara example",
            "termsOfService": "https://opensource.org/licenses/MIT",
            "title": "NCATS ARA Scaffold",
            "version": "3.0"
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "responses": {
                        "200": {
                           "description": "A query response object"
                        }
                     },
                     "summary": "POST a ReasonerStdAPI formatted query to the service"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://transltr.io:7073"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "4e03414ea4b39e92ffb97690f8620286",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on the [Kyoto Encyclopedia of Genes and Genomes (https://www.genome.jp/kegg/)](https://www.genome.jp/kegg/).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat KEGG&provider_long=RENCI",
            "title": "Automat KEGG",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/kegg"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "230691056df158545fd38bb73379d9c3",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "balhoff@renci.org",
               "name": "Jim Balhoff"
            },
            "description": "TRAPI interface to database of Causal Activity Models",
            "license": {
               "name": "MIT License",
               "url": "https://opensource.org/licenses/MIT"
            },
            "termsOfService": "https://opensource.org/licenses/MIT",
            "title": "CAM-KP API",
            "version": "0.1",
            "x-translator": {
               "component": "KP",
               "team": "Exposures Provider"
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "operationId": "postQuery",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/TRAPIQuery"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/TRAPIResponse"
                                 }
                              }
                           },
                           "description": ""
                        },
                        "default": {
                           "content": {
                              "text/plain": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": ""
                        }
                     },
                     "summary": "Submit a TRAPI question graph and retrieve matching solutions"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "operationId": "getPredicates",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "items": {
                                          "items": {
                                             "$ref": "#/components/schemas/BiolinkPredicate"
                                          },
                                          "type": "array"
                                       },
                                       "type": "array"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": ""
                        },
                        "default": {
                           "content": {
                              "text/plain": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": ""
                        }
                     },
                     "summary": "Get predicates used at this service"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://stars-app.renci.org/cam-kp"
            }
         ],
         "tags": [
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "7c07eca4ef5ceb532d06c0180e86aedd",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "ChemicalSubstance-affected_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affected_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affected_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affected_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-affects-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-causes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-causes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-causes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-causes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-coexists_with-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupted_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupted_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupted_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupted_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-disrupts-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulated_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-negatively_regulates-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-physically_interacts_with-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulated_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-positively_regulates-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-prevents-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "prevents"
                     },
                     "path": "/query",
                     "predicate": "prevents",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-prevents-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produced_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produces-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "produces"
                     },
                     "path": "/query",
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produces-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "produces"
                     },
                     "path": "/query",
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produces-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "produces"
                     },
                     "path": "/query",
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produces-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "produces"
                     },
                     "path": "/query",
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-produces-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "produces"
                     },
                     "path": "/query",
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-related_to-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-related_to-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-related_to-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-related_to-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-related_to-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-related_to-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "ChemicalSubstance-treats-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "treats"
                     },
                     "path": "/query",
                     "predicate": "treats",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-treats-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "ChemicalSubstance-affected_by-BiologicalProcess": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "ChemicalSubstance-affected_by-ChemicalSubstance": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "ChemicalSubstance-affected_by-Disease": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "ChemicalSubstance-affected_by-Gene": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "ChemicalSubstance-affects-AnatomicalEntity": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-affects-BiologicalProcess": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-affects-Cell": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-affects-CellularComponent": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-affects-ChemicalSubstance": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-affects-Disease": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-affects-Gene": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-affects-PhenotypicFeature": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "ChemicalSubstance-causes-BiologicalProcess": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "ChemicalSubstance-causes-Disease": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "ChemicalSubstance-coexists_with-AnatomicalEntity": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-coexists_with-BiologicalProcess": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-coexists_with-Cell": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-coexists_with-CellularComponent": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-coexists_with-ChemicalSubstance": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-coexists_with-Disease": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-coexists_with-Gene": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-coexists_with-PhenotypicFeature": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "ChemicalSubstance-disrupted_by-ChemicalSubstance": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "ChemicalSubstance-disrupted_by-Gene": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "ChemicalSubstance-disrupts-AnatomicalEntity": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-disrupts-BiologicalProcess": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-disrupts-Cell": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-disrupts-CellularComponent": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-disrupts-ChemicalSubstance": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-disrupts-Disease": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-disrupts-Gene": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-disrupts-PhenotypicFeature": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-AnatomicalEntity": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-BiologicalProcess": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-Cell": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-CellularComponent": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-ChemicalSubstance": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-Disease": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-Gene": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulated_by-PhenotypicFeature": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "ChemicalSubstance-negatively_regulates-AnatomicalEntity": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-negatively_regulates-BiologicalProcess": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-negatively_regulates-Cell": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-negatively_regulates-CellularComponent": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-negatively_regulates-ChemicalSubstance": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-negatively_regulates-Disease": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-negatively_regulates-Gene": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-negatively_regulates-PhenotypicFeature": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "ChemicalSubstance-physically_interacts_with-AnatomicalEntity": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-physically_interacts_with-BiologicalProcess": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-physically_interacts_with-Cell": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-physically_interacts_with-CellularComponent": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-physically_interacts_with-ChemicalSubstance": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-physically_interacts_with-Disease": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-physically_interacts_with-Gene": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-physically_interacts_with-PhenotypicFeature": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "ChemicalSubstance-positively_regulated_by-AnatomicalEntity": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulated_by-BiologicalProcess": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulated_by-Cell": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulated_by-CellularComponent": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulated_by-ChemicalSubstance": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulated_by-Disease": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulated_by-Gene": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulated_by-PhenotypicFeature": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "ChemicalSubstance-positively_regulates-AnatomicalEntity": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-positively_regulates-BiologicalProcess": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-positively_regulates-Cell": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-positively_regulates-CellularComponent": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-positively_regulates-ChemicalSubstance": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-positively_regulates-Disease": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-positively_regulates-Gene": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-positively_regulates-PhenotypicFeature": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "ChemicalSubstance-prevents-Disease": {
                  "pmid": "prevents.pmid",
                  "umls": "prevents.umls"
               },
               "ChemicalSubstance-produced_by-AnatomicalEntity": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produced_by-BiologicalProcess": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produced_by-Cell": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produced_by-CellularComponent": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produced_by-ChemicalSubstance": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produced_by-Disease": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produced_by-Gene": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produced_by-PhenotypicFeature": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "ChemicalSubstance-produces-AnatomicalEntity": {
                  "pmid": "produces.pmid",
                  "umls": "produces.umls"
               },
               "ChemicalSubstance-produces-Cell": {
                  "pmid": "produces.pmid",
                  "umls": "produces.umls"
               },
               "ChemicalSubstance-produces-ChemicalSubstance": {
                  "pmid": "produces.pmid",
                  "umls": "produces.umls"
               },
               "ChemicalSubstance-produces-Gene": {
                  "pmid": "produces.pmid",
                  "umls": "produces.umls"
               },
               "ChemicalSubstance-produces-PhenotypicFeature": {
                  "pmid": "produces.pmid",
                  "umls": "produces.umls"
               },
               "ChemicalSubstance-related_to-AnatomicalEntity": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "ChemicalSubstance-related_to-BiologicalProcess": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "ChemicalSubstance-related_to-ChemicalSubstance": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "ChemicalSubstance-related_to-Disease": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "ChemicalSubstance-related_to-Gene": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "ChemicalSubstance-related_to-PhenotypicFeature": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "ChemicalSubstance-treats-Disease": {
                  "pmid": "treats.pmid",
                  "umls": "treats.umls"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)",
            "termsOfService": "http://biothings.ncats.io",
            "title": "SEMMED Chemical API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/chemical",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/chemical/{chemicalid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on ID",
                           "example": "C0004096",
                           "in": "path",
                           "name": "chemicalid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from mydisease.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a mydisease.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-causes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-causes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupted_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupted_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-prevents-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-treats-Disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://biothings.ncats.io/semmedchemical"
            }
         ],
         "tags": [
            {
               "name": "chemical"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "semmed"
            }
         ]
      },
      {
         "_id": "e9f69b81e755e163fdf6c41a2b5e07c0",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "vincent.emonet@maastrichtuniversity.nl",
               "name": "Institute of Data Science at Maastricht University",
               "url": "https://maastrichtuniversity.nl/ids"
            },
            "description": "Get predicted targets for a given entity: the **potential drugs treating a given disease**, or the **potential diseases a given drug could treat**. \n\n* Use the `/predict` operation to easily retrieve predictions for a given entity (operation annotated for the [BioThings Explorer](https://x-bte-extension.readthedocs.io/en/latest/x-bte-kgs-operations.html)). \n\n* Predictions are currently produced using the [PREDICT method](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/) from the [fair-workflows/openpredict](https://github.com/fair-workflows/openpredict) project. \n\n* You can also install the [OpenPredict Python package](https://pypi.org/project/openpredict/) to train and serve a new model yourself. \n\n* More documentation available at [github.com/MaastrichtU-IDS/translator-openpredict](https://github.com/MaastrichtU-IDS/translator-openpredict) \n\n[![Version](https://img.shields.io/pypi/v/openpredict)](https://pypi.org/project/openpredict) [![Run tests](https://github.com/MaastrichtU-IDS/translator-openpredict/workflows/Run%20tests/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions?query=workflow%3A%22Run+tests%22) \n\nService supported by the [NCATS Translator project](https://ncats.nih.gov/translator/about)",
            "license": {
               "name": "MIT License",
               "url": "https://opensource.org/licenses/MIT"
            },
            "termsOfService": "",
            "title": "OpenPredict API \ud83d\udd2e\ud83d\udc0d",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Clinical Data Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/embedding",
               "pathitem": {
                  "post": {
                     "description": "Upload your embedding file:  select which types do you have in the embeddings, Drugs, Diseases or Both. \n1. provided embeddings will be added to the model\n2. the model will be retrained\n3. the model evaluation will be stored in a triplestore",
                     "operationId": "openpredict.openpredict_api.post_embedding",
                     "parameters": [
                        {
                           "description": "Types of the entities in the embedding",
                           "in": "query",
                           "name": "types",
                           "required": true,
                           "schema": {
                              "default": "Both",
                              "enum": [
                                 "Drugs",
                                 "Diseases",
                                 "Both"
                              ],
                              "type": "string"
                           }
                        },
                        {
                           "description": "Name of embedding (eg. TransE_DrugBank_Drug)",
                           "in": "query",
                           "name": "emb_name",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Describe how the embeddings was obtained (eg. rdf2vec on drugbank/omim data)",
                           "in": "query",
                           "name": "description",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Provide the ID of the run output you want to use as base model to add the embeddings",
                           "example": "openpredict-baseline-omim-drugbank",
                           "in": "query",
                           "name": "model_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "multipart/form-data": {
                              "schema": {
                                 "properties": {
                                    "embedding_file": {
                                       "description": "The embedding file to be uploaded",
                                       "format": "binary",
                                       "type": "string"
                                    }
                                 },
                                 "type": "object"
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "description": "OK"
                        }
                     },
                     "summary": "Upload your embedding for drugs or diseases",
                     "tags": [
                        "openpredict"
                     ]
                  }
               }
            },
            {
               "path": "/features",
               "pathitem": {
                  "get": {
                     "description": "Return the features trained in the model, for Drugs, Diseases or Both ",
                     "operationId": "openpredict.openpredict_api.get_features",
                     "parameters": [
                        {
                           "description": "Type of the entities in the features",
                           "in": "query",
                           "name": "type",
                           "required": true,
                           "schema": {
                              "default": "All",
                              "enum": [
                                 "All",
                                 "Drugs",
                                 "Diseases",
                                 "Both"
                              ],
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {}
                           },
                           "description": "OK"
                        }
                     },
                     "summary": "Return the features trained in the models",
                     "tags": [
                        "openpredict"
                     ]
                  }
               }
            },
            {
               "path": "/models",
               "pathitem": {
                  "get": {
                     "description": "Return the models with their training features and scores",
                     "operationId": "openpredict.openpredict_api.get_models",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {}
                           },
                           "description": "OK"
                        }
                     },
                     "summary": "Return the models with their training features and scores",
                     "tags": [
                        "openpredict"
                     ]
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "operationId": "openpredict.openpredict_api.get_predicates",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "predicates"
                     ]
                  }
               }
            },
            {
               "path": "/predict",
               "pathitem": {
                  "get": {
                     "description": "Return the predicted targets for a given entity: drug (DrugBank ID) or disease (OMIM ID), with confidence scores. Only a drug_id or a disease_id can be provided, the disease_id will be ignored if drug_id is provided This operation is annotated with x-bte-kgs-operations, and follow the BioThings API recommendations.",
                     "operationId": "openpredict.openpredict_api.get_predict",
                     "parameters": [
                        {
                           "description": "CURIE of the drug to get prediction of diseases it could treat (e.g. DRUGBANK:DB00394)",
                           "example": "DRUGBANK:DB00394",
                           "in": "query",
                           "name": "drug_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "CURIE of the disease to get prediction of drugs it could be treated with (e.g. OMIM:246300). Ignored if drug_id provided.",
                           "in": "query",
                           "name": "disease_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Provide the ID of the run output you want to use as model to use to predict associations",
                           "example": "openpredict-baseline-omim-drugbank",
                           "in": "query",
                           "name": "model_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Minimum score of predictions to return (0 to 1)",
                           "in": "query",
                           "name": "min_score",
                           "required": false,
                           "schema": {
                              "format": "double",
                              "maximum": 1,
                              "minimum": 0,
                              "type": "number"
                           }
                        },
                        {
                           "description": "Maximum score of predictions to return (0 to 1)",
                           "in": "query",
                           "name": "max_score",
                           "required": false,
                           "schema": {
                              "format": "double",
                              "maximum": 1,
                              "minimum": 0,
                              "type": "number"
                           }
                        },
                        {
                           "description": "Maximum number of results to return, ordered from best score (e.g. 42)",
                           "in": "query",
                           "name": "n_results",
                           "required": false,
                           "schema": {
                              "format": "int32",
                              "minimum": 0,
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {}
                           },
                           "description": "Successful Operation"
                        }
                     },
                     "summary": "Get predicted targets for a given entity",
                     "tags": [
                        "openpredict"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:DRUGBANK",
                                 "semantic": "biolink:ChemicalSubstance"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMIM",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "drug_id": "{inputs[0]}"
                           },
                           "predicate": "biolink:treats",
                           "responseMapping": {
                              "OMIM": "hits.id"
                           },
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMIM",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:DRUGBANK",
                                 "semantic": "biolink:ChemicalSubstance"
                              }
                           ],
                           "parameters": {
                              "disease_id": "{inputs[0]}"
                           },
                           "predicate": "biolink:treated_by",
                           "responseMapping": {
                              "DRUGBANK": "hits.id"
                           },
                           "supportBatch": false
                        }
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Send a [ReasonerAPI](https://github.com/NCATSTranslator/ReasonerAPI) query to request the predicted targets given: a source node, and the relation to predict. Use classes and relations from the [BioLink model](https://biolink.github.io/biolink-model)",
                     "operationId": "openpredict.openpredict_api.post_reasoner_predict",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query reasoner via one of several inputs",
                     "tags": [
                        "query"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://openpredict.semanticscience.org"
            }
         ],
         "tags": [
            {
               "description": "Get relationships supported by this API",
               "name": "translator"
            },
            {
               "description": "Query the models using the Reasoner API",
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "49015a5444165956a9e45655dc1ea389",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": " Human Gene Ontology Annotations from the GO consortium.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Human%20GOA&provider_long=RENCI",
            "title": "Automat Human GOA",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/human-goa"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "2dffb89df7f970b6a07e816e255d33ec",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "PhenotypicFeature-affected_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-affected_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-affected_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-affected_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-affects-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-affects-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-affects-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-affects-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-causes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-causes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-causes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-causes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-disrupted_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupted_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-disrupted_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupted_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-disrupted_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupted_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-disrupts-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-disrupts-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-disrupts-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-disrupts-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-has_part-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "has_part"
                     },
                     "path": "/query",
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-has_part-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "has_part"
                     },
                     "path": "/query",
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-has_part-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "has_part"
                     },
                     "path": "/query",
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-has_part-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "has_part"
                     },
                     "path": "/query",
                     "predicate": "has_part",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-has_subclass-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "has_subclass"
                     },
                     "path": "/query",
                     "predicate": "has_subclass",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_subclass-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-has_subclass-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "has_subclass"
                     },
                     "path": "/query",
                     "predicate": "has_subclass",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_subclass-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-located_in-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "located_in"
                     },
                     "path": "/query",
                     "predicate": "located_in",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-located_in-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-located_in-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "located_in"
                     },
                     "path": "/query",
                     "predicate": "located_in",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-located_in-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-located_in-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "located_in"
                     },
                     "path": "/query",
                     "predicate": "located_in",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-located_in-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-manifestation_of-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "manifestation_of"
                     },
                     "path": "/query",
                     "predicate": "manifestation_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifestation_of-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-manifestation_of-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "manifestation_of"
                     },
                     "path": "/query",
                     "predicate": "manifestation_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifestation_of-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-manifestation_of-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "manifestation_of"
                     },
                     "path": "/query",
                     "predicate": "manifestation_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifestation_of-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-manifested_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "manifested_by"
                     },
                     "path": "/query",
                     "predicate": "manifested_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifested_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-negatively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-negatively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-negatively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-negatively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-negatively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-negatively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-part_of-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of"
                     },
                     "path": "/query",
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-part_of-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of"
                     },
                     "path": "/query",
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-part_of-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of"
                     },
                     "path": "/query",
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-part_of-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of"
                     },
                     "path": "/query",
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-part_of-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "part_of"
                     },
                     "path": "/query",
                     "predicate": "part_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-physically_interacts_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-physically_interacts_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-physically_interacts_with-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-physically_interacts_with-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-physically_interacts_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-physically_interacts_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-positively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-positively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-positively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-positively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-preceded_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "preceded_by"
                     },
                     "path": "/query",
                     "predicate": "preceded_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-preceded_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-preceded_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "preceded_by"
                     },
                     "path": "/query",
                     "predicate": "preceded_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-preceded_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-precedes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "precedes"
                     },
                     "path": "/query",
                     "predicate": "precedes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-precedes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-predisposes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "predisposes"
                     },
                     "path": "/query",
                     "predicate": "predisposes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-predisposes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-prevents-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "prevents"
                     },
                     "path": "/query",
                     "predicate": "prevents",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-prevents-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produced_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produced_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produced_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produced_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produced_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produced_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "produced_by"
                     },
                     "path": "/query",
                     "predicate": "produced_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produces-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "produces"
                     },
                     "path": "/query",
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produces-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-produces-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "produces"
                     },
                     "path": "/query",
                     "predicate": "produces",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produces-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-related_to-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-related_to-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-related_to-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-related_to-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-related_to-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-subclass_of-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subclass_of"
                     },
                     "path": "/query",
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-subclass_of-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subclass_of"
                     },
                     "path": "/query",
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-subclass_of-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subclass_of"
                     },
                     "path": "/query",
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-subclass_of-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subclass_of"
                     },
                     "path": "/query",
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-subclass_of-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subclass_of"
                     },
                     "path": "/query",
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-subclass_of-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subclass_of"
                     },
                     "path": "/query",
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "PhenotypicFeature-treats-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "treats"
                     },
                     "path": "/query",
                     "predicate": "treats",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-treats-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "PhenotypicFeature-affected_by-BiologicalProcess": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "PhenotypicFeature-affected_by-ChemicalSubstance": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "PhenotypicFeature-affected_by-Disease": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "PhenotypicFeature-affected_by-Gene": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "PhenotypicFeature-affects-BiologicalProcess": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "PhenotypicFeature-affects-Cell": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "PhenotypicFeature-affects-CellularComponent": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "PhenotypicFeature-affects-Disease": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "PhenotypicFeature-causes-BiologicalProcess": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "PhenotypicFeature-causes-Disease": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "PhenotypicFeature-disrupted_by-ChemicalSubstance": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "PhenotypicFeature-disrupted_by-Disease": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "PhenotypicFeature-disrupted_by-Gene": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "PhenotypicFeature-disrupts-BiologicalProcess": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "PhenotypicFeature-disrupts-Cell": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "PhenotypicFeature-disrupts-CellularComponent": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "PhenotypicFeature-disrupts-Disease": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "PhenotypicFeature-has_part-CellularComponent": {
                  "pmid": "has_part.pmid",
                  "umls": "has_part.umls"
               },
               "PhenotypicFeature-has_part-ChemicalSubstance": {
                  "pmid": "has_part.pmid",
                  "umls": "has_part.umls"
               },
               "PhenotypicFeature-has_part-Disease": {
                  "pmid": "has_part.pmid",
                  "umls": "has_part.umls"
               },
               "PhenotypicFeature-has_part-Gene": {
                  "pmid": "has_part.pmid",
                  "umls": "has_part.umls"
               },
               "PhenotypicFeature-has_subclass-Disease": {
                  "pmid": "has_subclass.pmid",
                  "umls": "has_subclass.umls"
               },
               "PhenotypicFeature-has_subclass-PhenotypicFeature": {
                  "pmid": "has_subclass.pmid",
                  "umls": "has_subclass.umls"
               },
               "PhenotypicFeature-located_in-AnatomicalEntity": {
                  "pmid": "located_in.pmid",
                  "umls": "located_in.umls"
               },
               "PhenotypicFeature-located_in-Cell": {
                  "pmid": "located_in.pmid",
                  "umls": "located_in.umls"
               },
               "PhenotypicFeature-located_in-CellularComponent": {
                  "pmid": "located_in.pmid",
                  "umls": "located_in.umls"
               },
               "PhenotypicFeature-manifestation_of-BiologicalProcess": {
                  "pmid": "manifestation_of.pmid",
                  "umls": "manifestation_of.umls"
               },
               "PhenotypicFeature-manifestation_of-Disease": {
                  "pmid": "manifestation_of.pmid",
                  "umls": "manifestation_of.umls"
               },
               "PhenotypicFeature-manifestation_of-Gene": {
                  "pmid": "manifestation_of.pmid",
                  "umls": "manifestation_of.umls"
               },
               "PhenotypicFeature-manifested_by-Disease": {
                  "pmid": "manifested_by.pmid",
                  "umls": "manifested_by.umls"
               },
               "PhenotypicFeature-negatively_regulated_by-ChemicalSubstance": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "PhenotypicFeature-negatively_regulated_by-Gene": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "PhenotypicFeature-negatively_regulates-BiologicalProcess": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "PhenotypicFeature-negatively_regulates-ChemicalSubstance": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "PhenotypicFeature-negatively_regulates-Disease": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "PhenotypicFeature-negatively_regulates-Gene": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "PhenotypicFeature-part_of-AnatomicalEntity": {
                  "pmid": "part_of.pmid",
                  "umls": "part_of.umls"
               },
               "PhenotypicFeature-part_of-Cell": {
                  "pmid": "part_of.pmid",
                  "umls": "part_of.umls"
               },
               "PhenotypicFeature-part_of-CellularComponent": {
                  "pmid": "part_of.pmid",
                  "umls": "part_of.umls"
               },
               "PhenotypicFeature-part_of-ChemicalSubstance": {
                  "pmid": "part_of.pmid",
                  "umls": "part_of.umls"
               },
               "PhenotypicFeature-part_of-Disease": {
                  "pmid": "part_of.pmid",
                  "umls": "part_of.umls"
               },
               "PhenotypicFeature-physically_interacts_with-ChemicalSubstance": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "PhenotypicFeature-physically_interacts_with-Disease": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "PhenotypicFeature-physically_interacts_with-Gene": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "PhenotypicFeature-positively_regulated_by-ChemicalSubstance": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "PhenotypicFeature-positively_regulated_by-Gene": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "PhenotypicFeature-positively_regulates-ChemicalSubstance": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "PhenotypicFeature-positively_regulates-Gene": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "PhenotypicFeature-preceded_by-BiologicalProcess": {
                  "pmid": "preceded_by.pmid",
                  "umls": "preceded_by.umls"
               },
               "PhenotypicFeature-preceded_by-Disease": {
                  "pmid": "preceded_by.pmid",
                  "umls": "preceded_by.umls"
               },
               "PhenotypicFeature-precedes-BiologicalProcess": {
                  "pmid": "precedes.pmid",
                  "umls": "precedes.umls"
               },
               "PhenotypicFeature-predisposes-Disease": {
                  "pmid": "predisposes.pmid",
                  "umls": "predisposes.umls"
               },
               "PhenotypicFeature-prevents-Disease": {
                  "pmid": "prevents.pmid",
                  "umls": "prevents.umls"
               },
               "PhenotypicFeature-produced_by-BiologicalProcess": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "PhenotypicFeature-produced_by-Cell": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "PhenotypicFeature-produced_by-CellularComponent": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "PhenotypicFeature-produced_by-ChemicalSubstance": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "PhenotypicFeature-produced_by-Disease": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "PhenotypicFeature-produced_by-Gene": {
                  "pmid": "produced_by.pmid",
                  "umls": "produced_by.umls"
               },
               "PhenotypicFeature-produces-ChemicalSubstance": {
                  "pmid": "produces.pmid",
                  "umls": "produces.umls"
               },
               "PhenotypicFeature-produces-Gene": {
                  "pmid": "produces.pmid",
                  "umls": "produces.umls"
               },
               "PhenotypicFeature-related_to-AnatomicalEntity": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "PhenotypicFeature-related_to-BiologicalProcess": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "PhenotypicFeature-related_to-ChemicalSubstance": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "PhenotypicFeature-related_to-Disease": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "PhenotypicFeature-related_to-Gene": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "PhenotypicFeature-subclass_of-AnatomicalEntity": {
                  "pmid": "subclass_of.pmid",
                  "umls": "subclass_of.umls"
               },
               "PhenotypicFeature-subclass_of-BiologicalProcess": {
                  "pmid": "subclass_of.pmid",
                  "umls": "subclass_of.umls"
               },
               "PhenotypicFeature-subclass_of-ChemicalSubstance": {
                  "pmid": "subclass_of.pmid",
                  "umls": "subclass_of.umls"
               },
               "PhenotypicFeature-subclass_of-Disease": {
                  "pmid": "subclass_of.pmid",
                  "umls": "subclass_of.umls"
               },
               "PhenotypicFeature-subclass_of-Gene": {
                  "pmid": "subclass_of.pmid",
                  "umls": "subclass_of.umls"
               },
               "PhenotypicFeature-subclass_of-PhenotypicFeature": {
                  "pmid": "subclass_of.pmid",
                  "umls": "subclass_of.umls"
               },
               "PhenotypicFeature-treats-Disease": {
                  "pmid": "treats.pmid",
                  "umls": "treats.umls"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)",
            "termsOfService": "http://biothings.ncats.io",
            "title": "SEMMED Phenotype API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/phenotype",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/phenotype/{phenotypeid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on ID",
                           "example": "C0004096",
                           "in": "path",
                           "name": "phenotypeid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from mydisease.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a mydisease.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-causes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-causes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupted_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupted_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupted_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_subclass-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_subclass-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-located_in-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-located_in-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-located_in-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifestation_of-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifestation_of-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifestation_of-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifested_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-physically_interacts_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-physically_interacts_with-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-physically_interacts_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-preceded_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-preceded_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-precedes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-predisposes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-prevents-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produces-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produces-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-treats-Disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://biothings.ncats.io/semmedphenotype"
            }
         ],
         "tags": [
            {
               "name": "phenotype"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "semmed"
            }
         ]
      },
      {
         "_id": "9d7ab69df070c2c1b9ce89e750569b5b",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph  linking together similar compounds.  Two compounds are linked by an edge in the graph if they are equivalent when charge, salts, and stereochemistry are ignored.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Chemical%20normalization&provider_long=RENCI",
            "title": "Automat Chemical normalization",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/chemical-normalization"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "9ee398a738916a98b612068cc022454f",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "drug-indication": [
                  {
                     "inputs": [
                        {
                           "id": "LINCS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "get",
                     "outputs": [
                        {
                           "id": "MESH",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "id": "{inputs[0]}"
                     },
                     "path": "/query",
                     "predicate": "treats",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/drug-indication"
                     },
                     "source": "LINCS",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "drug-indication": {
                  "MESH": "documents.mesh_id",
                  "name": "documents.mesh_heading"
               }
            }
         },
         "info": {
            "contact": {
               "email": "akoleti@med.miami.edu",
               "name": "UM BD2K-LINCS DCIC",
               "x-id": "http://lincsportal.ccs.miami.edu/",
               "x-role": "responsible organization"
            },
            "description": "Documentation of the LINCS Data Portal web services. Learn more about [LINCS Data Portal](http://lincsportal.ccs.miami.edu/dcic-portal/)",
            "termsOfService": "http://lincsportal.ccs.miami.edu/dcic-portal/#/terms",
            "title": "LINCS Data Portal API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/fetchmolecules",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Parameter used for searching small molecule metadata fields. Syntax is \"field name:\"value\"\" Do Not include outer quotes. Example; Name:\"Imatinib\", lincsidentifier:\"LSM-1028\", etc. Setting search term equal to the wildcard charachter, \"*\", will query for all fields of all records up to the specified limit.",
                           "in": "query",
                           "name": "searchTerm",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/lincs.smallmolecule"
                           ]
                        },
                        {
                           "description": "limit the number of records returned, default is 10",
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with 'documents' property, each document corresponds to a small molecule that matched the query criteria.",
                           "x-responseValueType": [
                              {
                                 "path": "lincs.smallmolecule",
                                 "valueType": " http://identifiers.org/"
                              }
                           ]
                        }
                     },
                     "summary": "Get LINCS small molecule records, which contain both LINCS-based and general metadata about the small molecules tested in the NIH LINCS program. Parameter 'searchTerm' allows querying by specific metadata fields within small molecule records.",
                     "tags": [
                        "small molecule",
                        "query",
                        "LINCS",
                        "SchuererLab"
                     ]
                  }
               }
            },
            {
               "path": "/fetchcells",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Parameter used for searching cell line metadata fields. Syntax is \"field name:\"value\"\" Do Not include outer quotes. Example; Name:\"MCF7\", lincsidentifier:\"LSM-1028\", etc. Setting search term equal to the wildcard charachter, \"*\", will query for all fields of all records up to the specified limit.",
                           "in": "query",
                           "name": "searchTerm",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              " http://identifiers.org/lincs.cell"
                           ]
                        },
                        {
                           "description": "limit the number of records returned, default is 10",
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with 'documents' property, each document corresponds to a cell line that matched the query criteria.",
                           "x-responseValueType": [
                              {
                                 "path": "lincs.cell",
                                 "valueType": "http://identifiers.org/'"
                              }
                           ]
                        }
                     },
                     "summary": "Get LINCS cell lines records, which contain both LINCS-based and general metadata about the cell lines tested in the NIH LINCS program. Parameter 'searchTerm' allows querying by specific metadata fields within the cell line records.",
                     "tags": [
                        "diseases",
                        "cells",
                        "query",
                        "LINCS",
                        "SchuererLab"
                     ]
                  }
               }
            },
            {
               "path": "/fetchdata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Parameter used for searching data set metadata fields. Syntax is \"field name:\"value\"\" Do Not include outer quotes. Example; centerfullname:\"HMS LINCS (Harvard Medical School)\", technologies:\"Fluorescence imaging\", etc. Setting search term equal to the wildcard charachter, \"*\", will query for all fields of all records up to the specified limit.",
                           "in": "query",
                           "name": "searchTerm",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/lincs.data"
                           ]
                        },
                        {
                           "description": "limit the number of records returned, default is 10",
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with 'documents' property, each document corresponds to a dataset that matched the query criteria.",
                           "x-responseValueType": [
                              {
                                 "path": "lincs.data",
                                 "valueType": "http://identifiers.org/"
                              }
                           ]
                        }
                     },
                     "summary": "Get metadata for LINCS assay data sets (DOES NOT RETURN ASSAY ENDPOINT DATA). Parameter 'searchTerm' allows querying by specific metadata fields within the assay metadata records.",
                     "tags": [
                        "signature",
                        "query",
                        "LINCS",
                        "SchuererLab"
                     ]
                  }
               }
            },
            {
               "path": "/mechanismOfAction",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Parameter used to search by LINCS small molecule identifier. Syntax is \"id=LSM-#\" Do Not use quotes. Example; id=LSM-1008.",
                           "in": "query",
                           "name": "id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/lincs.smallmolecule"
                           ]
                        },
                        {
                           "description": "Parameter used to search by the full name of the mechanism of action. Syntax is \"moa=Mechanism name\" Do Not use quotes. Example; moa=Stem cell growth factor receptor inhibitor.",
                           "in": "query",
                           "name": "moa",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "limit the number of records returned, default is 10",
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with 'documents' property, each document corresponds to a mechanism of action that matched the query criteria.",
                           "x-responseValueType": [
                              {
                                 "path": "lincs.smallmolecule",
                                 "valueType": "http://identifiers.org/"
                              }
                           ]
                        }
                     },
                     "summary": "Get known mechanisms of action for LINCS small molecules.",
                     "tags": [
                        "query",
                        "LINCS",
                        "SchuererLab",
                        "small molecule"
                     ]
                  }
               }
            },
            {
               "path": "/bioactivity",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Parameter used to search by LINCS small molecule identifier. Syntax is \"id=LSM-#\" Do Not use quotes. Example; id=LSM-1008.",
                           "in": "query",
                           "name": "id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/lincs.smallmolecule"
                           ]
                        },
                        {
                           "description": "Parameter used to search by the biochemical assay target using the target's preferred gene symbol from UniProt. Syntax is \"target=GENE SYMBOL\" Do Not use quotes. Examples; target=BRAF; target=MAPK13; etc..",
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Parameter used to search by the biochemical assay target using the target's UniProt accession number. Syntax is \"uniprot=accession number\" Do Not use quotes. Examples; uniprto=O15264; uniprot=P15056; etc..",
                           "in": "query",
                           "name": "uniprot",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "limit the number of records returned, default is 10",
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with 'documents' property, each document corresponds to a bioactivity that matched the query criteria.",
                           "x-responseValueType": [
                              {
                                 "path": "lincs.smallmolecule",
                                 "valueType": "http://identifiers.org/"
                              }
                           ]
                        }
                     },
                     "summary": "Get known bioactivities for LINCS small molecules, these data are aggregated values resourced from the ChEMBL ver 23 database <https://www.ebi.ac.uk/chembl/>. The ChEMBL values were mined from numerous sources.",
                     "tags": [
                        "signature",
                        "query",
                        "LINCS",
                        "SchuererLab",
                        "small molecule"
                     ]
                  }
               }
            },
            {
               "path": "/drugindication",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Parameter used to search by LINCS small molecule identifier. Syntax is \"id=LSM-#\" Do Not use quotes. Example; id=LSM-1008.",
                           "in": "query",
                           "name": "id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           },
                           "x-valueType": [
                              "http://identifiers.org/lincs.smallmolecule"
                           ]
                        },
                        {
                           "description": "Parameter used to search by the EFO drug indication. Syntax is \"efo=Drug Indication\" Do Not use quotes. Example; efo=renal carcinoma",
                           "in": "query",
                           "name": "efo",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Parameter used to search by the MeSH drug indication. Syntax is \"efo=Drug Indication\" Do Not use quotes. Example; mesh=carcinoma, renal cell",
                           "in": "query",
                           "name": "mesh",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "limit the number of records returned, default is 10",
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with 'documents' property, each document corresponds to a drug indication that matched the query criteria.",
                           "x-responseValueType": [
                              {
                                 "path": "lincs.smallmolecule",
                                 "valueType": "http://identifiers.org/"
                              }
                           ]
                        }
                     },
                     "summary": "Get known drug indications for LINCS small molecules, the indications are captured from both the Experimental Factor Ontology (EFO) and the Medical Subject Headings (MeSH) vocabularies.",
                     "tags": [
                        "signature",
                        "query",
                        "LINCS",
                        "SchuererLab",
                        "small molecule"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/drug-indication"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Parameter used to search by the DO disease name. Syntax is \"disease=disease name\" Do Not use quotes. Example; disease=breast carcinoma",
                           "in": "query",
                           "name": "disease",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Parameter used to search by the DO identifier. Syntax is \"doid=DOID:#\" Do Not use quotes. Example; doid=DOID:3459",
                           "in": "query",
                           "name": "doid",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "limit the number of records returned, default is 10",
                           "in": "query",
                           "name": "limit",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A query response object with 'documents' property, each document corresponds to a disease that matched the query criteria.",
                           "x-responseValueType": [
                              {
                                 "path": "lincs.cell",
                                 "valueType": "http://identifiers.org/"
                              }
                           ]
                        }
                     },
                     "summary": "Query for LINCS cell line identifiers by disease, the diseases are captured from the Disease Ontology (DO) vocabulary.",
                     "tags": [
                        "diseases",
                        "query",
                        "LINCS",
                        "SchuererLab",
                        "cells"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://lincsportal.ccs.miami.edu/dcic/api/"
            }
         ],
         "tags": [
            {
               "name": "small molecule"
            },
            {
               "name": "query"
            },
            {
               "name": "cells"
            },
            {
               "name": "gene"
            },
            {
               "name": "diseases"
            },
            {
               "name": "LINCS"
            },
            {
               "name": "SchuererLab"
            },
            {
               "name": "signature"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "da159a55e799a163ee23783edcb11725",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "luke.j.veenhuis@dartmouth.edu",
               "name": "Luke Veenhuis",
               "x-id": "LukeVeenhuis",
               "x-role": "responsible developer"
            },
            "description": "A Translator Reasoner API for the Connections Hypothesis Provider",
            "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            },
            "termsOfService": "https://github.com/di2ag/chp_api/blob/master/terms%20of%20service",
            "title": "Connections Hypothesis Provider API",
            "version": "2.0",
            "x-reasoner_standard_version": 1.0,
            "x-translator": {
               "component": "KP",
               "team": [
                  "Connections Hypothesis Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:Drug": {
                                          "biolink:Disease": [
                                             "biolink:ChemicalToDiseaseOrPhenotypicFeatureAssociation"
                                          ]
                                       },
                                       "biolink:Gene": {
                                          "biolink:Disease": [
                                             "biolink:GeneToDiseaseAssociation"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "Predicates"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            },
            {
               "path": "/versions",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "object of service versions",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "object"
                                       }
                                    },
                                    "example": {
                                       "chp": "1.1.0",
                                       "chp_client": "0.2.1",
                                       "chp_data": "0.1.1",
                                       "pybkb": "1.1.0"
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "versions of our service"
                        }
                     },
                     "summary": "Get a list of versions of our service repositories",
                     "tags": [
                        "Versions"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "externalDocs": {
                        "url": "https://github.com/di2ag/chp_client"
                     },
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": {
                                          "e0": {
                                             "object": "n2",
                                             "predicate": "biolink:GeneToDiseaseAssociation",
                                             "subject": "n0"
                                          },
                                          "e1": {
                                             "object": "n2",
                                             "predicate": "biolink:ChemicalToDiseaseOrPhenotypicFeatureAssociation",
                                             "subject": "n1"
                                          },
                                          "e2": {
                                             "object": "n3",
                                             "predicate": "biolink:DiseaseToPhenotypicFeatureAssociation",
                                             "properties": {
                                                "days": 500,
                                                "qualifier": ">="
                                             },
                                             "subject": "n2"
                                          }
                                       },
                                       "nodes": {
                                          "n0": {
                                             "category": "biolink:Gene",
                                             "id": "ENSEMBL:ENSG00000132155"
                                          },
                                          "n1": {
                                             "category": "biolink:Drug",
                                             "id": "CHEMBL:CHEMBL1201585"
                                          },
                                          "n2": {
                                             "category": "biolink:Disease",
                                             "id": "MONDO:0007254"
                                          },
                                          "n3": {
                                             "category": "biolink:PhenotypicFeature",
                                             "id": "EFO:0000714"
                                          }
                                       }
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        }
                     },
                     "summary": "Get answers to a question",
                     "tags": [
                        "Query"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            },
            {
               "path": "/curies",
               "pathitem": {
                  "get": {
                     "externalDocs": {
                        "url": "https://github.com/di2ag/chp_client"
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "object of supported curies",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "object"
                                       }
                                    },
                                    "example": {
                                       "biolink:Disease": [
                                          {
                                             "id": "MONDO:0007254",
                                             "name": "breast_cancer"
                                          }
                                       ],
                                       "biolink:Drug": [
                                          {
                                             "id": "CHEMBL:CHEMBL1201247",
                                             "name": "ZOLADEX"
                                          }
                                       ],
                                       "biolink:Gene": [
                                          {
                                             "id": "ENSEMBL:ENSG00000106665",
                                             "name": "CLIP2"
                                          }
                                       ],
                                       "biolink:PhenotypicFeature": [
                                          {
                                             "id": "EFO:0000714",
                                             "name": "survival_time"
                                          }
                                       ]
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "set of curies currently supported by our service"
                        }
                     },
                     "summary": "Get a set of curies currently supported by our service",
                     "tags": [
                        "Curies"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production Server",
               "url": "chp.thayer.dartmouth.edu/"
            }
         ],
         "tags": [
            {
               "name": "bayesian"
            },
            {
               "name": "translator"
            },
            {
               "name": "1.0.0"
            }
         ]
      },
      {
         "_id": "d22b657426375a5295e7da8a303b9893",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "anatomy-gene": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "anatomy_id": "{inputs[0]}",
                        "direct": true,
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/anatomy-gene-hgnc"
                     },
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "anatomy_id": "{inputs[0]}",
                        "direct": true,
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/anatomy-gene-ncbigene"
                     },
                     "supportBatch": false
                  }
               ],
               "disease-gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "disease_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-gene-hgnc"
                     },
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "disease_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-gene-ncbigene"
                     },
                     "supportBatch": false
                  }
               ],
               "disease-pathway": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "REACT",
                           "semantic": "Pathway"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "disease_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-pathway"
                     },
                     "supportBatch": false
                  }
               ],
               "disease-phenotype": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "disease_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "has_phenotype",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-phenotype"
                     },
                     "supportBatch": false
                  }
               ],
               "gene-anatomy": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "gene_id": "NCBIGene:{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-anatomy"
                     },
                     "supportBatch": false
                  }
               ],
               "gene-disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "gene_id": "NCBIGene:{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-disease"
                     },
                     "supportBatch": false
                  }
               ],
               "gene-interaction": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "gene_id": "NCBIGene:{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "physically_interacts_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-interaction-hgnc"
                     },
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "gene_id": "NCBIGene:{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-interaction-ncbigene"
                     },
                     "supportBatch": false
                  }
               ],
               "gene-phenotype": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "gene_id": "NCBIGene:{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-phenotype"
                     },
                     "supportBatch": false
                  }
               ],
               "pathway-disease": [
                  {
                     "inputs": [
                        {
                           "id": "REACT",
                           "semantic": "Pathway"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "pathway_id": "REACT:{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/pathway-disease"
                     },
                     "supportBatch": false
                  }
               ],
               "pathway-phenotype": [
                  {
                     "inputs": [
                        {
                           "id": "REACT",
                           "semantic": "Pathway"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "gene_id": "REACT:{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/pathway-phenotype"
                     },
                     "supportBatch": false
                  }
               ],
               "phenotype-disease": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "phenotype_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/phenotype-disease"
                     },
                     "supportBatch": false
                  }
               ],
               "phenotype-gene": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "phenotype_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/phenotype-gene-hgnc"
                     },
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "phenotype_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/phenotype-gene-ncbigene"
                     },
                     "supportBatch": false
                  }
               ],
               "phenotype-pathway": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "REACT",
                           "semantic": "Pathway"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "phenotype_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/phenotype-pathway"
                     },
                     "supportBatch": false
                  }
               ],
               "phenotype-variant": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "parameters": {
                        "direct": true,
                        "phenotype_id": "{inputs[0]}",
                        "rows": 200,
                        "unselect_evidence": true
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/phenotype-variant"
                     },
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "anatomy-gene-hgnc": {
                  "HGNC": "associations.object.HGNC",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "anatomy-gene-ncbigene": {
                  "NCBIGene": "associations.object.NCBIGene",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "disease-gene-hgnc": {
                  "HGNC": "associations.object.HGNC",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by",
                  "taxid": "associations.object.taxon.id"
               },
               "disease-gene-ncbigene": {
                  "NCBIGene": "associations.object.NCBIGene",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by",
                  "taxid": "associations.object.taxon.id"
               },
               "disease-pathway": {
                  "REACT": "associations.object.REACT",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "disease-phenotype": {
                  "HP": "associations.object.HP",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "gene-anatomy": {
                  "UBERON": "associations.object.UBERON",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "gene-disease": {
                  "MONDO": "associations.object.MONDO",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "gene-interaction-hgnc": {
                  "HGNC": "associations.object.HGNC",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by",
                  "taxid": "associations.object.taxon.id"
               },
               "gene-interaction-ncbigene": {
                  "NCBIGene": "associations.object.NCBIGene",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by",
                  "taxid": "associations.object.taxon.id"
               },
               "gene-phenotype": {
                  "HP": "associations.object.HP",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "pathway-disease": {
                  "MONDO": "associations.object.MONDO",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "pathway-phenotype": {
                  "HP": "associations.object.HP",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "phenotype-disease": {
                  "MONDO": "associations.object.MONDO",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "phenotype-gene-hgnc": {
                  "HGNC": "associations.object.HGNC",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "phenotype-gene-ncbigene": {
                  "NCBIGene": "associations.object.NCBIGene",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "phenotype-pathway": {
                  "REACT": "associations.object.REACT",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               },
               "phenotype-variant": {
                  "DBSNP": "associations.object.DBSNP",
                  "name": "associations.object.label",
                  "pubmed": "associations.publications.id",
                  "relation": "associations.relation.label",
                  "source": "associations.provided_by"
               }
            }
         },
         "info": {
            "contact": {
               "email": "cjm@berkeleybop.org",
               "name": "Chris Mungall",
               "x-id": "https://github.com/cmungall",
               "x-role": "responsible developer"
            },
            "description": "API integration layer for linked biological objects.",
            "termsOfService": "https://github.com/monarch-initiative/biolink-api/",
            "title": "BioLink API",
            "version": "0.1.1",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Standards Reference Implementation Team"
               ]
            }
         },
         "paths": [
            {
               "path": "/bioentity/anatomy/{anatomy_id}/genes",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of anatomy IDs can be used with same results",
                           "example": "UBERON:0002037",
                           "in": "path",
                           "name": "anatomy_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/anatomy-gene"
                           }
                        }
                     },
                     "summary": "Returns genes associated with an anatomy",
                     "tags": [
                        "anatomy"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/anatomy-gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/disease/{disease_id}/genes",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of disease IDs can be used with same results",
                           "example": "MONDO:0016575",
                           "in": "path",
                           "name": "disease_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns genes associated with a disease",
                     "tags": [
                        "disease"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/disease/{disease_id}/pathways",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of disease IDs can be used with same results",
                           "example": "MONDO:0016575",
                           "in": "path",
                           "name": "disease_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns pathways associated with a disease",
                     "tags": [
                        "disease"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-pathway"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/disease/{disease_id}/phenotypes",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of disease IDs can be used with same results",
                           "example": "MONDO:0016575",
                           "in": "path",
                           "name": "disease_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns phenotypes associated with a disease",
                     "tags": [
                        "disease"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-phenotype"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/gene/{gene_id}/anatomy",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of gene IDs can be used with same results",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "gene_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns anatomies associated with a gene",
                     "tags": [
                        "gene"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-anatomy"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/gene/{gene_id}/diseases",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of gene IDs can be used with same results",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "gene_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns diseases associated with a gene",
                     "tags": [
                        "gene"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/gene/{gene_id}/interactions",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of gene IDs can be used with same results",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "gene_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns gene interaction",
                     "tags": [
                        "gene"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-interaction"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/gene/{gene_id}/phenotypes",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of gene IDs can be used with same results",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "gene_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns phenotypes associated with a gene",
                     "tags": [
                        "gene"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-phenotype"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/pathway/{pathway_id}/diseases",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of REACT pathway IDs can be used with same results",
                           "example": "REACT:R-HSA-5387390",
                           "in": "path",
                           "name": "pathway_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns diseases associated with a pathway",
                     "tags": [
                        "pathway"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/pathway-disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/pathway/{pathway_id}/phenotypes",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of REACT pathway IDs can be used with same results",
                           "example": "REACT:R-HSA-5387390",
                           "in": "path",
                           "name": "pathway_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns phenotypes associated with a pathway",
                     "tags": [
                        "pathway"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/pathway-phenotype"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/phenotype/{phenotype_id}/genes",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of phenotype IDs can be used with same results",
                           "example": "HP:0012265",
                           "in": "path",
                           "name": "phenotype_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns genes associated with a phenotype",
                     "tags": [
                        "phenotype"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/phenotype-gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/phenotype/{phenotype_id}/pathways",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of phenotype IDs can be used with same results",
                           "example": "HP:0012265",
                           "in": "path",
                           "name": "phenotype_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns pathways associated with a phenotype",
                     "tags": [
                        "phenotype"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/phenotype-pathway"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/phenotype/{phenotype_id}/variants",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of phenotype IDs can be used with same results",
                           "example": "HP:0012265",
                           "in": "path",
                           "name": "phenotype_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns pathways associated with a phenotype",
                     "tags": [
                        "phenotype"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/phenotype-variant"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/bioentity/phenotype/{phenotype_id}/diseases",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "CURIE identifier of phenotype IDs can be used with same results",
                           "example": "HP:0012265",
                           "in": "path",
                           "name": "phenotype_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "number of rows",
                           "example": 100,
                           "in": "query",
                           "name": "rows",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
                        }
                     },
                     "summary": "Returns diseases associated with a phenotype",
                     "tags": [
                        "phenotype"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/phenotype-disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://api.monarchinitiative.org/api"
            }
         ],
         "tags": [
            {
               "name": "anatomy"
            },
            {
               "name": "disease"
            },
            {
               "name": "gene"
            },
            {
               "name": "phenotype"
            },
            {
               "name": "pathway"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biolink"
            }
         ]
      },
      {
         "_id": "4974ebbf2c1ae31a25a7a7b2d9e4b0d4",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "ChemicalSubstance-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.KEGG:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance1-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.KEGG:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HMDB:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance2-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HMDB:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PUBCHEM:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance3-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PUBCHEM:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CAS:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance4-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CAS:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.LOINC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.LOINC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HGNC:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein1-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HGNC:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance1": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "KEGG",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance2": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HMDB",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance3": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance3-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PUBCHEM",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance4": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-ChemicalSubstance4-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CAS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "LOINC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-Protein1": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-Protein1-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-Protein2": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UNIPROT:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Protein2-Protein2-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UNIPROT",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UNIPROT:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000,
                        "sort": "association.pval"
                     },
                     "predicate": "correlated_with",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "ChemicalSubstance": {
                  "CAS": "hits.object.CAS",
                  "HMDB": "hits.object.HMDB",
                  "KEGG": "hits.object.KEGG",
                  "LOINC": "hits.object.LOINC",
                  "N": "hits.association.N",
                  "PUBCHEM": "hits.object.PUBCHEM",
                  "pval": "hits.association.pval",
                  "rho": "hits.association.rho"
               },
               "ChemicalSubstance-reverse": {
                  "CAS": "hits.subject.CAS",
                  "HMDB": "hits.subject.HMDB",
                  "KEGG": "hits.subject.KEGG",
                  "LOINC": "hits.subject.LOINC",
                  "N": "hits.association.N",
                  "PUBCHEM": "hits.subject.PUBCHEM",
                  "pval": "hits.association.pval",
                  "rho": "hits.association.rho"
               },
               "Protein": {
                  "HGNC": "hits.object.HGNC",
                  "LOINC": "hits.object.LOINC",
                  "N": "hits.association.N",
                  "UNIPROT": "hits.object.UNIPROT",
                  "pval": "hits.association.pval",
                  "rho": "hits.association.rho"
               },
               "Protein-reverse": {
                  "HGNC": "hits.subject.HGNC",
                  "LOINC": "hits.subject.LOINC",
                  "N": "hits.association.N",
                  "UNIPROT": "hits.subject.UNIPROT",
                  "pval": "hits.association.pval",
                  "rho": "hits.association.rho"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Multiomics Wellness KP query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Multiomics Wellness KP API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Multiomics Provider",
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "UNIPROT:P24394-biolink:correlated_with-UNIPROT:O00233-UNIPROT:O00233-0.5289143223483601-",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "subject.id:UNIPROT\\:P25685",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance1-Protein2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance2-Protein2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance3-Protein2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance4-Protein2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein1-Protein2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance2-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance3-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-ChemicalSubstance4-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-Protein1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-Protein1-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-Protein2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein2-Protein2-reverse"
                        }
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/multiomics_wellness_kp"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/multiomics_wellness_kp"
            }
         ],
         "tags": [
            {
               "name": "protein"
            },
            {
               "name": "chemical_substance"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "ed85eff6809e354002cbf17231918a89",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on the [Monarch API (https://api.monarchinitiative.org/)](https://api.monarchinitiative.org/).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Biolink&provider_long=RENCI",
            "title": "Automat Biolink",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/biolink"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "Automat"
            }
         ]
      },
      {
         "_id": "27a5b60716c3a401f2c021a5b718c5b1",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "cwu@scripps.edu",
               "name": "Chunlei Wu",
               "url": "https://github.com/newgene",
               "x-id": "https://orcid.org/0000-0002-2629-6124",
               "x-role": "responsible developer"
            },
            "description": "This is the API provided from [SmartAPI](https://smart-api.info) application.",
            "termsOfService": "https://creativecommons.org/licenses/by/4.0/",
            "title": "SmartAPI API",
            "version": "1.0",
            "x-implementationLanguage": "Python",
            "x-maturity": "production",
            "x-translator": {
               "component": "Utility",
               "team": "Service Provider"
            }
         },
         "paths": [
            {
               "path": "/metadata/{api_id}",
               "pathitem": {
                  "get": {
                     "description": "Return matching API metadata",
                     "operationId": "",
                     "parameters": [
                        {
                           "description": "The value can be either the API id (e.g. \"27a5b60716c3a401f2c021a5b718c5b1\")\n or the slug name (e.g. \"mygene\"). You can also pass \"all\" to get a list of\n all API metadata (using \"from\" and \"size\" for pagination).",
                           "in": "path",
                           "name": "api_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "include \"_meta\" and \"_id\" fields in the response if passed \"1\" or \"true\". Default is \"false\".",
                           "in": "query",
                           "name": "meta",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "return raw metadata document if passed \"1\" or \"true\". Default is \"false\".",
                           "in": "query",
                           "name": "raw",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "You can use this parameter to filter the fields returned from the raw metadata document. Only effective when \"raw=1\" is passed. E.g. \"info.contact.name,servers\". Nested fields are supported via dot notation, and multiple fields can be passed as a comma-separated string.",
                           "in": "query",
                           "name": "fields",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Output format for the return API metadata. The value can be \"json\" or \"yaml\". Default is \"json\".",
                           "in": "query",
                           "name": "format",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Number of items to be skipped. Combining with \"size\" parameter, this can be used for the pagination of the long result.",
                           "in": "query",
                           "name": "from",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The number of items returned in one request. Combining with \"from\" parameter, this can be used for the pagination of the long result.",
                           "in": "query",
                           "name": "size",
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "successful response"
                        }
                     },
                     "summary": "Return matching API metadata",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query/",
               "pathitem": {
                  "get": {
                     "description": "Query metadata for matching APIs.",
                     "parameters": [
                        {
                           "description": "Can pass any string as the query term to match any field, e.g. \"mygene.info\", or pass a fielded query term like \"info.contact.name:wu\".",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "You can use this parameter to filter the fields returned from the raw metadata document. Only effective when \"raw=1\" is passed. E.g. \"info.contact.name,servers\". Nested fields are supported via dot notation, and multiple fields can be passed as a comma-separated string.",
                           "in": "query",
                           "name": "fields",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "return raw metadata document if passed \"1\" or \"true\". Default is \"false\".",
                           "in": "query",
                           "name": "raw",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Number of items to be skipped. Combining with \"size\" parameter, this can be used for the pagination of the long result.",
                           "in": "query",
                           "name": "from",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The number of items returned in one request. Combining with \"from\" parameter, this can be used for the pagination of the long result.",
                           "in": "query",
                           "name": "size",
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "default response"
                        }
                     },
                     "summary": "Query metadata for matching APIs."
                  }
               }
            },
            {
               "path": "/validate",
               "pathitem": {
                  "get": {
                     "description": "Validate input SmartAPI metadata",
                     "operationId": "",
                     "parameters": [
                        {
                           "description": "The full URL of an input SmartAPI metadata to validate. The file format can be either JSON or YAML.",
                           "in": "query",
                           "name": "url",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "default response"
                        }
                     },
                     "summary": "Validate input SmartAPI metadata"
                  }
               }
            },
            {
               "path": "/suggestion",
               "pathitem": {
                  "get": {
                     "description": "Return suggested values from the existing APIs in the registry for a given field.",
                     "operationId": "",
                     "parameters": [
                        {
                           "description": "An input field to return the suggested values and their occurrence numbers.",
                           "in": "query",
                           "name": "field",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The maximum number of suggested values to return",
                           "in": "query",
                           "name": "size",
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "default": {
                           "description": "Default response"
                        }
                     },
                     "summary": "Return suggested values for a give field."
                  }
               }
            },
            {
               "path": "/metakg",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "The subject type of the association, e.g. Gene",
                           "example": "Gene",
                           "in": "query",
                           "name": "subject",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The object type of the association, e.g. ChemicalSubstance",
                           "example": "ChemicalSubstance",
                           "in": "query",
                           "name": "object",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The predicate of the association, e.g. Gene",
                           "example": "physically_interacts_with",
                           "in": "query",
                           "name": "predicate",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The API providing the association, e.g. MyChem.info API",
                           "example": "MyChem.info API",
                           "in": "query",
                           "name": "api",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The data source providing the association, e.g. drugbank",
                           "example": "drugbank",
                           "in": "query",
                           "name": "provided_by",
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "description": "Array of all associations",
                                    "items": {
                                       "properties": {
                                          "api": {
                                             "description": "The api providing the association, e.g. MyChem.info",
                                             "properties": {
                                                "name": {
                                                   "description": "The api providing the association, e.g. MyChem.info",
                                                   "example": "MyChem.info API",
                                                   "type": "string"
                                                },
                                                "smartapi": {
                                                   "description": "smartapi related data",
                                                   "properties": {
                                                      "id": {
                                                         "description": "unique smartapi id for the api",
                                                         "example": "8f08d1446e0bb9c2b323713ce83e2bd3",
                                                         "type": "string"
                                                      },
                                                      "metadata": {
                                                         "description": "the url for smartapi specification",
                                                         "example": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml",
                                                         "type": "string"
                                                      },
                                                      "ui": {
                                                         "description": "the web UI url for the API",
                                                         "example": "https://smart-api.info/ui/8f08d1446e0bb9c2b323713ce83e2bd3",
                                                         "type": "string"
                                                      }
                                                   },
                                                   "type": "object"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "object": {
                                             "description": "The object type of the association, e.g. ChemicalSubstance",
                                             "example": "ChemicalSubstance",
                                             "type": "string"
                                          },
                                          "predicate": {
                                             "description": "The predicate of the association, e.g. physically_interacts_with",
                                             "example": "physically_interacts_with",
                                             "type": "string"
                                          },
                                          "provided_by": {
                                             "description": "The data source providing the association, e.g. ChEMBL",
                                             "example": "ChEMBL",
                                             "type": "string"
                                          },
                                          "subject": {
                                             "description": "The subject type of the association, e.g. Gene",
                                             "example": "Gene",
                                             "type": "string"
                                          }
                                       },
                                       "type": "object"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Association information including subject, object, predicate, api, provided_by and smartapi info."
                        }
                     },
                     "summary": "retrieve associations within smartapi, if no parameters provided, will return all associations"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://smart-api.info/api"
            },
            {
               "description": "Development server",
               "url": "http://dev.smart-api.info/api"
            }
         ],
         "tags": [
            {
               "name": "api"
            },
            {
               "name": "metadata"
            },
            {
               "name": "openapi"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "855adaa128ce5aa58a091d99e520d396",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "luke.j.veenhuis@dartmouth.edu",
               "name": "Luke Veenhuis",
               "x-id": "LukeVeenhuis",
               "x-role": "responsible developer"
            },
            "description": "A Translator Reasoner API for the Connections Hypothesis Provider",
            "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            },
            "termsOfService": "https://github.com/di2ag/chp_api/blob/master/terms%20of%20service",
            "title": "Connections Hypothesis Provider API",
            "version": "2.0",
            "x-reasoner_standard_version": 1.0,
            "x-translator": {
               "component": "KP",
               "team": [
                  "Connections Hypothesis Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:Drug": {
                                          "biolink:Disease": [
                                             "biolink:ChemicalToDiseaseOrPhenotypicFeatureAssociation"
                                          ]
                                       },
                                       "biolink:Gene": {
                                          "biolink:Disease": [
                                             "biolink:GeneToDiseaseAssociation"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "Predicates"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            },
            {
               "path": "/versions",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "object of service versions",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "object"
                                       }
                                    },
                                    "example": {
                                       "chp": "1.1.0",
                                       "chp_client": "0.2.1",
                                       "chp_data": "0.1.1",
                                       "pybkb": "1.1.0"
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "versions of our service"
                        }
                     },
                     "summary": "Get a list of versions of our service repositories",
                     "tags": [
                        "Versions"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "externalDocs": {
                        "url": "https://github.com/di2ag/chp_client"
                     },
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": {
                                          "e0": {
                                             "object": "n2",
                                             "predicate": "biolink:GeneToDiseaseAssociation",
                                             "subject": "n0"
                                          },
                                          "e1": {
                                             "object": "n2",
                                             "predicate": "biolink:ChemicalToDiseaseOrPhenotypicFeatureAssociation",
                                             "subject": "n1"
                                          },
                                          "e2": {
                                             "object": "n3",
                                             "predicate": "biolink:DiseaseToPhenotypicFeatureAssociation",
                                             "properties": {
                                                "days": 500,
                                                "qualifier": ">="
                                             },
                                             "subject": "n2"
                                          }
                                       },
                                       "nodes": {
                                          "n0": {
                                             "category": "biolink:Gene",
                                             "id": "ENSEMBL:ENSG00000132155"
                                          },
                                          "n1": {
                                             "category": "biolink:Drug",
                                             "id": "CHEMBL:CHEMBL1201585"
                                          },
                                          "n2": {
                                             "category": "biolink:Disease",
                                             "id": "MONDO:0007254"
                                          },
                                          "n3": {
                                             "category": "biolink:PhenotypicFeature",
                                             "id": "EFO:0000714"
                                          }
                                       }
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        }
                     },
                     "summary": "Get answers to a question",
                     "tags": [
                        "Query"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            },
            {
               "path": "/curies",
               "pathitem": {
                  "get": {
                     "externalDocs": {
                        "url": "https://github.com/di2ag/chp_client"
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "object of supported curies",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "object"
                                       }
                                    },
                                    "example": {
                                       "biolink:Disease": [
                                          {
                                             "id": "MONDO:0007254",
                                             "name": "breast_cancer"
                                          }
                                       ],
                                       "biolink:Drug": [
                                          {
                                             "id": "CHEMBL:CHEMBL1201247",
                                             "name": "ZOLADEX"
                                          }
                                       ],
                                       "biolink:Gene": [
                                          {
                                             "id": "ENSEMBL:ENSG00000106665",
                                             "name": "CLIP2"
                                          }
                                       ],
                                       "biolink:PhenotypicFeature": [
                                          {
                                             "id": "EFO:0000714",
                                             "name": "survival_time"
                                          }
                                       ]
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "set of curies currently supported by our service"
                        }
                     },
                     "summary": "Get a set of curies currently supported by our service",
                     "tags": [
                        "Curies"
                     ],
                     "x-accessRestriction": "none"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production Server",
               "url": "http://chp.thayer.dartmouth.edu/"
            }
         ],
         "tags": [
            {
               "name": "bayesian"
            },
            {
               "name": "translator"
            },
            {
               "name": "1.0.0"
            }
         ]
      },
      {
         "_id": "5c5a0b5bc77e5d25d1a04e1385f9fad7",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical2disease": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-doid"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-mondo"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  }
               ],
               "chemical2gene": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2gene"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  }
               ],
               "disease2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chembl"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chebi"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  }
               ],
               "disease2gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2gene"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  }
               ],
               "gene2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chembl"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chebi"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  }
               ],
               "gene2disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-doid"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-mondo"
                     },
                     "source": "scibite",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "chemical2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               },
               "chemical2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "disease2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "disease2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "disease2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "gene2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "gene2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "gene2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "gene2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@renci.org",
               "name": "Chris B."
            },
            "description": "Scibite",
            "termsOfService": "https://automat.renci.org",
            "title": "Automat CORD19 Scibite API",
            "version": "2.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene/chemical_substance/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2chemical"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/gene/disease/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2disease",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/disease/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2disease",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/gene/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease/gene/{mondo}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put DOID ID here, e.g. \"DOID:123\"",
                           "example": "DOID:123",
                           "in": "path",
                           "name": "mondo",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "disease2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease2gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease/chemical_substance/{mondo}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put DOID ID here, e.g. \"DOID:123\"",
                           "example": "DOID:123",
                           "in": "path",
                           "name": "mondo",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "disease2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease2chemical"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://automat.renci.org/cord19-scibite"
            }
         ],
         "tags": [
            {
               "name": "drug"
            },
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "automat"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "71add13e7c8b26b0046cfb8cf5092395",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "target": {
                  "inputs": [
                     {
                        "id": "chembl",
                        "semantic": "ChemicalSubstance"
                     }
                  ],
                  "outputs": [
                     {
                        "id": "chembl",
                        "semantic": "Gene"
                     }
                  ],
                  "parameters": {
                     "molecule_chembl_id": "{input1}"
                  },
                  "response-mapping": {
                     "$ref": "#/components/x-bte-response-mapping/drug-mechanism"
                  },
                  "supportBatch": false
               }
            },
            "x-bte-response-mapping": {
               "drug-mechanism": {
                  "@context": "http://schema.org",
                  "@type": "ChemicalSubstance",
                  "bts:chembl": "chembl",
                  "bts:target": {
                     "$input": "bts:chembl",
                     "$source": "chembl",
                     "@type": "Gene",
                     "bts:action": "mechanisms.action_type",
                     "bts:chembl": "mechanisms.target_chembl_id",
                     "bts:mechanism": "mechanisms.mechanism_of_action"
                  }
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@chembl.org",
               "name": "chembl help desk",
               "x-role": "responsible developer"
            },
            "description": "The ChEMBL API",
            "termsOfService": "http://www.ebi.ac.uk/chembl",
            "title": "ChEMBL API",
            "version": "1.0"
         },
         "paths": [
            {
               "path": "/data/mechanism.json",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "chembl id",
                           "example": "CHEMBL744",
                           "in": "query",
                           "name": "molecule_chembl_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "A drug mechanism object",
                           "x-bte-response-mapping": {
                              "$ref": "#/components/x-bte-response-mapping/drug-mechanism"
                           }
                        }
                     },
                     "summary": "retrieve drug mechanism",
                     "x-bte-kgs-operations": {
                        "treats": {
                           "$ref": "#/components/x-bte-kgs-operations/target"
                        }
                     }
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://www.ebi.ac.uk/chembl/api"
            }
         ],
         "tags": [
            {
               "name": "publication"
            },
            {
               "name": "translator"
            }
         ]
      },
      {
         "_id": "b4b45614a935a575292aad3bb726d1f3",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "Gene families from [HGNC (genenames.org)](genenames.org).",
            "termsOfService": "http://linkmissing",
            "title": "Automat HGNC",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/hgnc"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "0c9f1154a1986f1774057af4c1caa5b2",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "AnatomicalEntity-affected_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-affected_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-affected_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-affected_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-affected_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-affects-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affects-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-affects-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affects-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-causes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-causes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-causes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-causes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-disrupted_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-disrupted_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-disrupted_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-disrupted_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-manifestation_of-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "manifestation_of"
                     },
                     "path": "/query",
                     "predicate": "manifestation_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-manifestation_of-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-manifested_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "manifested_by"
                     },
                     "path": "/query",
                     "predicate": "manifested_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-manifested_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-negatively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-negatively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-negatively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-negatively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-negatively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-negatively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-physically_interacts_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-physically_interacts_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-physically_interacts_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-physically_interacts_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-positively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-positively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-positively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-positively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-preceded_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "preceded_by"
                     },
                     "path": "/query",
                     "predicate": "preceded_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-preceded_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-preceded_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "preceded_by"
                     },
                     "path": "/query",
                     "predicate": "preceded_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-preceded_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-precedes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "precedes"
                     },
                     "path": "/query",
                     "predicate": "precedes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-precedes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-precedes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "precedes"
                     },
                     "path": "/query",
                     "predicate": "precedes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-precedes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-predisposes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "predisposes"
                     },
                     "path": "/query",
                     "predicate": "predisposes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-predisposes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-prevents-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "prevents"
                     },
                     "path": "/query",
                     "predicate": "prevents",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-prevents-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-related_to-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-related_to-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-related_to-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-related_to-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-related_to-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-related_to-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "AnatomicalEntity-related_to-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "AnatomicalEntity-affected_by-BiologicalProcess": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "AnatomicalEntity-affected_by-CellularComponent": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "AnatomicalEntity-affected_by-ChemicalSubstance": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "AnatomicalEntity-affected_by-Disease": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "AnatomicalEntity-affected_by-Gene": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "AnatomicalEntity-affects-BiologicalProcess": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "AnatomicalEntity-affects-Disease": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "AnatomicalEntity-causes-BiologicalProcess": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "AnatomicalEntity-causes-Disease": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "AnatomicalEntity-disrupted_by-BiologicalProcess": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "AnatomicalEntity-disrupted_by-ChemicalSubstance": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "AnatomicalEntity-disrupted_by-Disease": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "AnatomicalEntity-disrupted_by-Gene": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "AnatomicalEntity-manifestation_of-BiologicalProcess": {
                  "pmid": "manifestation_of.pmid",
                  "umls": "manifestation_of.umls"
               },
               "AnatomicalEntity-manifested_by-Disease": {
                  "pmid": "manifested_by.pmid",
                  "umls": "manifested_by.umls"
               },
               "AnatomicalEntity-negatively_regulated_by-ChemicalSubstance": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "AnatomicalEntity-negatively_regulates-ChemicalSubstance": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "AnatomicalEntity-negatively_regulates-Gene": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "AnatomicalEntity-physically_interacts_with-ChemicalSubstance": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "AnatomicalEntity-physically_interacts_with-Gene": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "AnatomicalEntity-positively_regulated_by-ChemicalSubstance": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "AnatomicalEntity-positively_regulated_by-Gene": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "AnatomicalEntity-positively_regulates-ChemicalSubstance": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "AnatomicalEntity-positively_regulates-Gene": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "AnatomicalEntity-preceded_by-BiologicalProcess": {
                  "pmid": "preceded_by.pmid",
                  "umls": "preceded_by.umls"
               },
               "AnatomicalEntity-preceded_by-Disease": {
                  "pmid": "preceded_by.pmid",
                  "umls": "preceded_by.umls"
               },
               "AnatomicalEntity-precedes-BiologicalProcess": {
                  "pmid": "precedes.pmid",
                  "umls": "precedes.umls"
               },
               "AnatomicalEntity-precedes-Disease": {
                  "pmid": "precedes.pmid",
                  "umls": "precedes.umls"
               },
               "AnatomicalEntity-predisposes-Disease": {
                  "pmid": "predisposes.pmid",
                  "umls": "predisposes.umls"
               },
               "AnatomicalEntity-prevents-Disease": {
                  "pmid": "prevents.pmid",
                  "umls": "prevents.umls"
               },
               "AnatomicalEntity-related_to-AnatomicalEntity": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "AnatomicalEntity-related_to-BiologicalProcess": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "AnatomicalEntity-related_to-CellularComponent": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "AnatomicalEntity-related_to-ChemicalSubstance": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "AnatomicalEntity-related_to-Disease": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "AnatomicalEntity-related_to-Gene": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "AnatomicalEntity-related_to-PhenotypicFeature": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)",
            "termsOfService": "http://biothings.ncats.io",
            "title": "SEMMED Anatomy API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/anatomy",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/anatomy/{anatomyid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on ID",
                           "example": "C0004096",
                           "in": "path",
                           "name": "anatomyid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from mydisease.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a mydisease.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affects-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affects-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-causes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-causes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-manifestation_of-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-manifested_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-negatively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-negatively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-negatively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-physically_interacts_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-physically_interacts_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-preceded_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-preceded_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-precedes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-precedes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-predisposes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-prevents-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-CellularComponent"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://biothings.ncats.io/semmed_anatomy"
            }
         ],
         "tags": [
            {
               "name": "anatomicalentity"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "semmed"
            }
         ]
      },
      {
         "_id": "1f47552dabd67351d4c625adb0a10d00",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "gene_related_to_phenotype": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "gene2phenotype"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene_related_to_phenotype"
                     },
                     "source": "EBI",
                     "supportBatch": true
                  }
               ],
               "phenotype_related_to_gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HGNC",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "_id",
                        "size": "350"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "gene2phenotype.phenotypes"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/phenotype_related_to_gene"
                     },
                     "source": "EBI",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "gene_related_to_phenotype": {
                  "HP": "gene2phenotype.phenotypes",
                  "probability": "gene2phenotype.DDD_category",
                  "pubmed": "gene2phenotype.pmids"
               },
               "phenotype_related_to_gene": {
                  "HGNC": "_id"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the EBIgene2phenotype query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "EBIgene2phenotype API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple HGNC Gene IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Gene"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching gene objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of chemical IDs, return the matching gene object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/gene/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve gene objects based on HGNC Gene ID  Supports JSONP and CORS as well.",
                           "example": 851,
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Gene"
                                 }
                              }
                           },
                           "description": "A matching gene object"
                        },
                        "404": {
                           "description": "A response indicating an unknown gene ID"
                        }
                     },
                     "summary": "Retrieve gene objects based on ID",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "EBIgene2phenotype metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from EBIgene2phenotype",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "EBIgene2phenotype metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a EBIgene2phenotype gene object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "gene2phenotype.mutation_consequence:\"loss of function\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching gene hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch gene queries and return matching gene hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene_related_to_phenotype"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/phenotype_related_to_gene"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/ebigene2phenotype"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/ebigene2phenotype"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "phenotype"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "5be0f321a829792e934545998b9c6afe",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "AnatomicalEntity-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "AnatomicalEntity-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "BiologicalProcess-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CL:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Cell-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CL:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "CellularComponent-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Disease-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Gene-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.GO:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "MolecularActivity-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.GO:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "OrganismTaxon-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.PR:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "Protein-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.PR:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-AnatomicalEntity": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-AnatomicalEntity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UBERON",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-BiologicalProcess": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-BiologicalProcess-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:BiologicalProcess",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Cell": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Cell-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CL",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:Cell",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Cell-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-CellularComponent": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-CellularComponent-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:CellularComponent",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-ChemicalSubstance": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-ChemicalSubstance-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Disease": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Disease-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:Disease",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Gene": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Gene-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:Gene",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Gene-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-MolecularActivity": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-MolecularActivity-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "MolecularActivity"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:MolecularActivity",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-OrganismTaxon": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-OrganismTaxon-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBITaxon",
                           "semantic": "OrganismTaxon"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:OrganismTaxon",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-PhenotypicFeature": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-PhenotypicFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Protein": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-Protein-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "PR",
                           "semantic": "Protein"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:Protein",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Protein-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-SequenceFeature": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,association",
                        "q": "subject.SO:\"{inputs[0]}\" AND object.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ],
               "SequenceFeature-SequenceFeature-reverse": [
                  {
                     "inputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SO",
                           "semantic": "SequenceFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,association",
                        "q": "object.SO:\"{inputs[0]}\" AND subject.type:SequenceFeature",
                        "size": 1000
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"
                     },
                     "source": "Text Mining KP",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "AnatomicalEntity": {
                  "UBERON": "hits.object.UBERON",
                  "ngd": "hits.association.ngd"
               },
               "AnatomicalEntity-reverse": {
                  "UBERON": "hits.subject.UBERON",
                  "ngd": "hits.association.ngd"
               },
               "BiologicalProcess": {
                  "GO": "hits.object.GO",
                  "ngd": "hits.association.ngd"
               },
               "BiologicalProcess-reverse": {
                  "GO": "hits.subject.GO",
                  "ngd": "hits.association.ngd"
               },
               "Cell": {
                  "CL": "hits.object.CL",
                  "ngd": "hits.association.ngd"
               },
               "Cell-reverse": {
                  "CL": "hits.subject.CL",
                  "ngd": "hits.association.ngd"
               },
               "CellularComponent": {
                  "GO": "hits.object.GO",
                  "ngd": "hits.association.ngd"
               },
               "CellularComponent-reverse": {
                  "GO": "hits.subject.GO",
                  "ngd": "hits.association.ngd"
               },
               "ChemicalSubstance": {
                  "CHEBI": "hits.object.CHEBI",
                  "ngd": "hits.association.ngd"
               },
               "ChemicalSubstance-reverse": {
                  "CHEBI": "hits.subject.CHEBI",
                  "ngd": "hits.association.ngd"
               },
               "Disease": {
                  "MONDO": "hits.object.MONDO",
                  "ngd": "hits.association.ngd"
               },
               "Disease-reverse": {
                  "MONDO": "hits.subject.MONDO",
                  "ngd": "hits.association.ngd"
               },
               "Gene": {
                  "NCBIGene": "hits.object.NCBIGene",
                  "ngd": "hits.association.ngd"
               },
               "Gene-reverse": {
                  "NCBIGene": "hits.subject.NCBIGene",
                  "ngd": "hits.association.ngd"
               },
               "MolecularActivity": {
                  "GO": "hits.object.GO",
                  "ngd": "hits.association.ngd"
               },
               "MolecularActivity-reverse": {
                  "GO": "hits.subject.GO",
                  "ngd": "hits.association.ngd"
               },
               "OrganismTaxon": {
                  "NCBITaxon": "hits.object.NCBITaxon",
                  "ngd": "hits.association.ngd"
               },
               "OrganismTaxon-reverse": {
                  "NCBITaxon": "hits.subject.NCBITaxon",
                  "ngd": "hits.association.ngd"
               },
               "PhenotypicFeature": {
                  "HP": "hits.object.HP",
                  "ngd": "hits.association.ngd"
               },
               "PhenotypicFeature-reverse": {
                  "HP": "hits.subject.HP",
                  "ngd": "hits.association.ngd"
               },
               "Protein": {
                  "PR": "hits.object.PR",
                  "ngd": "hits.association.ngd"
               },
               "Protein-reverse": {
                  "PR": "hits.subject.PR",
                  "ngd": "hits.association.ngd"
               },
               "SequenceFeature": {
                  "SO": "hits.object.SO",
                  "ngd": "hits.association.ngd"
               },
               "SequenceFeature-reverse": {
                  "SO": "hits.subject.SO",
                  "ngd": "hits.association.ngd"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Text Mining Targeted Association query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Text Mining CO-OCCURRENCE API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Text Mining Provider",
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "275bfadd2b4c60c3",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "object.id:CHEBI\\:9590",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Cell-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/CellularComponent-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/MolecularActivity-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Gene-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Protein-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/SequenceFeature-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-OrganismTaxon-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-ChemicalSubstance-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Cell-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-BiologicalProcess-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-CellularComponent-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-MolecularActivity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-MolecularActivity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-PhenotypicFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Disease-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Gene-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Protein"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Protein-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-SequenceFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-SequenceFeature-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-AnatomicalEntity-reverse"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-OrganismTaxon"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-OrganismTaxon-reverse"
                        }
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/text_mining_co_occurrence_kp"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/text_mining_co_occurrence_kp/"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "chemical"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "0d3cb44c7d519f06c8a6a8dec43dbf05",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A hand-curated graph of phenotypes of covid-19.",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Covid%20Phenotypes&provider_long=RENCI",
            "title": "Automat Covid Phenotypes",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/covid-phenotypes"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "7c481f0761132876e6b953547623f594",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on [Pharos (pharos.nih.gov)](pharos.nih.gov).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Panther&provider_long=RENCI",
            "title": "Automat Pharos",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/pharos"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "912372f46127b79fb387cd2397203709",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "translator@broadinstitute.org",
               "name": "Molecular Data Provider",
               "x-role": "responsible organization"
            },
            "description": "Molecular Data Provider for NCATS Biomedical Translator Reasoners",
            "license": {
               "name": "MIT License",
               "url": "https://github.com/broadinstitute/molecular-data-provider/blob/master/LICENSE"
            },
            "termsOfService": "https://github.com/broadinstitute/molecular-data-provider/blob/master/terms_of_service.md",
            "title": "Molecular Data Provider for NCATS Biomedical Translator Reasoners",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Molecular Data Provider"
               ]
            },
            "x-trapi": {
               "version": "1.0.0"
            }
         },
         "paths": [
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "predicates"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "",
                     "operationId": "query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query reasoner via one of several inputs",
                     "tags": [
                        "query"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://translator.broadinstitute.org/molepro/trapi/v1.0"
            }
         ],
         "tags": [
            {
               "description": "Get supported relationships by source and target",
               "name": "predicates"
            },
            {
               "description": "Query reasoner using a predefined question type",
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "d9d71b3d55e767c37346d02b7d6bd0b3",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "Molecular (Gene-Gene) interactions from [EBI IntAct (https://www.ebi.ac.uk/intact/)](https://www.ebi.ac.uk/intact/).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20IntAct&provider_long=RENCI",
            "title": "Automat IntAct",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/intact"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "a49ee52f6fb81a71cca84e9806732b76",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph of the food/chemical relationships in [foodb.ca](foodb.ca).",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat%20Foodb&provider_long=RENCI",
            "title": "Automat Foodb",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/foodb"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "09c8782d9f4027712e65b95424adba79",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "conditionAssociatedWithVariant": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "OMIM",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "parameters": {
                        "fields": "dbsnp.rsid",
                        "size": "250"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "clinvar.rcv.conditions.identifiers.omim"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/dbsnp"
                     },
                     "source": "clinvar",
                     "supportBatch": true
                  }
               ],
               "variantAffectDrugResponse": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "name",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "civic.evidence_items",
                        "size": "1000"
                     },
                     "predicate": "variant_affect_drug_response",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "dbsnp.rsid"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/variant_affect_drug_response"
                     },
                     "source": "civic",
                     "supportBatch": true
                  }
               ],
               "variantAssociatedWithCondition": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "OMIM",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "clinvar.rcv"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "dbsnp.rsid"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/variant-disease-omim"
                     },
                     "source": "clinvar",
                     "supportBatch": true
                  }
               ],
               "variantAssociatedWithGene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "dbsnp.gene.geneid"
                     },
                     "predicate": "located_in",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "dbsnp.rsid"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/variant-gene"
                     },
                     "source": "dbsnp",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "dbsnp": {
                  "DBSNP": "dbsnp.rsid"
               },
               "variant-disease-omim": {
                  "OMIM": "clinvar.rcv.conditions.identifiers.omim",
                  "clinicalsignificance": "clinvar.rcv.clinical_significance",
                  "name": "clinvar.rcv.conditions.name"
               },
               "variant-gene": {
                  "NCBIGene": "dbsnp.gene.geneid"
               },
               "variant_affect_drug_response": {
                  "clinical_significance": "civic.evidence_items.clinical_significance",
                  "evidence_level": "civic.evidence_items.evidence_level",
                  "evidence_type": "civic.evidence_items.evidence_type",
                  "name": "civic.evidence_items.drugs.name",
                  "pubmed": "civic.evidence_items.source.pubmed"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@myvariant.info",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the MyVariant.info Variant Query web services. Learn more about [MyVariant.info](http://myvariant.info/)",
            "termsOfService": "http://myvariant.info/terms/",
            "title": "MyVariant.info API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MyVariant.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from MyVariant.info.",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Pass a search term to filter the available fields, e.g. \"search=clinvar\".",
                           "in": "query",
                           "name": "search",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".",
                           "in": "query",
                           "name": "prefix",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MyVariant.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from MyVariant.info.",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string. Examples \"rs752396467\", \"possibly_damaging\", \"CDK7\". The detailed query syntax can be found from our [docs](http://docs.myvariant.info/en/latest/doc/variant_query_service.html).",
                           "example": "CDK7",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "1": "query",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "in": "query",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "in": "query",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "in": "query",
                           "name": "sort"
                        },
                        {
                           "description": "a single field or comma-separated fields to return facets, for example, \"facets=clinvar.gene.id\", \"facets=clinvar.gene.id,dbnsfp.uniprot.acc\".",
                           "in": "query",
                           "name": "facets",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "in": "query",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "in": "query",
                           "name": "email"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response object with \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make variant query and return matching variant list. Support JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/fields",
                           "in": "query",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "in": "query",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "in": "query",
                           "name": "email"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=rs58991260,rs2500\" or \"q=rs58991260+rs2500\"",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "Specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=dbsnp.rsid\". The available \"fields\" that can be passed to \"scopes\" parameter are listed [here](http://docs.myvariant.info/en/latest/doc/data.html#available-fields). Default: \"scopes=_id\" (HGVS id).",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "q"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make variant batch query and return matching variant hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithGene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithCondition"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/conditionAssociatedWithVariant"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/variantAffectDrugResponse"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/variant",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/fields",
                           "in": "query",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "in": "query",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "in": "query",
                           "name": "email"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple variant ids seperated by comma, e.g., \"ids=chr6:g.152708291G>A,chr1:g.35367G>A\" or \"ids=rs5882,rs12190874\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Variant"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "a list of matching variant objects"
                        }
                     },
                     "summary": "For a list of variant ids, return the matching variant objects",
                     "tags": [
                        "variant"
                     ]
                  }
               }
            },
            {
               "path": "/variant/{variantid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "HGVS or rsid, e.g., chr6:g.152708291G>A, rs12190874",
                           "example": "chr6:g.152708291G>A",
                           "in": "path",
                           "name": "variantid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "in": "query",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "in": "query",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "in": "query",
                           "name": "email"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Variant"
                                 }
                              }
                           },
                           "description": "A matching variant object"
                        },
                        "404": {
                           "description": "A response indicating an unknown variant id"
                        }
                     },
                     "summary": "Retrieve variant annotation object based on HGVS or rsid, support JSONP and CORS as well.",
                     "tags": [
                        "variant"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://myvariant.info/v1"
            },
            {
               "description": "Production server",
               "url": "http://myvariant.info/v1"
            }
         ],
         "tags": [
            {
               "name": "variant"
            },
            {
               "name": "query"
            },
            {
               "name": "metadata"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "5076f09382b38d56a77e376416b634ca",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "attribute-disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "Attribute"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.MONDO",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "attribute-disease1": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "Attribute"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.DOID",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-doid"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "disease-disease1": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.MONDO",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "disease-disease2": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.MONDO",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "disease-disease3": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.DOID",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-doid"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "disease-disease4": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.DOID",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-doid"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "drug_exposure-disease1": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "DrugExposure"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.MONDO",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "drug_exposure-disease2": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "DrugExposure"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.MONDO",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "drug_exposure-disease3": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "DrugExposure"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.DOID",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-doid"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "drug_exposure-disease4": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "DrugExposure"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.DOID",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-doid"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "observation-disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "Observation"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.MONDO",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "observation-disease1": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "Observation"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.DOID",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-doid"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "symptom-disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "Symptom"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.MONDO",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "symptom-disease1": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "Symptom"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "DiseaseOrPhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "association,object.DOID",
                        "q": "subject.id:\"{inputs[0]}\"",
                        "size": "1000"
                     },
                     "predicate": "affects_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-doid"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "disease": {
                  "MONDO": "hits.object.MONDO",
                  "has_auc_roc": "hits.association.has_auc_roc",
                  "has_feature_importance": "hits.association.has_feature_importance",
                  "relation": "hits.association.relation",
                  "uses_classifier": "hits.associatioin.uses_classifier"
               },
               "disease-doid": {
                  "DOID": "hits.object.DOID",
                  "has_auc_roc": "hits.association.has_auc_roc",
                  "has_feature_importance": "hits.association.has_feature_importance",
                  "relation": "hits.association.relation",
                  "uses_classifier": "hits.associatioin.uses_classifier"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Clinical Risk KP query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Clinical Risk KP API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Multiomics Provider",
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "NCIT:C25150-Age-diabetes mellitus (disease)-Gradient Boosting-34.87",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "subject.id:NCIT\\:C28421",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/attribute-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/drug_exposure-disease1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/drug_exposure-disease2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/observation-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/symptom-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-disease1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-disease2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/attribute-disease1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/drug_exposure-disease3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/drug_exposure-disease4"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/observation-disease1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/symptom-disease1"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-disease3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-disease4"
                        }
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/clinical_risk_kp"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/clinical_risk_kp"
            }
         ],
         "tags": [
            {
               "name": "disease"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "bfe51132e3f325e9f74a7fa40dc81583",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "translator@broadinstitute.org",
               "name": "Broad NCATS translator"
            },
            "description": "OpenAPI for indigo NCATS Biomedical Translator Reasoner",
            "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            },
            "termsOfService": "{{url}}",
            "title": "OpenAPI for indigo NCATS Biomedical Translator Reasoner",
            "version": "0.9.1.1",
            "x-reasoner_standard_version": "0.9.1"
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "",
                     "operationId": "query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "query_message": {
                                    "query_graph": {
                                       "edges": [
                                          {
                                             "edge_id": "e00",
                                             "source_id": "n00",
                                             "target_id": "n01",
                                             "type": "targets"
                                          }
                                       ],
                                       "nodes": [
                                          {
                                             "curie": "CHEMBL:CHEMBL521",
                                             "node_id": "n00",
                                             "type": "chemical_substance"
                                          },
                                          {
                                             "node_id": "n01",
                                             "type": "protein"
                                          }
                                       ]
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "successful operation"
                        },
                        "400": {
                           "description": "Invalid status value"
                        }
                     },
                     "summary": "Query reasoner via one of several inputs",
                     "tags": [
                        "query"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://indigo.ncats.io/reasoner/api/v1/"
            }
         ],
         "tags": [
            {
               "description": "Query reasoner using a predefined question type",
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "fc8245e92c970298449294fc04211869",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-response-mappings": {
               "chi_square": {
                  "biolink:OMOP": "results.concept_id_2",
                  "biolink:chi_squared_statistic": "results.chi_square",
                  "biolink:has_count": "results.n_c1_c2",
                  "biolink:name": "results.concept_2_name",
                  "biolink:p_value": "results.adj_p-value"
               },
               "obs_exp_ratio": {
                  "biolink:OMOP": "results.concept_id_2",
                  "biolink:has_count": "results.observed_count",
                  "biolink:name": "results.concept_2_name"
               },
               "relative_frequency": {
                  "biolink:OMOP": "results.concept_id_2",
                  "biolink:has_count": "results.concept_pair_count",
                  "biolink:has_quotient": "results.relative_frequency",
                  "biolink:has_total": "results.concept_2_count",
                  "biolink:name": "results.concept_2_name"
               }
            }
         },
         "info": {
            "contact": {
               "email": "ct2865@cumc.columbia.edu",
               "name": "Casey Ta",
               "url": "http://chunhualab.org/",
               "x-role": "responsible developer"
            },
            "description": "The Columbia Open Health Data (COHD) for COVID-19 Research API provides access to counts and frequencies (i.e., EHR visit prevalence) of conditions, procedures, drug exposures, and the co-occurrence frequencies between them for a cohort of hospitalized COVID-19 patients and two comparator cohorts of hospitalized influenza patients and hospitalized patients. Count and frequency data were derived from the [Columbia University Medical Center's](http://www.cumc.columbia.edu/) [OHDSI](https://www.ohdsi.org/) database including inpatient. Counts are the number of inpatient visits associated with the concept, e.g., diagnosed with a condition, exposed to a drug, or a procedure was performed. Frequencies are the number of unique visits associated with the concept divided by the total number of visits in the dataset, i.e., prevalence in the electronic health records. To protect patient privacy, all concepts and pairs of concepts where the count <= 10 were excluded, and counts were randomized by the Poisson distribution.         \n\nDatasets from three primary cohorts are available: \n1) COVID-19: Hospitalized patients aged 18 or older with a COVID-19 related condition diagnosis and/or a confirmed positive COVID-19 test during their hospitalization period or within the prior 21 days. Date range: March 1, 2020 to September 1, 2020. This cohort is also further stratified by sex (male and female) and age (adult: 18-64, senior: 65+).\n2) General inpatient: All hospitalized patients aged 18 or older. Date range: January 1, 2014 to December 31, 2019.\n3) Influenza: Hospitalized patients aged 18 or older who had at least one occurrence of influenza conditions or pre-coordinated positive measurements or positive influenza testing in the prior 21 days or during their hospitalization period. Date range: January 1, 2014 to December 31, 2019.\n\nBoth hierarchical and non-hierarchical datasets are available for each cohort. In the hierarchical datasets, the counts for each concept include the visits from all descendant concepts. For example, the count for ibuprofen (ID 1177480) includes visits with Ibuprofen 600 MG Oral Tablet (ID 19019073), Ibuprofen 400 MG Oral Tablet (ID 19019072), Ibuprofen 20 MG/ML Oral Suspension (ID 19019050), etc. \n\nClinical concepts (e.g., conditions, procedures, drugs) are coded by their standard concept ID in the [OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki). API methods are provided to map to/from other vocabularies supported in OMOP and other ontologies using the EMBL-EBI Ontology Xref Service (OxO). \n\n\nThe following resources are available through this API: \n\n\n1. Metadata: Metadata on the COHD database, including dataset descriptions, number of concepts, etc. \n\n\n2. OMOP: Access to the common vocabulary for name and concept identifier mapping\n\n\n3. Clinical Frequencies: Access to the counts and frequencies of conditions, procedures, and drug exposures, and the associations between them. Frequency was determined as the number of visits with the code(s) / total number of visits. \n\n\n4. Concept Associations: Inferred associations between concepts using chi-square analysis, ratio between observed to expected frequency, and relative frequency. \n\n\nA [Python notebook](https://github.com/WengLab-InformaticsResearch/cohd_api/blob/master/notebooks/COHD_API_Example.ipynb) demonstrates simple examples of how to use the COHD API.\n\n\nCOHD was developed at the [Columbia University Department of Biomedical Informatics](https://www.dbmi.columbia.edu/) as a collaboration between the [Weng Lab](http://people.dbmi.columbia.edu/~chw7007/), [Tatonetti Lab](http://tatonettilab.org/), and the [NCATS Biomedical Data Translator](https://ncats.nih.gov/translator) program (TReK Team). This work was supported in part by grants: NCATS 1OT2TR003434, NLM R01LM012895, NCATS OT3TR002027, NLM R01LM009886-08A1, and NIGMS R01GM107145.\n\nThe following external resources may be useful:  \n[OHDSI](https://www.ohdsi.org/)  \n[OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki)  \n[Athena](http://athena.ohdsi.org) (OMOP vocabularies, search, concept relationships, concept hierarchy)  \n[Atlas](http://www.ohdsi.org/web/atlas/) (OMOP vocabularies, search, concept relationships, concept hierarchy, concept sets)   \n[NCATS Biomedical Data Translator](https://sites.google.com/ncats.nih.gov/translator-io/home)   \n",
            "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            },
            "termsOfService": "http://cohd.io/terms/",
            "title": "Columbia Open Health Data (COHD) for COVID-19 Research",
            "version": "3.0.0",
            "x-accessRestriction": "none",
            "x-implementationLanguage": "Python",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Clinical Data Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/metadata/datasets",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of datasets, including dataset ID, name, and description.",
                     "operationId": "datasets",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "dataset_description": {
                                                   "example": "Hospitalized patients with a COVID-19 condition and/or positive lab test (non-hierarchical)",
                                                   "type": "string"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "dataset_name": {
                                                   "example": "COVID Cohort (non-hierarchical)",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of dataset descriptions."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Enumerates the datasets available in COHD",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/domainCounts",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of domains and the number of concepts in each domain.",
                     "operationId": "domainCounts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "count": {
                                                   "example": 1000,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of domain counts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "The number of concepts in each domain",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/domainPairCounts",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of pairs of domains and the number of pairs of concepts in each.",
                     "operationId": "domainPairCounts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "count": {
                                                   "example": 1000,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "domain_id_1": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "domain_id_2": {
                                                   "example": "Drug",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of domain pair counts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "The number of pairs of concepts in each pair of domains",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/visitCount",
               "pathitem": {
                  "get": {
                     "description": "Returns the number of visits in the dataset.",
                     "operationId": "visitCount",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "count": {
                                                   "example": 100000,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of visit counts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "The number of visits in the dataset",
                     "tags": [
                        "Metadata"
                     ]
                  }
               }
            },
            {
               "path": "/omop/concepts",
               "pathitem": {
                  "get": {
                     "description": "Returns the OMOP concept names and domains for the given list of concept IDs.",
                     "operationId": "concepts",
                     "parameters": [
                        {
                           "description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"",
                           "example": "192855,2008271",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Concept definitions from concept ID",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/findConceptIDs",
               "pathitem": {
                  "get": {
                     "description": "Searches the OMOP concept table for concept names similar to the query. Returns a list of concepts, including their names and IDs, sorted in decreasing order by the concept's prevalence. ",
                     "operationId": "findConceptIDs",
                     "parameters": [
                        {
                           "description": "The name of the concept to search for, e.g., \"cancer\" or \"ibuprofen\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The dataset to reference when sorting concepts by their frequency. Default: 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The domain (e.g., \"Condition\", \"Drug\", \"Procedure\") to restrict the search to. If not specified, the search will be unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Condition",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The minimum concept count (inclusive) to include a concept in the search results. Setting the min_count to 0 will cause findConceptIDs to return all matching standard OMOP concepts (this can be slow). Setting the min_count to 1 will cause findConceptIDs to only return concepts with count data (much faster). Default: 1.",
                           "example": 1,
                           "in": "query",
                           "name": "min_count",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 368,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Search for OMOP concepts by name and domain",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/conceptAncestors",
               "pathitem": {
                  "get": {
                     "description": "Retrieves the given concept's hierarchical ancestors and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. For more information, see the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).",
                     "operationId": "conceptAncestors",
                     "parameters": [
                        {
                           "description": "An OMOP concept ID, e.g., 19019073",
                           "example": 19019073,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm (only and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted",
                           "example": "RxNorm",
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)",
                           "example": 3,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "ancestor_concept_id": {
                                                   "example": 1177480,
                                                   "type": "integer"
                                                },
                                                "concept_class_id": {
                                                   "example": "Ingredient",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "5640",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 233514,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Ibuprofen",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Drug",
                                                   "type": "string"
                                                },
                                                "max_levels_of_separation": {
                                                   "example": 2,
                                                   "type": "integer"
                                                },
                                                "min_levels_of_separation": {
                                                   "example": 2,
                                                   "type": "integer"
                                                },
                                                "standard_concept": {
                                                   "example": "S",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "RxNorm",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Retrieve the concept's hierarchical ancestors",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/conceptDescendants",
               "pathitem": {
                  "get": {
                     "description": "Retrieves the given concept's hierarchical descendants and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. See the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).",
                     "operationId": "conceptDescendants",
                     "parameters": [
                        {
                           "description": "An OMOP concept ID, e.g., 313217",
                           "example": 313217,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "concept_class_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)",
                           "example": 3,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "49436004",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 53272,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Atrial fibrillation",
                                                   "type": "string"
                                                },
                                                "descendant_concept_id": {
                                                   "example": 313217,
                                                   "type": "integer"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "max_levels_of_separation": {
                                                   "example": 0,
                                                   "type": "integer"
                                                },
                                                "min_levels_of_separation": {
                                                   "example": 0,
                                                   "type": "integer"
                                                },
                                                "standard_concept": {
                                                   "example": "S",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Retrieve the concept's hierarchical descendants",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/mapToStandardConceptID",
               "pathitem": {
                  "get": {
                     "description": "Uses the OMOP concept_relationship table to map from a non-standard concept code (e.g., ICD9CM 715.3) to a standard OMOP concept ID (e.g., 72990). This method may return multiple results if vocabulary_id is not specified and the concept_code is not unique across vocabularies. If both concept_code and vocabulary_id are specified, then 1 result will be returned at most. ",
                     "operationId": "mapToStandardConceptID",
                     "parameters": [
                        {
                           "description": "The concept code to map from, e.g., 715.3",
                           "example": "715.3",
                           "in": "query",
                           "name": "concept_code",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The vocabulary (e.g., \"ICD9CM\") that the concept code belongs to. If this parameter is not specified, the method will return mappings from any source vocabulary with matching concept code. See /omop/vocabularies for the list of supported vocabularies.",
                           "example": "ICD9CM",
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "source_concept_code": {
                                                   "example": "715.3",
                                                   "type": "string"
                                                },
                                                "source_concept_id": {
                                                   "example": 44834979,
                                                   "type": "integer"
                                                },
                                                "source_concept_name": {
                                                   "example": "Osteoarthrosis, localized, not specified whether primary or secondary",
                                                   "type": "string"
                                                },
                                                "source_vocabulary_id": {
                                                   "example": "ICD9CM",
                                                   "type": "string"
                                                },
                                                "standard_concept_id": {
                                                   "example": 72990,
                                                   "type": "integer"
                                                },
                                                "standard_concept_name": {
                                                   "example": "Localized osteoarthrosis uncertain if primary OR secondary",
                                                   "type": "string"
                                                },
                                                "standard_domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Map from a non-standard concept code to a standard OMOP concept ID",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/mapFromStandardConceptID",
               "pathitem": {
                  "get": {
                     "description": "Uses the OMOP concept_relationship table to map from a standard concept ID (e.g., 72990) to concept code(s) (e.g., ICD9CM 715.3, 715.31, 715.32, etc.). An OMOP standard concept ID may map to many concepts in the external vocabulary.",
                     "operationId": "mapFromStandardConceptID",
                     "parameters": [
                        {
                           "description": "The standard OMOP concept id to map from, e.g., 72990",
                           "example": 72990,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "The vocabulary (e.g., \"ICD9CM\") to map to. If this parameter is not specified, the method will return mappings to any matching vocabularies. See /omop/vocabularies for the list of supported vocabularies.",
                           "example": "ICD9CM",
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "4-dig nonbill code",
                                                   "type": "string"
                                                },
                                                "concept_code": {
                                                   "example": "715.3",
                                                   "type": "string"
                                                },
                                                "concept_id": {
                                                   "example": 44834979,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Osteoarthrosis, localized, not specified whether primary or secondary",
                                                   "type": "string"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "standard_concept": {
                                                   "example": null,
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "ICD9CM",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Map from a standard concept ID to concept code(s) in an external vocabulary",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/vocabularies",
               "pathitem": {
                  "get": {
                     "description": "List of vocabulary_ids. Useful if you need to use /omop/mapToStandardConceptID to map a concept code from a source vocabulary to the OMOP standard vocabulary.",
                     "operationId": "vocabularies",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of vocabularies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "List of vocabularies",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/xrefToOMOP",
               "pathitem": {
                  "get": {
                     "description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method attempts to use OxO to map from the original ontology to an intermediate ontology that is included in OMOP (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OMOP mappings to the standard concepts. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.",
                     "operationId": "xrefToOMOP",
                     "parameters": [
                        {
                           "description": "Compact URI (CURIE) of the concept to map, e.g., DOID:8398",
                           "example": "DOID:8398",
                           "in": "query",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from the original concept to an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept. One additional step may be taken by the COHD API to map to the OMOP standard concept. Default: 2.",
                           "example": 2,
                           "in": "query",
                           "name": "distance",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "local",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping based on path distances. Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "recommend",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "intermediate_oxo_id": {
                                                   "example": "ICD9CM:715.3",
                                                   "type": "string"
                                                },
                                                "intermediate_oxo_label": {
                                                   "example": "",
                                                   "type": "string"
                                                },
                                                "omop_concept_name": {
                                                   "example": "Localized osteoarthrosis uncertain if primary OR secondary",
                                                   "type": "string"
                                                },
                                                "omop_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "omop_domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "omop_standard_concept_id": {
                                                   "example": 72990,
                                                   "type": "integer"
                                                },
                                                "oxo_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "source_oxo_id": {
                                                   "example": "DOID:8398",
                                                   "type": "string"
                                                },
                                                "source_oxo_label": {
                                                   "example": "osteoarthritis",
                                                   "type": "string"
                                                },
                                                "total_distance": {
                                                   "example": 2,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of mappings from external concepts to OMOP concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/omop/xrefFromOMOP",
               "pathitem": {
                  "get": {
                     "description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method maps from the OMOP standard concept to an intermediate vocabulary included is OxO (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OxO API to map to other ontologies. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.",
                     "operationId": "xrefFromOMOP",
                     "parameters": [
                        {
                           "description": "OMOP standard concept_id to map, e.g., 192855",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "Target ontologies for OxO. Comma separated target prefixes, e.g., \"DOID,UMLS\"",
                           "example": "UMLS",
                           "in": "query",
                           "name": "mapping_targets",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept to the desired ontology. One additional step may be taken by the COHD API to map to the OMOP standard concept to ICD9CM, ICD10CM, SNOMEDCT, or MeSH. Default: 2.",
                           "example": 2,
                           "in": "query",
                           "name": "distance",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "local",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        },
                        {
                           "description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping for each target based on path distances. Default: false.",
                           "example": false,
                           "in": "query",
                           "name": "recommend",
                           "required": false,
                           "schema": {
                              "type": "boolean"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "intermediate_omop_concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "intermediate_omop_concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "intermediate_omop_concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "intermediate_omop_vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                },
                                                "intermediate_oxo_curie": {
                                                   "example": "SNOMEDCT:92546004",
                                                   "type": "string"
                                                },
                                                "intermediate_oxo_label": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "omop_distance": {
                                                   "example": 0,
                                                   "type": "integer"
                                                },
                                                "oxo_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "source_omop_concept_code": {
                                                   "example": "92546004",
                                                   "type": "string"
                                                },
                                                "source_omop_concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "source_omop_concept_name": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "source_omop_vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                },
                                                "target_curie": {
                                                   "example": "UMLS:C0154091",
                                                   "type": "string"
                                                },
                                                "target_label": {
                                                   "example": "Cancer in situ of urinary bladder",
                                                   "type": "string"
                                                },
                                                "total_distance": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of mappings from OMOP concepts to external concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service",
                     "tags": [
                        "OMOP"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/singleConceptFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of individual concepts. Multiple concepts may be requested in a comma separated list.",
                     "operationId": "singleConceptFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"",
                           "example": "192855",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_count": {
                                                   "example": 368,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.0002055371025188907,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of single concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequency of individual concepts",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/pairedConceptFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of a pair of concepts.",
                     "operationId": "pairedConceptFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "A comma pair of OMOP concept ids, e.g., \"192855,2008271\"",
                           "example": "192855,2008271",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_count": {
                                                   "example": 10,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 5.585247351056813e-06,
                                                   "type": "integer"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 2008271,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of paired concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequency of a pair of concepts",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/associatedConceptFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id. Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.",
                     "operationId": "associatedConceptFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "associated_concept_id": {
                                                   "example": 19041324,
                                                   "type": "integer"
                                                },
                                                "associated_concept_name": {
                                                   "example": "Acetaminophen 325 MG Oral Tablet [Tylenol]",
                                                   "type": "string"
                                                },
                                                "associated_domain_id": {
                                                   "example": "Drug",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 277,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.0001547113516242737,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of associated concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequencies of all pairs of concepts given a concept id",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/associatedConceptDomainFreq",
               "pathitem": {
                  "get": {
                     "description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id restricted by domain of the associated concept_id.  Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.",
                     "operationId": "associatedConceptDomainFreq",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Procedure",
                           "in": "query",
                           "name": "domain",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "associated_concept_id": {
                                                   "example": 2211361,
                                                   "type": "integer"
                                                },
                                                "associated_concept_name": {
                                                   "example": "Radiologic examination, chest, 2 views, frontal and lateral",
                                                   "type": "string"
                                                },
                                                "associated_domain_id": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 257,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.00014354085692216007,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of associated concept frequencies."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Clinical frequencies of all pairs of concepts given a concept id",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/frequencies/mostFrequentConcepts",
               "pathitem": {
                  "get": {
                     "description": "Retrieves the most frequent concepts.",
                     "operationId": "mostFrequentConcepts",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "(Optional) The number of concepts to retreieve, e.g., 100. 0 or unspecified will return all matching concepts.",
                           "example": 100,
                           "in": "query",
                           "name": "q",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "(Optional) The domain_id to restrict to, e.g., \"Condition\", \"Drug\", \"Procedure\". See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Condition",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "(Optional) The vocabulary_id(s) to restrict to, e.g., \"SNOMED\", \"MedDRA\", \"RxNorm\", \"ATC\" etc. Comma separated to include multiple vocabularies, e.g., \"SNOMED,MedDRA\". Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "vocabulary_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "(Optional) The concept_class_id(s) to restrict to. concept_class_ids are specific to each vocabulary, e.g.,: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Comma separated to include multiple concept_class_ids, e.g., \"PT,HLT\". Default: unrestricted",
                           "example": null,
                           "in": "query",
                           "name": "concept_class_id",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_class_id": {
                                                   "example": "Clinical Finding",
                                                   "type": "string"
                                                },
                                                "concept_count": {
                                                   "example": 233790,
                                                   "type": "integer"
                                                },
                                                "concept_frequency": {
                                                   "example": 0.1305774978203572,
                                                   "type": "integer"
                                                },
                                                "concept_id": {
                                                   "example": 320128,
                                                   "type": "integer"
                                                },
                                                "concept_name": {
                                                   "example": "Essential hypertension",
                                                   "type": "string"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "domain_id": {
                                                   "example": "Condition",
                                                   "type": "string"
                                                },
                                                "vocabulary_id": {
                                                   "example": "SNOMED",
                                                   "type": "string"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of most frequent concepts."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Most frequent concepts [by domain]",
                     "tags": [
                        "Clinical Frequencies"
                     ]
                  }
               }
            },
            {
               "path": "/association/chiSquare",
               "pathitem": {
                  "get": {
                     "description": "Returns the chi-square statistic and p-value between pairs of concepts. Results are returned in descending order of the chi-square statistic. Note that due to large sample sizes, the chi-square can become very large. \n\nThe expected frequencies for the chi-square analysis are calculated based on the single concept frequencies and assuming independence between concepts. P-value is calculated with 1 DOF. \n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n",
                     "operationId": "chiSquare",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id_1",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"2008271\". If this parameter is specified, then the chi-square between concept_id_1 and concept_id_2 is returned. If this parameter is not specified, then a list of chi-squared results between concept_id_1 and other concepts is returned.",
                           "example": 2008271,
                           "in": "query",
                           "name": "concept_id_2",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Drug",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "adj_p-value": {
                                                   "description": "Bonferonni adjusted p-value, adjusted with the total number of pairs of concepts in the dataset.",
                                                   "example": 0.0314,
                                                   "type": "number"
                                                },
                                                "chi_square": {
                                                   "example": 370026.1780081638,
                                                   "type": "integer"
                                                },
                                                "concept_2_domain": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_2_name": {
                                                   "example": "Instillation of therapeutic substance into bladder",
                                                   "type": "string"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 4021588,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 3,
                                                   "type": "integer"
                                                },
                                                "p-value": {
                                                   "example": 0.0314,
                                                   "type": "number"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of concept pairs and chi-squared values."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Chi-square analysis on pairs of concepts",
                     "tags": [
                        "Concept Associations"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/chi_square"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ]
                  }
               }
            },
            {
               "path": "/association/obsExpRatio",
               "pathitem": {
                  "get": {
                     "description": "Returns the natural logarithm of the ratio between the observed count and expected count. Expected count is calculated from the single concept frequencies and assuming independence between the concepts. Results are returned in descending order of ln_ratio.\n\nexpected_count = Count_1_and_2 * num_visits / (Count_1 * Count_2)\n\nln_ratio = ln(expected_count)\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Results for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n",
                     "operationId": "obsExpRatio",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id_1",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.",
                           "example": 2008271,
                           "in": "query",
                           "name": "concept_id_2",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Drug",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The confidence level used for calculating confidence intervals (default 0.99).",
                           "example": 0.99,
                           "in": "query",
                           "name": "confidence",
                           "required": false,
                           "schema": {
                              "type": "number"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_2_domain": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_2_name": {
                                                   "example": "Closed [transurethral] biopsy of bladder",
                                                   "type": "string"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 2003784,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "expected_count": {
                                                   "example": 0.060838982345591645,
                                                   "type": "integer"
                                                },
                                                "ln_ratio": {
                                                   "example": 7.561698473261244,
                                                   "type": "integer"
                                                },
                                                "observed_count": {
                                                   "example": 117,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of paired concepts and observed-expected frequency ratio."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Observed Count / Expected Count",
                     "tags": [
                        "Concept Associations"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "confidence": 0.99,
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ]
                  }
               }
            },
            {
               "path": "/association/relativeFrequency",
               "pathitem": {
                  "get": {
                     "description": "Calculates the relative frequency (i.e., conditional probability) between pairs of concepts. Results are returned in descending order of relative frequency. Note that due to the randomization of the counts, the calculated relative frequencies can exceed the limit of 1.0.\n\nRelative Frequency = Count_1_and_2 / Count_2\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n",
                     "operationId": "relativeFrequency",
                     "parameters": [
                        {
                           "description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.",
                           "example": 1,
                           "in": "query",
                           "name": "dataset_id",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"192855\"",
                           "example": 192855,
                           "in": "query",
                           "name": "concept_id_1",
                           "required": true,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.",
                           "example": 2008271,
                           "in": "query",
                           "name": "concept_id_2",
                           "required": false,
                           "schema": {
                              "type": "integer"
                           }
                        },
                        {
                           "description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict concept_id_2 (the base concept) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.",
                           "example": "Drug",
                           "in": "query",
                           "name": "domain",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"",
                           "example": "Ingredient",
                           "in": "query",
                           "name": "concept_class",
                           "required": false,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The confidence level used for calculating confidence intervals (default 0.99).",
                           "example": 0.99,
                           "in": "query",
                           "name": "confidence",
                           "required": false,
                           "schema": {
                              "type": "number"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "properties": {
                                       "results": {
                                          "items": {
                                             "properties": {
                                                "concept_2_count": {
                                                   "example": 82,
                                                   "type": "integer"
                                                },
                                                "concept_2_domain": {
                                                   "example": "Procedure",
                                                   "type": "string"
                                                },
                                                "concept_2_name": {
                                                   "example": "Radical cystectomy",
                                                   "type": "string"
                                                },
                                                "concept_id_1": {
                                                   "example": 192855,
                                                   "type": "integer"
                                                },
                                                "concept_id_2": {
                                                   "example": 2003805,
                                                   "type": "integer"
                                                },
                                                "concept_pair_count": {
                                                   "example": 29,
                                                   "type": "integer"
                                                },
                                                "dataset_id": {
                                                   "example": 1,
                                                   "type": "integer"
                                                },
                                                "relative_frequency": {
                                                   "example": 0.35365853658536583,
                                                   "type": "integer"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "An array of paired concepts and relative frequency."
                        },
                        "default": {
                           "description": "Unexpected error"
                        }
                     },
                     "summary": "Relative frequency between pairs of concepts",
                     "tags": [
                        "Concept Associations"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Condition"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "parameters": {
                              "concept_id_1": "{inputs[0]}",
                              "dataset_id": 3,
                              "domain": "Drug"
                           },
                           "predicate": "biolink:correlated_with",
                           "response_mapping": {
                              "$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"
                           },
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ]
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "translator",
                        "reasoner"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Query the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\n    \nFor the subject node, the id must be specified (category is ignored).\n    \nFor the object node, both the id and category are optional. If id is specified for the object node, then the association between the two identified concepts is returned. If id is not specified and category is specified, the associations between the subject node and all concepts with the specified category are returned. If neither are specified, then the associations between the subject node and all concepts are returned.\nThe COHD data are natively represented using OMOP. COHD will attempt to map between Biolink and OMOP both in the input and response.\nAdditional behavior options can be controlled using the optional parameters in query_options.",
                     "operationId": "query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": {\n        \"n00\": {\n          \"id\": \"MONDO:0021113\",\n          \"category\": \"biolink:Disease\"\n        },\n        \"n01\": {\n          \"category\": \"biolink:Procedure\"\n        }\n      },\n      \"edges\": {\n        \"e00\": {\n          \"predicate\": \"biolink:correlated_with\",\n          \"subject\": \"n00\",\n          \"object\": \"n01\"\n        }\n      }\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"max_results\": 50,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\n        \"ICD9\",\n        \"SNOMEDCT\",\n        \"DOID\"\n      ],\n      \"biolink:Drug\": [\n        \"RxNorm\"\n      ],\n      \"biolink:Procedure\": [\n        \"ICD10PCS\",\n        \"SNOMEDCT\"\n      ],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query COHD following NCATS Translator Reasoner Standard API",
                     "tags": [
                        "translator",
                        "reasoner"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/0.9.3/query",
               "pathitem": {
                  "post": {
                     "description": "This endpoint is temporarily provided to support TRAPI 0.9.3 queries\nQuery the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\nFor the source node, the curie must be specified (type is ignored).\nFor the target node, both the curie and type are optional. If curie is specified for the target node, then the association between the two identified concepts is returned. If curie is not specified and type is specified, the associations between the source node and all concepts with the specified type are returned. If neither are specified, then the associations between the source node and all concepts are returned.\nCOHD will attempt to map the CURIE to an OMOP concept and the node type to an OMOP domain.",
                     "operationId": "query093",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n  \"max_results\": 50,\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": [\n        {\n          \"id\": \"n00\",\n          \"curie\": \"MONDO:0021113\",\n          \"type\": \"biolink:Disease\"\n        },\n        {\n          \"id\": \"n01\",\n          \"type\": \"biolink:Procedure\"\n        }\n      ],\n      \"edges\": [\n        {\n          \"id\": \"e00\",\n          \"type\": \"biolink:correlated_with\",\n          \"source_id\": \"n00\",\n          \"target_id\": \"n01\"\n        }\n      ]\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\"ICD9\", \"SNOMEDCT\", \"DOID\"],\n      \"biolink:Drug\": [\"RxNorm\"],\n      \"biolink:Procedure\": [\"ICD10PCS\", \"SNOMEDCT\"],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "successful operation"
                        },
                        "400": {
                           "description": "Invalid status value"
                        }
                     },
                     "summary": "Query COHD following NCATS Translator Reasoner Standard API version 0.9.3",
                     "tags": [
                        "translator",
                        "reasoner"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Disease"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        },
                        {
                           "inputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "outputs": [
                              {
                                 "id": "biolink:OMOP",
                                 "semantic": "biolink:Drug"
                              }
                           ],
                           "predicate": "biolink:correlated_with",
                           "source": "Columbia Open Health Data KP",
                           "supportBatch": false
                        }
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/translator/biolink_to_omop",
               "pathitem": {
                  "post": {
                     "description": "Map Biolink CURIEs to OMOP concepts",
                     "operationId": "biolink_to_omop",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n    \"curies\": [\n        \"HP:0002907\",\n        \"MONDO:0001187\"\n    ]\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/CurieList"
                              }
                           }
                        },
                        "description": "List of CURIEs",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "example": "{\n  \"MONDO:0001187\": {\n    \"distance\": 2,\n    \"omop_concept_id\": 197508,\n    \"omop_concept_name\": \"Malignant tumor of urinary bladder\"\n  }\n}",
                                 "schema": {
                                    "additionalProperties": {
                                       "description": "Mapping from OMOP concept to Biolink",
                                       "properties": {
                                          "distance": {
                                             "description": "mapping distance",
                                             "type": "integer"
                                          },
                                          "omop_concept_id": {
                                             "type": "integer"
                                          },
                                          "omop_concept_name": {
                                             "type": "string"
                                          }
                                       },
                                       "type": "object"
                                    }
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        }
                     },
                     "summary": "Map from Biolink to OMOP",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/translator/omop_to_biolink",
               "pathitem": {
                  "post": {
                     "description": "Map OMOP concepts to normalized Biolink nodes using SRI Node Normalizer.",
                     "operationId": "omop_to_biolink",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": "{\n    \"omop_ids\": [\n        78472,\n        197508\n    ]\n}",
                              "schema": {
                                 "$ref": "#/components/schemas/OmopList"
                              }
                           }
                        },
                        "description": "List of OMOP IDs",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "type": "object"
                                    },
                                    "example": "{\n  \"197508\": {\n    \"equivalent_identifiers\": [\n        {\n            \"identifier\": \"MONDO:0001187\",\n            \"label\": \"urinary bladder cancer\"\n        },\n        {\n            \"identifier\": \"DOID:11054\"\n        },\n        {\n            \"identifier\": \"OMIM:109800\"\n        },\n        {\n            \"identifier\": \"UMLS:C0005684\"\n        },\n        {\n            \"identifier\": \"NCIT:C9334\"\n        },\n        {\n            \"identifier\": \"SNOMEDCT:399326009\"\n        }\n    ],\n    \"id\": {\n        \"identifier\": \"MONDO:0001187\",\n        \"label\": \"urinary bladder cancer\"\n    },\n    \"type\": [\n        \"biolink:Disease\",\n        \"biolink:DiseaseOrPhenotypicFeature\",\n        \"biolink:BiologicalEntity\",\n        \"biolink:NamedThing\"\n    ]\n  }\n}",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized. Mapping from OMOP concept to Biolink normalized nodes. See [SRI Node Normalizer](https://nodenormalization-sri.renci.org/docs#/) for response format"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        }
                     },
                     "summary": "Map from OMOP to Biolink",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "http://covid.cohd.io/api/"
            }
         ],
         "tags": [
            {
               "description": "COHD metadata",
               "name": "Metadata"
            },
            {
               "description": "OMOP Common Data Model concepts",
               "name": "OMOP"
            },
            {
               "description": "Clinical frequency data",
               "name": "Clinical Frequencies"
            },
            {
               "description": "Estimated association between concepts",
               "name": "Concept Associations"
            },
            {
               "description": "Concept-age distributions, concept-pair delta distributions, and temporal analyses",
               "name": "Temporal Clinical Data"
            },
            {
               "description": "NCATS Biomedical Data Translator APIs",
               "name": "translator"
            },
            {
               "description": "Implements the NCATS Translator Reasoner API standards",
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "a5b0ec6bfde5008984d4b6cde402d61f",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "has_subclass": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "children"
                     },
                     "predicate": "has_subclass",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_subclass"
                     },
                     "source": "Human Phenotype Ontology",
                     "supportBatch": true
                  }
               ],
               "subclass_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "parents"
                     },
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/subclass_of"
                     },
                     "source": "Human Phenotype Ontology",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "has_subclass": {
                  "HP": "children"
               },
               "subclass_of": {
                  "HP": "parents"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the HPO query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Human Phenotype Ontology API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/phenotype",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple HPO phenotype IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Phenotype"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching phenotype objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of phenotype IDs, return the matching phenotype object",
                     "tags": [
                        "phenotype"
                     ]
                  }
               }
            },
            {
               "path": "/phenotype/{phenotypeid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve phenotype objects based on HPO phenotype ID  Supports JSONP and CORS as well.",
                           "example": "HP:0000791",
                           "in": "path",
                           "name": "phenotypeid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Phenotype"
                                 }
                              }
                           },
                           "description": "A matching phenotype object"
                        },
                        "404": {
                           "description": "A response indicating an unknown phenotype ID"
                        }
                     },
                     "summary": "Retrieve phenotype objects based on ID",
                     "tags": [
                        "phenotype"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from DISEASES",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "DISEASES metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "parents:\"HP:0000787\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching phenotype hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" propert"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch phenotype queries and return matching phenotype hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_subclass"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/subclass_of"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/hpo"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/hpo"
            }
         ],
         "tags": [
            {
               "name": "phenotype"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "e3edd325c76f2992a111b43a907a4870",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical-gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "subject.NCBIGene,association.provided_by,association.pubmed",
                        "size": 1000
                     },
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "object.CHEMBL_COMPOUND"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical-gene"
                     },
                     "source": "DGIdb",
                     "supportBatch": true
                  }
               ],
               "gene-chemical": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object.CHEMBL_COMPOUND,association.provided_by,association.pubmed",
                        "size": 1000
                     },
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "subject.NCBIGene"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-chemical"
                     },
                     "source": "DGIdb",
                     "supportBatch": "ture"
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical-gene": {
                  "NCBIGene": "subject.NCBIGene",
                  "pubmed": "association.pubmed",
                  "source": "association.provided_by"
               },
               "gene-chemical": {
                  "CHEMBL.COMPOUND": "object.CHEMBL_COMPOUND",
                  "pubmed": "association.pubmed",
                  "source": "association.provided_by"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the BioThings DGIdb query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "BioThings DGIdb API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "275bfadd2b4c60c3",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "object.id:CHEMBL.COMPOUND\\:CHEMBL26",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-chemical"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/dgidb"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/dgidb"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "chemical"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "0212611d1c670f9107baf00b77f0889a",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical2gene": [
                  {
                     "inputs": [
                        {
                           "id": "MESH",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "format": "json",
                        "inputTerms": "{inputs[0]}",
                        "inputType": "chem",
                        "report": "genes_curated"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/drug-gene"
                     },
                     "source": "CTD",
                     "supportBatch": false
                  }
               ],
               "gene2disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MESH",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "format": "json",
                        "inputTerms": "{inputs[0]}",
                        "inputType": "gene",
                        "report": "diseases_curated"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-disease"
                     },
                     "source": "CTD",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "drug-gene": {
                  "NCBIGene": "data.GeneId",
                  "inTaxon": "data.OrganismId",
                  "pubmed": "data.PubMedIds"
               },
               "gene-disease": {
                  "MESH": "data.DiseaseID",
                  "name": "data.DiseaseName",
                  "pubmed": "data.PubMedIDs"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@ctd.org",
               "name": "CTD help desk",
               "x-role": "responsible developer"
            },
            "description": "The CTD API",
            "termsOfService": "http://ctdbase.org/help/linking.jsp#batchqueries",
            "title": "CTD API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/batchQuery.go",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "The Input type of query",
                           "example": "chem",
                           "in": "query",
                           "name": "inputType",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The Input value of query, usually a mesh ID",
                           "example": "D003634",
                           "in": "query",
                           "name": "inputTerms",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The Output of query",
                           "example": "genes_curated",
                           "in": "query",
                           "name": "report",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The output format",
                           "example": "json",
                           "in": "query",
                           "name": "format",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "response object"
                        }
                     },
                     "summary": "retrieve relationship data",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2gene"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://ctdbase.org/tools"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "ctd"
            }
         ]
      },
      {
         "_id": "40432beee9e4945c5b824d9c3ac8b1b9",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "patrick@covar.com",
               "name": "Patrick Wang",
               "x-id": "https://github.com/patrickkwang",
               "x-role": "responsible developer"
            },
            "description": "Translator Autonomous Relay Agent",
            "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Strider&provider_long=the%20Renaissance%20Computing%20Institute&provider_short=RENCI",
            "title": "Strider",
            "version": "1.0.0",
            "x-translator": {
               "component": "ARA",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/aquery",
               "pathitem": {
                  "post": {
                     "description": "Start query processing.",
                     "operationId": "async_query_aquery_post",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "log_level",
                           "required": false,
                           "schema": {
                              "allOf": [
                                 {
                                    "$ref": "#/components/schemas/LogLevelEnum"
                                 }
                              ],
                              "default": "ERROR"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {
                                             "e01": {
                                                "object": "n1",
                                                "predicate": "biolink:has_phenotype",
                                                "subject": "n0"
                                             }
                                          },
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Disease",
                                                "id": "MONDO:0005148"
                                             },
                                             "n1": {
                                                "category": "biolink:PhenotypicFeature"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Query"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {}
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Async Query"
                  }
               }
            },
            {
               "path": "/query_result",
               "pathitem": {
                  "post": {
                     "description": "Get results for a running or finished query ",
                     "operationId": "get_results_query_result_post",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "qid",
                           "required": true,
                           "schema": {
                              "title": "Qid",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "log_level",
                           "required": false,
                           "schema": {
                              "allOf": [
                                 {
                                    "$ref": "#/components/schemas/LogLevelEnum"
                                 }
                              ],
                              "default": "ERROR"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get Results"
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Handle synchronous query.",
                     "operationId": "sync_query_query_post",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "log_level",
                           "required": false,
                           "schema": {
                              "allOf": [
                                 {
                                    "$ref": "#/components/schemas/LogLevelEnum"
                                 }
                              ],
                              "default": "ERROR"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {
                                             "e01": {
                                                "object": "n1",
                                                "predicate": "biolink:has_phenotype",
                                                "subject": "n0"
                                             }
                                          },
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Disease",
                                                "id": "MONDO:0005148"
                                             },
                                             "n1": {
                                                "category": "biolink:PhenotypicFeature"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Query"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {}
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Sync Query",
                     "tags": [
                        "reasoner"
                     ]
                  }
               }
            },
            {
               "path": "/ars",
               "pathitem": {
                  "post": {
                     "description": "Handle ARS message.",
                     "operationId": "handle_ars_ars_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "title": "Data",
                                 "type": "object"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {}
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Handle Ars"
                  }
               }
            },
            {
               "path": "/plan",
               "pathitem": {
                  "post": {
                     "description": "Generate plans for traversing knowledge providers.",
                     "operationId": "generate_traversal_plan_plan_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Generate Traversal Plan Plan Post",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Generate Traversal Plan"
                  }
               }
            },
            {
               "path": "/score",
               "pathitem": {
                  "post": {
                     "description": "Score results.",
                     "operationId": "score_results_score_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Score Results"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "http://robokop.renci.org:5781"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "a85f096bd4120ba065b2f25ffb68dcb0",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "patrick@covar.com",
               "name": "Patrick Wang",
               "url": "robokop.renci.org"
            },
            "description": "An API for answering biomedical questions",
            "termsOfService": "https://robokop.renci.org/termsofservice/",
            "title": "ROBOKOP Ranker",
            "version": "0.0.1",
            "x-reasoner_standard_version": "0.9.1"
         },
         "paths": [
            {
               "path": "/query/",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "description": "Maximum number of results to return. Provide -1 to indicate no maximum.",
                           "in": "query",
                           "name": "max_results",
                           "schema": {
                              "default": -1,
                              "type": "integer"
                           }
                        },
                        {
                           "description": "Requested output format. DENSE, MESSAGE, CSV or ANSWERS",
                           "in": "query",
                           "name": "output_format",
                           "schema": {
                              "default": "MESSAGE",
                              "type": "string"
                           }
                        },
                        {
                           "description": "Max connectivity of nodes considered in the answers, Use -1 for no restriction",
                           "in": "query",
                           "name": "max_connectivity",
                           "schema": {
                              "default": -1,
                              "type": "integer"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": [
                                          {
                                             "id": "e00",
                                             "source_id": "n00",
                                             "target_id": "n01"
                                          },
                                          {
                                             "id": "e01",
                                             "source_id": "n01",
                                             "target_id": "n02"
                                          }
                                       ],
                                       "nodes": [
                                          {
                                             "curie": "MONDO:0005737",
                                             "id": "n00",
                                             "type": "disease"
                                          },
                                          {
                                             "id": "n01",
                                             "set": true,
                                             "type": "gene"
                                          },
                                          {
                                             "id": "n02",
                                             "type": "genetic_condition"
                                          }
                                       ]
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        }
                     },
                     "summary": "Get answers to a question",
                     "tags": [
                        "0.9.2"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://robokop.renci.org/ranker/api/"
            }
         ],
         "tags": [
            {
               "name": "0.9.2"
            },
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "08f5b7b0c0a70245f8f42af19327611a",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "mvon@broadinstitute.org",
               "name": "Marcin von Grotthuss"
            },
            "description": "A ReasonerStdAPI for Genetics Provider",
            "termsOfService": "https://translator.broadinstitute.org",
            "title": "Genetics Provider API",
            "version": "1.0.0",
            "x-reasoner_standard_version": "0.9.1",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Genetics Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "disease": {
                                          "gene": [
                                             "associated"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target"
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": [
                                          {
                                             "id": "e00",
                                             "source_id": "n00",
                                             "target_id": "n03",
                                             "type": "associated"
                                          },
                                          {
                                             "id": "e00",
                                             "source_id": "n01",
                                             "target_id": "n03",
                                             "type": "associated"
                                          },
                                          {
                                             "id": "e00",
                                             "source_id": "n02",
                                             "target_id": "n03",
                                             "type": "associated"
                                          }
                                       ],
                                       "nodes": [
                                          {
                                             "curie": "NCBIGene:5468",
                                             "id": "n00",
                                             "type": "gene"
                                          },
                                          {
                                             "curie": "NCBIGene:5469",
                                             "id": "n01",
                                             "type": "gene"
                                          },
                                          {
                                             "curie": "NCBIGene:5470",
                                             "id": "n02",
                                             "type": "gene"
                                          },
                                          {
                                             "id": "n03",
                                             "type": "disease"
                                          }
                                       ]
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        }
                     },
                     "summary": "Get answers to a question",
                     "tags": [
                        "0.9.2"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://translator.broadinstitute.org/genetics_data_provider/"
            }
         ],
         "tags": [
            {
               "name": "0.9.2"
            },
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            }
         ]
      },
      {
         "_id": "132da307d445fac70a403a5e623107d5",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kebedey@renci.org",
               "name": "Yaphet Kebede",
               "x-id": "https://github.com/yaphetkg",
               "x-role": "contributor"
            },
            "description": "A graph based on [hetionet (het.io)](het.io).",
            "termsOfService": "http://linkmissing",
            "title": "Automat Hetio",
            "version": "1.0.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "description": "Given a question graph return question graph plus answers.",
                     "operationId": "reasoner_api_query_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Query Reasoner API",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/reasonerapi",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of question templates that can be used to query this plater instance.",
                     "operationId": "get_reasoner_api_reasonerapi_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Message"
                                    },
                                    "title": "Response Get Reasoner Api Reasonerapi Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get question templates"
                  },
                  "post": {
                     "deprecated": true,
                     "description": "Handle TRAPI request.",
                     "operationId": "reasoner_api_reasonerapi_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "query_graph": {
                                          "edges": {},
                                          "nodes": {
                                             "n0": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:15"
                                             }
                                          }
                                       }
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Query"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Reasoner Api"
                  }
               }
            },
            {
               "path": "/cypher",
               "pathitem": {
                  "post": {
                     "description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).",
                     "operationId": "cypher_cypher_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/CypherRequest"
                                    }
                                 ],
                                 "example": {
                                    "query": "MATCH (n) RETURN count(n)"
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/CypherResponse"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Run cypher query"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.",
                     "operationId": "predicates_predicates_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "type": "object"
                                    },
                                    "title": "Response Predicates Predicates Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/graph/schema",
               "pathitem": {
                  "get": {
                     "deprecated": true,
                     "description": "Get one-hop connection types",
                     "operationId": "predicates_graph_schema_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Predicates Graph Schema Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get one-hop connection types"
                  }
               }
            },
            {
               "path": "/simple_spec",
               "pathitem": {
                  "get": {
                     "description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.",
                     "operationId": "simple_spec_simple_spec_get",
                     "parameters": [
                        {
                           "in": "query",
                           "name": "source",
                           "required": false,
                           "schema": {
                              "title": "Source",
                              "type": "string"
                           }
                        },
                        {
                           "in": "query",
                           "name": "target",
                           "required": false,
                           "schema": {
                              "title": "Target",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/SimpleSpecElement"
                                    },
                                    "title": "Response Simple Spec Simple Spec Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one-hop connection schema"
                  }
               }
            },
            {
               "path": "/graph/summary",
               "pathitem": {
                  "get": {
                     "description": "Returns a summary of the graph.",
                     "operationId": "graph_summary_graph_summary_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response Graph Summary Graph Summary Get",
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "Get graph summary"
                  }
               }
            },
            {
               "path": "/overlay",
               "pathitem": {
                  "post": {
                     "description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.",
                     "operationId": "overlay_overlay_post",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "allOf": [
                                    {
                                       "$ref": "#/components/schemas/Query"
                                    }
                                 ],
                                 "example": {
                                    "message": {
                                       "knowledge_graph": {
                                          "edges": {
                                             "9f7f9d86cb57e7190aafa57f7564eb05": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1610437123.7988985,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_family_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "PANTHER.FAMILY:PTHR12015:SF170",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "PANTHER.FAMILY:PTHR12015:SF170"
                                             },
                                             "dd8ef7a4606c4f8e405e6a5b1b095993": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "ctime": 1584932086.0009434,
                                                         "predicate": "biolink:part_of",
                                                         "provided_by": "panther.get_gene_by_gene_family",
                                                         "publications": [],
                                                         "relation": "BFO:0000050",
                                                         "relation_label": "part of",
                                                         "source_database": "panther",
                                                         "source_id": "NCBIGene:6352",
                                                         "target_id": "PANTHER.FAMILY:PTHR12015"
                                                      }
                                                   }
                                                ],
                                                "object": "PANTHER.FAMILY:PTHR12015",
                                                "predicate": "biolink:part_of",
                                                "subject": "NCBIGene:6352"
                                             }
                                          },
                                          "nodes": {
                                             "NCBIGene:6352": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GenomicEntity",
                                                            "biolink:GeneOrGeneProduct",
                                                            "biolink:MacromolecularMachine",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Gene"
                                                         ],
                                                         "chromosome": "17",
                                                         "equivalent_identifiers": [
                                                            "ENSEMBL:ENSG00000271503",
                                                            "NCBIGene:6352",
                                                            "NCBIGene:6352",
                                                            "HGNC:10632",
                                                            "UniProtKB:P13501"
                                                         ],
                                                         "gene_family": [
                                                            "Chemokine ligands"
                                                         ],
                                                         "gene_family_id": [
                                                            483
                                                         ],
                                                         "location": "17q12",
                                                         "locus_group": "protein-coding gene",
                                                         "synonyms": [],
                                                         "taxon": 9606
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:MolecularEntity",
                                                   "biolink:GenomicEntity",
                                                   "biolink:GeneOrGeneProduct",
                                                   "biolink:MacromolecularMachine",
                                                   "biolink:Gene"
                                                ],
                                                "name": "CCL5"
                                             },
                                             "PANTHER.FAMILY:PTHR12015": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "SMALL INDUCIBLE CYTOKINE A"
                                             },
                                             "PANTHER.FAMILY:PTHR12015:SF170": {
                                                "attributes": [
                                                   {
                                                      "type": "WIKIDATA:Q80585",
                                                      "value": {
                                                         "category": [
                                                            "biolink:BiologicalEntity",
                                                            "biolink:GeneFamily",
                                                            "biolink:NamedThing",
                                                            "biolink:MolecularEntity",
                                                            "biolink:Entity"
                                                         ],
                                                         "equivalent_identifiers": [
                                                            "PANTHER.FAMILY:PTHR12015:SF170"
                                                         ],
                                                         "synonyms": []
                                                      }
                                                   }
                                                ],
                                                "category": [
                                                   "biolink:NamedThing",
                                                   "biolink:BiologicalEntity",
                                                   "biolink:GeneFamily",
                                                   "biolink:MolecularEntity",
                                                   "biolink:Entity"
                                                ],
                                                "name": "C-C MOTIF CHEMOKINE 5"
                                             }
                                          }
                                       },
                                       "query_graph": {
                                          "edges": {
                                             "e12": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n1"
                                             },
                                             "e23": {
                                                "object": "n2",
                                                "predicate": "biolink:part_of",
                                                "subject": "n3"
                                             }
                                          },
                                          "nodes": {
                                             "n1": {
                                                "category": "biolink:Gene",
                                                "id": "NCBIGene:6352",
                                                "is_set": false
                                             },
                                             "n2": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             },
                                             "n3": {
                                                "category": "biolink:GeneFamily",
                                                "is_set": false
                                             }
                                          }
                                       },
                                       "results": [
                                          {
                                             "edge_bindings": {
                                                "e12": [
                                                   {
                                                      "id": "dd8ef7a4606c4f8e405e6a5b1b095993"
                                                   }
                                                ],
                                                "e23": [
                                                   {
                                                      "id": "9f7f9d86cb57e7190aafa57f7564eb05"
                                                   }
                                                ]
                                             },
                                             "node_bindings": {
                                                "n1": [
                                                   {
                                                      "id": "NCBIGene:6352"
                                                   }
                                                ],
                                                "n2": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015"
                                                   }
                                                ],
                                                "n3": [
                                                   {
                                                      "id": "PANTHER.FAMILY:PTHR12015:SF170"
                                                   }
                                                ]
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "title": "Request"
                              }
                           }
                        },
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Overlay results with available connections between each node.",
                     "tags": [
                        "translator"
                     ]
                  }
               }
            },
            {
               "path": "/about",
               "pathitem": {
                  "get": {
                     "description": "Returns a JSON describing dataset.",
                     "operationId": "about_about_get",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "title": "Response About About Get"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        }
                     },
                     "summary": "JSON about dataset"
                  }
               }
            },
            {
               "path": "/{source_type}/{target_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.",
                     "operationId": "one_hop__source_type___target_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "source_type",
                           "required": true,
                           "schema": {
                              "title": "Source Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "target_type",
                           "required": true,
                           "schema": {
                              "title": "Target Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response One Hop  Source Type   Target Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"
                  }
               }
            },
            {
               "path": "/{node_type}/{curie}",
               "pathitem": {
                  "get": {
                     "description": "Returns `node` matching `curie`.",
                     "operationId": "node__node_type___curie__get",
                     "parameters": [
                        {
                           "in": "path",
                           "name": "node_type",
                           "required": true,
                           "schema": {
                              "title": "Node Type",
                              "type": "string"
                           }
                        },
                        {
                           "in": "path",
                           "name": "curie",
                           "required": true,
                           "schema": {
                              "title": "Curie",
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {},
                                    "title": "Response Node  Node Type   Curie  Get",
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Successful Response"
                        },
                        "422": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                 }
                              }
                           },
                           "description": "Validation Error"
                        }
                     },
                     "summary": "Find `node` by `curie`"
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Default server",
               "url": "https://automat.renci.org/hetio"
            }
         ],
         "tags": [
            {
               "name": "translator"
            },
            {
               "name": "automat"
            }
         ]
      },
      {
         "_id": "fd006b0be2774dde2dca18dd9d1005cd",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "edeutsch@systemsbiology.org"
            },
            "description": "TRAPI 1.0 endpoint for the NCATS Biomedical Translator Reasoner called ARAX",
            "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            },
            "termsOfService": "https://github.com/RTXteam/RTX/blob/master/LICENSE",
            "title": "ARAX Translator Reasoner",
            "version": "1.0.0",
            "x-translator": {
               "component": "ARA",
               "team": "Expander Agent"
            }
         },
         "paths": [
            {
               "path": "/PubmedMeshNgd/{term1}/{term2}",
               "pathitem": {
                  "get": {
                     "operationId": "pubmed_mesh_ngd",
                     "parameters": [
                        {
                           "description": "First of two terms. Order not important.",
                           "explode": false,
                           "in": "path",
                           "name": "term1",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "style": "simple"
                        },
                        {
                           "description": "Second of two terms. Order not important.",
                           "explode": false,
                           "in": "path",
                           "name": "term2",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "style": "simple"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/MeshNgdResponse"
                                 }
                              }
                           },
                           "description": "successful operation"
                        },
                        "400": {
                           "description": "Invalid terms"
                        }
                     },
                     "summary": "Query to get the Normalized Google Distance between two MeSH terms based on co-occurrence in all PubMed article annotations",
                     "tags": [
                        "PubmedMeshNgd"
                     ],
                     "x-openapi-router-controller": "openapi_server.controllers.pubmed_mesh_ngd_controller"
                  }
               }
            },
            {
               "path": "/entity/{search_string}",
               "pathitem": {
                  "get": {
                     "operationId": "get_entity_by_string",
                     "parameters": [
                        {
                           "description": "Some string to search by (name, abbreviation, CURIE, etc.)",
                           "explode": false,
                           "in": "path",
                           "name": "search_string",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "style": "simple"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "type": "object"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        },
                        "404": {
                           "description": "Entity not found"
                        }
                     },
                     "summary": "Obtain the CURIE and type of some entity by name",
                     "tags": [
                        "entity"
                     ],
                     "x-openapi-router-controller": "openapi_server.controllers.entity_controller"
                  }
               }
            },
            {
               "path": "/exampleQuestions",
               "pathitem": {
                  "get": {
                     "operationId": "example_questions",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "type": "object"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        }
                     },
                     "summary": "Request a list of example questions that ARAX can answer",
                     "tags": [
                        "exampleQuestions"
                     ],
                     "x-openapi-router-controller": "openapi_server.controllers.example_questions_controller"
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "operationId": "predicates",
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "predicates"
                     ],
                     "x-openapi-router-controller": "openapi_server.controllers.predicates_controller"
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "post": {
                     "operationId": "query",
                     "parameters": [
                        {
                           "description": "Set to true in order to bypass any possible cached response and try to answer the query over again\n",
                           "explode": true,
                           "in": "query",
                           "name": "bypass_cache",
                           "required": false,
                           "schema": {
                              "default": false,
                              "type": "boolean"
                           },
                           "style": "form"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query reasoner via one of several inputs",
                     "tags": [
                        "query"
                     ],
                     "x-openapi-router-controller": "openapi_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/response/{response_id}",
               "pathitem": {
                  "get": {
                     "operationId": "get_response",
                     "parameters": [
                        {
                           "description": "Integer identifier of the response to return",
                           "explode": false,
                           "in": "path",
                           "name": "response_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           },
                           "style": "simple"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "successful operation"
                        },
                        "404": {
                           "description": "response_id not found"
                        }
                     },
                     "summary": "Request a previously stored response from the server",
                     "tags": [
                        "response"
                     ],
                     "x-openapi-router-controller": "openapi_server.controllers.response_controller"
                  }
               }
            },
            {
               "path": "/translate",
               "pathitem": {
                  "post": {
                     "operationId": "translate",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "schema": {
                                 "$ref": "#/components/schemas/Question"
                              }
                           }
                        },
                        "description": "Question information to be translated",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Query"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "successful operation"
                        },
                        "400": {
                           "description": "Invalid status value"
                        }
                     },
                     "summary": "Translate natural language question into a standardized query",
                     "tags": [
                        "translate"
                     ],
                     "x-openapi-router-controller": "openapi_server.controllers.translate_controller"
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://arax.ncats.io/api/arax/v1.0"
            }
         ],
         "tags": [
            {
               "description": "Get supported relationships by source and target",
               "externalDocs": {
                  "description": "Documentation for the reasoner predicates function",
                  "url": "http://arax.ncats.io/overview.html#predicates"
               },
               "name": "predicates"
            },
            {
               "description": "Query reasoner using a predefined question type",
               "externalDocs": {
                  "description": "Documentation for the reasoner query function",
                  "url": "http://arax.ncats.io/overview.html#query"
               },
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "reasoner"
            },
            {
               "description": "Request a previously stored response from the server",
               "externalDocs": {
                  "description": "Documentation for the reasoner response function",
                  "url": "https://arax.ncats.io/overview.html#response"
               },
               "name": "response"
            },
            {
               "description": "Translate natural language question into a standardized query",
               "externalDocs": {
                  "description": "Documentation for the reasoner translate function",
                  "url": "https://arax.ncats.io/overview.html#translate"
               },
               "name": "translate"
            },
            {
               "description": "Return identifier and type of some entity in the knowledge graph",
               "externalDocs": {
                  "description": "Documentation for the reasoner entity function",
                  "url": "https://arax.ncats.io/overview.html#entity"
               },
               "name": "entity"
            },
            {
               "description": "Return a list of example questions that the reasoner can answer",
               "externalDocs": {
                  "description": "Documentation for the reasoner exampleQuestions function",
                  "url": "https://arax.ncats.io/overview.html#exampleQuestions"
               },
               "name": "exampleQuestions"
            },
            {
               "description": "Query to get the Normalized Google Distance between two MeSH terms based on co-occurance in all PubMed article annotations",
               "externalDocs": {
                  "description": "Documentation for the reasoner PubmedMeshNgd function",
                  "url": "https://arax.ncats.io/overview.html#PubmedMeshNgd"
               },
               "name": "PubmedMeshNgd"
            }
         ]
      },
      {
         "_id": "dc91716f44207d2e1287c727f281d339",
         "_score": 0.8,
         "info": {
            "contact": {
               "email": "kevinxin@scripps.edu",
               "name": "Jiwen Xin",
               "url": "https://github.com/kevinxin90"
            },
            "description": "A ReasonerStdAPI for BioThings Explorer",
            "termsOfService": "https://biothings.io/about",
            "title": "BioThings Explorer ReasonerStdAPI",
            "version": "1.0.0",
            "x-reasoner_standard_version": "1.0.0",
            "x-translator": {
               "component": "ARA",
               "team": [
                  "Exploring Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/metakg",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "The subject type of the association, e.g. Gene",
                           "example": "Gene",
                           "in": "query",
                           "name": "subject",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The object type of the association, e.g. ChemicalSubstance",
                           "example": "ChemicalSubstance",
                           "in": "query",
                           "name": "object",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The predicate of the association, e.g. Gene",
                           "example": "physically_interacts_with",
                           "in": "query",
                           "name": "predicate",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The API providing the association, e.g. MyChem.info API",
                           "example": "MyChem.info API",
                           "in": "query",
                           "name": "api",
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "description": "The data source providing the association, e.g. drugbank",
                           "example": "drugbank",
                           "in": "query",
                           "name": "provided_by",
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "description": "Array of all associations",
                                    "items": {
                                       "properties": {
                                          "api": {
                                             "description": "The api providing the association, e.g. MyChem.info",
                                             "properties": {
                                                "name": {
                                                   "description": "The api providing the association, e.g. MyChem.info",
                                                   "example": "MyChem.info API",
                                                   "type": "string"
                                                },
                                                "smartapi": {
                                                   "description": "smartapi related data",
                                                   "properties": {
                                                      "id": {
                                                         "description": "unique smartapi id for the api",
                                                         "example": "8f08d1446e0bb9c2b323713ce83e2bd3",
                                                         "type": "string"
                                                      },
                                                      "metadata": {
                                                         "description": "the url for smartapi specification",
                                                         "example": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml",
                                                         "type": "string"
                                                      },
                                                      "ui": {
                                                         "description": "the web UI url for the API",
                                                         "example": "https://smart-api.info/ui/8f08d1446e0bb9c2b323713ce83e2bd3",
                                                         "type": "string"
                                                      }
                                                   },
                                                   "type": "object"
                                                }
                                             },
                                             "type": "object"
                                          },
                                          "object": {
                                             "description": "The object type of the association, e.g. ChemicalSubstance",
                                             "example": "ChemicalSubstance",
                                             "type": "string"
                                          },
                                          "predicate": {
                                             "description": "The predicate of the association, e.g. physically_interacts_with",
                                             "example": "physically_interacts_with",
                                             "type": "string"
                                          },
                                          "provided_by": {
                                             "description": "The data source providing the association, e.g. ChEMBL",
                                             "example": "ChEMBL",
                                             "type": "string"
                                          },
                                          "subject": {
                                             "description": "The subject type of the association, e.g. Gene",
                                             "example": "Gene",
                                             "type": "string"
                                          }
                                       },
                                       "type": "object"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "Association information including subject, object, predicate, api, provided_by and smartapi info."
                        }
                     },
                     "summary": "retrieve associations within smartapi, if no parameters provided, will return all associations",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "chemical_substance": {
                                          "chemical_substance": [
                                             "correlated_with"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "metadata",
                        "0.9.2"
                     ]
                  }
               }
            },
            {
               "path": "/v1/predicates",
               "pathitem": {
                  "get": {
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target",
                     "tags": [
                        "predicates",
                        "1.0.0"
                     ]
                  }
               }
            },
            {
               "path": "/v1/smartapi/{smartapi_id}/predicates",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "SmartAPI ID of an API, you can get it from https://smart-api.info/registry",
                           "example": "978fe380a147a8641caf72320862697b",
                           "in": "path",
                           "name": "smartapi_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target for individual smartAPI",
                     "tags": [
                        "predicates",
                        "1.0.0"
                     ]
                  }
               }
            },
            {
               "path": "/v1/team/{team_name}/predicates",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Translator Team Name, e.g. Service Provider, Multiomics Provider",
                           "example": "Multiomics Provider",
                           "in": "path",
                           "name": "team_name",
                           "required": true,
                           "schema": {
                              "enum": [
                                 "Multiomics Provider",
                                 "Text Mining Provider",
                                 "Service Provider"
                              ],
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "additionalProperties": {
                                       "additionalProperties": {
                                          "description": "Array of predicates",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       },
                                       "description": "Target map",
                                       "type": "object"
                                    },
                                    "description": "Source map",
                                    "example": {
                                       "biolink:ChemicalSubstance": {
                                          "biolink:Gene": [
                                             "biolink:directly_interacts_with",
                                             "biolink:decreases_activity_of"
                                          ]
                                       }
                                    },
                                    "type": "object"
                                 }
                              }
                           },
                           "description": "Predicates by source and target"
                        }
                     },
                     "summary": "Get supported relationships by source and target for a KP/ARA team",
                     "tags": [
                        "predicates",
                        "1.0.0"
                     ]
                  }
               }
            },
            {
               "path": "/v1/query",
               "pathitem": {
                  "post": {
                     "description": "",
                     "operationId": "query",
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": {
                                          "e00": {
                                             "object": "n01",
                                             "subject": "n00"
                                          }
                                       },
                                       "nodes": {
                                          "n00": {
                                             "category": "biolink:Disease",
                                             "id": "MONDO:0005737"
                                          },
                                          "n01": {
                                             "category": "biolink:ChemicalSubstance"
                                          }
                                       }
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query BioThings Explorer TRAPI API as ARA",
                     "tags": [
                        "query",
                        "1.0.0"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/v1/smartapi/{smartapi_id}/query",
               "pathitem": {
                  "post": {
                     "description": "",
                     "operationId": "querySmartAPI",
                     "parameters": [
                        {
                           "description": "SmartAPI ID of an API, you can get it from https://smart-api.info/registry",
                           "example": "978fe380a147a8641caf72320862697b",
                           "in": "path",
                           "name": "smartapi_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": {
                                          "e00": {
                                             "object": "n01",
                                             "subject": "n00"
                                          }
                                       },
                                       "nodes": {
                                          "n00": {
                                             "category": "biolink:Gene",
                                             "id": "NCBIGene:1017"
                                          },
                                          "n01": {
                                             "category": "biolink:ChemicalSubstance"
                                          }
                                       }
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query individual SmartAPI as TRAPI service using SmartAPI ID",
                     "tags": [
                        "query",
                        "1.0.0"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/v1/team/{team_name}/query",
               "pathitem": {
                  "post": {
                     "description": "",
                     "operationId": "queryTeam",
                     "parameters": [
                        {
                           "description": "Translator Team Name, e.g. Service Provider, Multiomics Provider",
                           "example": "Text Mining Provider",
                           "in": "path",
                           "name": "team_name",
                           "required": true,
                           "schema": {
                              "enum": [
                                 "Multiomics Provider",
                                 "Text Mining Provider",
                                 "Service Provider"
                              ],
                              "type": "string"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": {
                                          "e00": {
                                             "object": "n01",
                                             "subject": "n00"
                                          }
                                       },
                                       "nodes": {
                                          "n00": {
                                             "category": "biolink:Gene",
                                             "id": "NCBIGene:1017"
                                          },
                                          "n01": {
                                             "category": "biolink:ChemicalSubstance"
                                          }
                                       }
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "Query information to be submitted",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Response"
                                 }
                              }
                           },
                           "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."
                        },
                        "500": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Internal server error."
                        },
                        "501": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "type": "string"
                                 }
                              }
                           },
                           "description": "Not implemented."
                        }
                     },
                     "summary": "Query individual Translator team as individual TRAPI service using team name",
                     "tags": [
                        "query",
                        "1.0.0"
                     ],
                     "x-swagger-router-controller": "swagger_server.controllers.query_controller"
                  }
               }
            },
            {
               "path": "/query/",
               "pathitem": {
                  "post": {
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": [
                                          {
                                             "id": "e00",
                                             "source_id": "n00",
                                             "target_id": "n01"
                                          },
                                          {
                                             "id": "e01",
                                             "source_id": "n01",
                                             "target_id": "n02"
                                          }
                                       ],
                                       "nodes": [
                                          {
                                             "curie": "MONDO:0005737",
                                             "id": "n00",
                                             "type": "disease"
                                          },
                                          {
                                             "id": "n01",
                                             "set": true,
                                             "type": "gene"
                                          },
                                          {
                                             "id": "n02",
                                             "type": "chemical_substance"
                                          }
                                       ]
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        }
                     },
                     "summary": "Get answers to a question",
                     "tags": [
                        "0.9.2",
                        "query"
                     ]
                  }
               }
            },
            {
               "path": "/smartapi/{smartapi_id}/query/",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "description": "SmartAPI ID of an API, you can get it from https://smart-api.info/registry",
                           "example": "978fe380a147a8641caf72320862697b",
                           "in": "path",
                           "name": "smartapi_id",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": [
                                          {
                                             "id": "e00",
                                             "source_id": "n00",
                                             "target_id": "n01"
                                          }
                                       ],
                                       "nodes": [
                                          {
                                             "curie": "NCBIGene:1017",
                                             "id": "n00",
                                             "type": "gene"
                                          },
                                          {
                                             "id": "n01",
                                             "type": "chemical_substance"
                                          }
                                       ]
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        }
                     },
                     "summary": "Get answers to a question using a specific API",
                     "tags": [
                        "0.9.2",
                        "query"
                     ]
                  }
               }
            },
            {
               "path": "/source/{source_name}/query/",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "description": "The name of the data source",
                           "example": "drugbank",
                           "in": "path",
                           "name": "source_name",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/json": {
                              "example": {
                                 "message": {
                                    "query_graph": {
                                       "edges": [
                                          {
                                             "id": "e00",
                                             "source_id": "n00",
                                             "target_id": "n01"
                                          }
                                       ],
                                       "nodes": [
                                          {
                                             "curie": "NCBIGene:1017",
                                             "id": "n00",
                                             "type": "gene"
                                          },
                                          {
                                             "id": "n01",
                                             "type": "chemical_substance"
                                          }
                                       ]
                                    }
                                 }
                              },
                              "schema": {
                                 "$ref": "#/components/schemas/Query"
                              }
                           }
                        },
                        "description": "A message with question graph.",
                        "required": true
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Message"
                                 }
                              }
                           },
                           "description": "A message with knowledge graph and answers."
                        }
                     },
                     "summary": "Get answers to a question using a specific data source.",
                     "tags": [
                        "0.9.2",
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "url": "https://api.bte.ncats.io"
            }
         ],
         "tags": [
            {
               "name": "1.0.0"
            },
            {
               "name": "0.9.2"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "metadata"
            },
            {
               "name": "query"
            }
         ]
      },
      {
         "_id": "ed0ee52921c7cbce24033ffd1369922e",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "Disease-affected_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affected_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affected_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affected_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affected_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affected_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affected_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affected_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affected_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-affects-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-affects-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-caused_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-caused_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-causes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-causes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-causes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-causes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-coexists_with-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "coexists_with"
                     },
                     "path": "/query",
                     "predicate": "coexists_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-derives_from-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "derives_from"
                     },
                     "path": "/query",
                     "predicate": "derives_from",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-derives_from-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-derives_from-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "derives_from"
                     },
                     "path": "/query",
                     "predicate": "derives_from",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-derives_from-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-derives_info-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "derives_info"
                     },
                     "path": "/query",
                     "predicate": "derives_info",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-derives_info-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupted_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupted_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupted_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupted_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupted_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupted_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupts-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupts-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupts-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupts-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupts-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupts-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupts-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupts-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupts-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupts-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupts-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupts-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-disrupts-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-disrupts-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulated_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-negatively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-physically_interacts_with-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-physically_interacts_with-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-physically_interacts_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-physically_interacts_with-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-physically_interacts_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-physically_interacts_with-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-positively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-positively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-positively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-positively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-positively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-positively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-positively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-positively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-positively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-positively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-prevented_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "prevented_by"
                     },
                     "path": "/query",
                     "predicate": "prevented_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-prevented_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "prevented_by"
                     },
                     "path": "/query",
                     "predicate": "prevented_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-prevented_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "prevented_by"
                     },
                     "path": "/query",
                     "predicate": "prevented_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-prevented_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "prevented_by"
                     },
                     "path": "/query",
                     "predicate": "prevented_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-prevented_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "prevented_by"
                     },
                     "path": "/query",
                     "predicate": "prevented_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-prevented_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "prevented_by"
                     },
                     "path": "/query",
                     "predicate": "prevented_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-prevents-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "prevents"
                     },
                     "path": "/query",
                     "predicate": "prevents",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-prevents-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-related_to-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-related_to-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treated_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "treated_by"
                     },
                     "path": "/query",
                     "predicate": "treated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treated_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "Disease-treats-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "treats"
                     },
                     "path": "/query",
                     "predicate": "treats",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-treats-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "Disease-affected_by-AnatomicalEntity": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affected_by-BiologicalProcess": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affected_by-Cell": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affected_by-CellularComponent": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affected_by-ChemicalSubstance": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affected_by-Disease": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affected_by-Gene": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affected_by-PhenotypicFeature": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "Disease-affects-AnatomicalEntity": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-affects-BiologicalProcess": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-affects-Cell": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-affects-CellularComponent": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-affects-ChemicalSubstance": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-affects-Disease": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-affects-Gene": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-affects-PhenotypicFeature": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "Disease-caused_by-AnatomicalEntity": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-caused_by-BiologicalProcess": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-caused_by-Cell": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-caused_by-CellularComponent": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-caused_by-ChemicalSubstance": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-caused_by-Disease": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-caused_by-Gene": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-caused_by-PhenotypicFeature": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "Disease-causes-BiologicalProcess": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "Disease-causes-Disease": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "Disease-coexists_with-AnatomicalEntity": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-coexists_with-BiologicalProcess": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-coexists_with-Cell": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-coexists_with-CellularComponent": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-coexists_with-ChemicalSubstance": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-coexists_with-Disease": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-coexists_with-Gene": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-coexists_with-PhenotypicFeature": {
                  "pmid": "coexists_with.pmid",
                  "umls": "coexists_with.umls"
               },
               "Disease-derives_from-ChemicalSubstance": {
                  "pmid": "derives_from.pmid",
                  "umls": "derives_from.umls"
               },
               "Disease-derives_from-Gene": {
                  "pmid": "derives_from.pmid",
                  "umls": "derives_from.umls"
               },
               "Disease-derives_info-ChemicalSubstance": {
                  "pmid": "derives_info.pmid",
                  "umls": "derives_info.umls"
               },
               "Disease-disrupted_by-BiologicalProcess": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Disease-disrupted_by-CellularComponent": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Disease-disrupted_by-ChemicalSubstance": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Disease-disrupted_by-Disease": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Disease-disrupted_by-Gene": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Disease-disrupted_by-PhenotypicFeature": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "Disease-disrupts-AnatomicalEntity": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Disease-disrupts-BiologicalProcess": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Disease-disrupts-Cell": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Disease-disrupts-CellularComponent": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Disease-disrupts-Disease": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Disease-disrupts-Gene": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Disease-disrupts-PhenotypicFeature": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "Disease-negatively_regulated_by-BiologicalProcess": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Disease-negatively_regulated_by-ChemicalSubstance": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Disease-negatively_regulated_by-Disease": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Disease-negatively_regulated_by-Gene": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Disease-negatively_regulated_by-PhenotypicFeature": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "Disease-negatively_regulates-BiologicalProcess": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Disease-negatively_regulates-ChemicalSubstance": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Disease-negatively_regulates-Disease": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Disease-negatively_regulates-Gene": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "Disease-physically_interacts_with-BiologicalProcess": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Disease-physically_interacts_with-CellularComponent": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Disease-physically_interacts_with-ChemicalSubstance": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Disease-physically_interacts_with-Disease": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Disease-physically_interacts_with-Gene": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Disease-physically_interacts_with-PhenotypicFeature": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "Disease-positively_regulated_by-ChemicalSubstance": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Disease-positively_regulated_by-Disease": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Disease-positively_regulated_by-Gene": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "Disease-positively_regulates-BiologicalProcess": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Disease-positively_regulates-ChemicalSubstance": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Disease-positively_regulates-Disease": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Disease-positively_regulates-Gene": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "Disease-prevented_by-AnatomicalEntity": {
                  "pmid": "prevented_by.pmid",
                  "umls": "prevented_by.umls"
               },
               "Disease-prevented_by-BiologicalProcess": {
                  "pmid": "prevented_by.pmid",
                  "umls": "prevented_by.umls"
               },
               "Disease-prevented_by-ChemicalSubstance": {
                  "pmid": "prevented_by.pmid",
                  "umls": "prevented_by.umls"
               },
               "Disease-prevented_by-Disease": {
                  "pmid": "prevented_by.pmid",
                  "umls": "prevented_by.umls"
               },
               "Disease-prevented_by-Gene": {
                  "pmid": "prevented_by.pmid",
                  "umls": "prevented_by.umls"
               },
               "Disease-prevented_by-PhenotypicFeature": {
                  "pmid": "prevented_by.pmid",
                  "umls": "prevented_by.umls"
               },
               "Disease-prevents-Disease": {
                  "pmid": "prevents.pmid",
                  "umls": "prevents.umls"
               },
               "Disease-related_to-AnatomicalEntity": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-related_to-BiologicalProcess": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-related_to-Cell": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-related_to-CellularComponent": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-related_to-ChemicalSubstance": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-related_to-Disease": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-related_to-Gene": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-related_to-PhenotypicFeature": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "Disease-treated_by-AnatomicalEntity": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treated_by-BiologicalProcess": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treated_by-Cell": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treated_by-CellularComponent": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treated_by-ChemicalSubstance": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treated_by-Disease": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treated_by-Gene": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treated_by-PhenotypicFeature": {
                  "pmid": "treated_by.pmid",
                  "umls": "treated_by.umls"
               },
               "Disease-treats-Disease": {
                  "pmid": "treats.pmid",
                  "umls": "treats.umls"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the SEMMED disease query web services.  Learn more about [semmed disease](http://pending.biothings.io/semmed)",
            "termsOfService": "http://biothings.ncats.io",
            "title": "SEMMED Disease API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/disease",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/disease/{diseaseid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on ID",
                           "example": "C0004096",
                           "in": "path",
                           "name": "diseaseid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from mydisease.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a mydisease.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-affects-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-causes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-causes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-derives_from-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-derives_from-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-derives_info-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-prevents-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-related_to-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-treats-Disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://biothings.ncats.io/semmed"
            }
         ],
         "tags": [
            {
               "name": "chemical"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "semmed"
            }
         ]
      },
      {
         "_id": "671b45c0301c8624abbd26ae78449ca2",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "bp-disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "MESH",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "ctd.mesh",
                        "size": "250"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "ctd.bp_related_to_disease.go_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/bp-disease"
                     },
                     "source": "CTD",
                     "supportBatch": true
                  }
               ],
               "chemical-disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MESH",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "MESH",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disgenet.xrefs.mesh",
                        "size": "250"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "ctd.chemical_related_to_disease.mesh_chemical_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/mesh"
                     },
                     "source": "hpo",
                     "supportBatch": true
                  }
               ],
               "disease-bp": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MESH",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "GO",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "ctd.bp_related_to_disease"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mondo.xrefs.mesh, disgenet.xrefs.mesh"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-bp"
                     },
                     "source": "CTD",
                     "supportBatch": true
                  }
               ],
               "disease-chemical": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MESH",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "MESH",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "ctd.chemical_related_to_disease"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mondo.xrefs.mesh, disgenet.xrefs.mesh"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-chemical"
                     },
                     "source": "CTD",
                     "supportBatch": true
                  }
               ],
               "disease-gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disgenet.genes_related_to_disease.gene_id"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mondo.xrefs.umls, disgenet.xrefs.umls"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-gene"
                     },
                     "source": "disgenet",
                     "supportBatch": true
                  }
               ],
               "disease-phenotype": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "OMIM",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "hpo.phenotype_related_to_disease"
                     },
                     "predicate": "has_phenotype",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "hpo.omim"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-phenotype"
                     },
                     "source": "hpoa",
                     "supportBatch": true
                  }
               ],
               "disease-phenotype2": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "ORPHANET",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "hpo.phenotype_related_to_disease"
                     },
                     "predicate": "has_phenotype",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "hpo.orphanet"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-phenotype"
                     },
                     "source": "hpoa",
                     "supportBatch": true
                  }
               ],
               "disease-phenotype3": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "covid_phenotypes.hp"
                     },
                     "predicate": "has_phenotpye",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mondo.mondo"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-phenotype2"
                     },
                     "source": "covid_phenotypes",
                     "supportBatch": true
                  }
               ],
               "disease-variant": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "parameters": {
                        "fields": "disgenet.variants_related_to_disease"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mondo.xrefs.umls, disgenet.xrefs.umls"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-variant"
                     },
                     "source": "disgenet",
                     "supportBatch": true
                  }
               ],
               "gene-disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disgenet.xrefs.umls",
                        "size": "250"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "disgenet.genes_related_to_disease.gene_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/umls"
                     },
                     "source": "disgenet",
                     "supportBatch": true
                  }
               ],
               "has_subclass": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "mondo.descendants"
                     },
                     "path": "/query",
                     "predicate": "superclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mondo.mondo"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/has_subclass"
                     },
                     "source": "mondo",
                     "supportBatch": true
                  }
               ],
               "phenotype-disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "OMIM",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "mondo.xrefs.omim",
                        "size": "250"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "hpo.phenotype_related_to_disease.hpo_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/omim"
                     },
                     "source": "hpoa",
                     "supportBatch": true
                  }
               ],
               "subclass_of": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "mondo.parents"
                     },
                     "path": "/query",
                     "predicate": "subclass_of",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mondo.mondo"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/subclass_of"
                     },
                     "source": "mondo",
                     "supportBatch": true
                  }
               ],
               "variant-disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DBSNP",
                           "semantic": "SequenceVariant"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disgenet.xrefs.umls",
                        "size": "250"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "disgenet.variants_related_to_disease.rsid"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/umls"
                     },
                     "source": "disgenet",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "bp-disease": {
                  "MESH": "ctd.mesh"
               },
               "disease-bp": {
                  "GO": "ctd.bp_related_to_disease.go_id",
                  "name": "ctd.bp_related_to_disease.go_name"
               },
               "disease-chemical": {
                  "MESH": "ctd.chemical_related_to_disease.mesh_chemical_id",
                  "pubmed": "ctd.chemical_related_to_disease.pubmed"
               },
               "disease-gene": {
                  "NCBIGene": "disgenet.genes_to_disease.gene_id"
               },
               "disease-phenotype": {
                  "HP": "hpo.phenotype_related_to_disease.hpo_id",
                  "evidence": "hpo.phenotype_related_to_disease.evidence",
                  "frequency": "hpo.phenotype_related_to_disease.frequency"
               },
               "disease-phenotype2": {
                  "HP": "covid_phenotypes.hp"
               },
               "disease-variant": {
                  "DBSNP": "disgenet.variants_related_to_disease.rsid",
                  "pubmed": "disgenet.variants_related_to_disease.pubmed"
               },
               "has_subclass": {
                  "MONDO": "mondo.descendants"
               },
               "mesh": {
                  "MESH": "disgenet.xrefs.mesh"
               },
               "omim": {
                  "OMIM": "mondo.xrefs.omim"
               },
               "subclass_of": {
                  "MONDO": "mondo.parents"
               },
               "umls": {
                  "UMLS": "disgenet.xrefs.umls"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the MyDisease.info disease query web services.  Learn more about [mydisease.info](http://mydisease.info/)",
            "termsOfService": "http://mydisease.info/terms",
            "title": "mydisease.info API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/disease",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/disease/{diseaseid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on ID",
                           "example": "MONDO:0016575",
                           "in": "path",
                           "name": "diseaseid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from mydisease.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a mydisease.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-variant"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-phenotype"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-phenotype2"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-phenotype3"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-chemical"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-bp"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/variant-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/phenotype-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/bp-disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/has_subclass"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/subclass_of"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "http://mydisease.info/v1"
            }
         ],
         "tags": [
            {
               "name": "disease"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "1bef5ecbb0b9aee90023ce9faa2c8974",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "ChemicalSubstance-ChemicalSubstance-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ChemicalSubstance-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ClinicalFinding-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ClinicalFinding-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ClinicalFinding-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ClinicalFinding-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ClinicalFinding-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-ClinicalFinding-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Disease1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-Drug1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ChemicalSubstance-PhenotypicFeature-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ChemicalSubstance-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ChemicalSubstance-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ChemicalSubstance-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ChemicalSubstance-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ChemicalSubstance-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ChemicalSubstance-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ClinicalFinding-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ClinicalFinding-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ClinicalFinding-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ClinicalFinding-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ClinicalFinding-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-ClinicalFinding-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Disease1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-Drug1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-PhenotypicFeature-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-PhenotypicFeature-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-PhenotypicFeature-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-PhenotypicFeature-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-PhenotypicFeature-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "ClinicalFinding-PhenotypicFeature-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ChemicalSubstance-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ClinicalFinding-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ClinicalFinding-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ClinicalFinding-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ClinicalFinding-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ClinicalFinding-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-ClinicalFinding-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Disease1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-Drug1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease-PhenotypicFeature-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ChemicalSubstance-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ChemicalSubstance-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ChemicalSubstance-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ChemicalSubstance-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ChemicalSubstance-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ChemicalSubstance-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ClinicalFinding-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ClinicalFinding-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ClinicalFinding-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ClinicalFinding-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ClinicalFinding-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-ClinicalFinding-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Disease1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-Drug1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-PhenotypicFeature-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-PhenotypicFeature-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-PhenotypicFeature-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.HP:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-PhenotypicFeature-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-PhenotypicFeature-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Disease1-PhenotypicFeature-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.HP:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ChemicalSubstance-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ChemicalSubstance-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ChemicalSubstance-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ChemicalSubstance-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ChemicalSubstance-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ChemicalSubstance-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ClinicalFinding-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ClinicalFinding-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ClinicalFinding-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ClinicalFinding-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ClinicalFinding-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-ClinicalFinding-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Disease1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-Drug1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-PhenotypicFeature-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-PhenotypicFeature-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-PhenotypicFeature-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.RXCUI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-PhenotypicFeature-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-PhenotypicFeature-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug-PhenotypicFeature-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.RXCUI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ChemicalSubstance-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ChemicalSubstance-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ChemicalSubstance-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ChemicalSubstance-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ChemicalSubstance-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ChemicalSubstance-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ClinicalFinding-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ClinicalFinding-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ClinicalFinding-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ClinicalFinding-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ClinicalFinding-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-ClinicalFinding-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Disease1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-Drug1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-PhenotypicFeature-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-PhenotypicFeature-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-PhenotypicFeature-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-PhenotypicFeature-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-PhenotypicFeature-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "Drug1-PhenotypicFeature-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ChemicalSubstance-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ClinicalFinding-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ClinicalFinding-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ClinicalFinding-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ClinicalFinding-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ClinicalFinding-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-ClinicalFinding-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "ClinicalFinding"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:ClinicalFinding AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/ClinicalFinding-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Disease1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "HP",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Disease-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "RXCUI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug1-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug1-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug1-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug1-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug1-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-Drug1-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "Drug"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:Drug AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/Drug-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "object,predicate",
                        "q": "subject.NCIT:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature-reverse-associated_with_decreased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_decreased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_decreased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature-reverse-associated_with_increased_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_increased_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_increased_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "PhenotypicFeature-PhenotypicFeature-reverse-associated_with_risk_for": [
                  {
                     "inputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCIT",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "subject,predicate",
                        "q": "object.NCIT:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for",
                        "size": 1000,
                        "sort": "predicate.feature_coefficient"
                     },
                     "predicate": "associated_with_risk_for",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "ChemicalSubstance": {
                  "CHEBI": "hits.object.CHEBI",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "ChemicalSubstance-reverse": {
                  "CHEBI": "hits.subject.CHEBI",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "ClinicalFinding": {
                  "NCIT": "hits.object.NCIT",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "ClinicalFinding-reverse": {
                  "NCIT": "hits.subject.NCIT",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "Disease": {
                  "HP": "hits.object.HP",
                  "MONDO": "hits.object.MONDO",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "Disease-reverse": {
                  "HP": "hits.subject.HP",
                  "MONDO": "hits.subject.MONDO",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "Drug": {
                  "CHEBI": "hits.object.CHEBI",
                  "RXCUI": "hits.object.RXCUI",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "Drug-reverse": {
                  "CHEBI": "hits.subject.CHEBI",
                  "RXCUI": "hits.subject.RXCUI",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "PhenotypicFeature": {
                  "NCIT": "hits.object.NCIT",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               },
               "PhenotypicFeature-reverse": {
                  "NCIT": "hits.subject.NCIT",
                  "auc_roc": "hits.predicate.auc_roc",
                  "classifier": "hits.predicate.classifier",
                  "feature_coefficient": "hits.predicate.feature_coefficient",
                  "feature_importance": "hits.predicate.feature_importance",
                  "provided_by": "hits.predicate.provided_by",
                  "type": "hits.predicate.type"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the Clinical Risk KP query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "Clinical Risk KP API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Multiomics Provider",
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "RXCUI:89821-biolink:associated_with_decreased_risk_for-MONDO:0005002-Logistic Regression-0.8655-0.3888--0.388",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "subject.id:MONDO\\:0004981",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ClinicalFinding-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ClinicalFinding-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ChemicalSubstance-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ChemicalSubstance-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-PhenotypicFeature-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-PhenotypicFeature-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ClinicalFinding-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ClinicalFinding-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ChemicalSubstance-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ChemicalSubstance-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-PhenotypicFeature-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-PhenotypicFeature-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ClinicalFinding-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ClinicalFinding-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ChemicalSubstance-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ChemicalSubstance-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-PhenotypicFeature-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-PhenotypicFeature-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ClinicalFinding-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ClinicalFinding-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ClinicalFinding-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ClinicalFinding-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ClinicalFinding-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ClinicalFinding-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug1-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug1-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ChemicalSubstance-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ChemicalSubstance-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-PhenotypicFeature-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-PhenotypicFeature-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ClinicalFinding-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ClinicalFinding-reverse-associated_with_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ClinicalFinding-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ClinicalFinding-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ChemicalSubstance-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ChemicalSubstance-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-PhenotypicFeature-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-PhenotypicFeature-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ClinicalFinding-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ClinicalFinding-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ChemicalSubstance-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ChemicalSubstance-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-PhenotypicFeature-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-PhenotypicFeature-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ClinicalFinding-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ClinicalFinding-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ChemicalSubstance-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ChemicalSubstance-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-PhenotypicFeature-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-PhenotypicFeature-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ClinicalFinding-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ClinicalFinding-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ClinicalFinding-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ClinicalFinding-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ClinicalFinding-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ClinicalFinding-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug1-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug1-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ChemicalSubstance-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ChemicalSubstance-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-PhenotypicFeature-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-PhenotypicFeature-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ClinicalFinding-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ClinicalFinding-reverse-associated_with_increased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Disease1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-Drug1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ClinicalFinding-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease-ClinicalFinding-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Disease1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-Drug1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ChemicalSubstance-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ChemicalSubstance-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-PhenotypicFeature-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-PhenotypicFeature-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ClinicalFinding-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Disease1-ClinicalFinding-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Disease1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-Drug1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ChemicalSubstance-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ChemicalSubstance-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-PhenotypicFeature-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-PhenotypicFeature-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ClinicalFinding-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug-ClinicalFinding-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Disease1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-Drug1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ChemicalSubstance-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ChemicalSubstance-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-PhenotypicFeature-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-PhenotypicFeature-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ClinicalFinding-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/Drug1-ClinicalFinding-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Drug1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ClinicalFinding-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ClinicalFinding-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Drug1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ClinicalFinding-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ClinicalFinding-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Disease1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug1-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-Drug1-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ChemicalSubstance-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ChemicalSubstance-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-PhenotypicFeature-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-PhenotypicFeature-reverse-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ClinicalFinding-associated_with_decreased_risk_for"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/ClinicalFinding-ClinicalFinding-reverse-associated_with_decreased_risk_for"
                        }
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/clinical_risk_kp"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/clinical_risk_kp"
            }
         ],
         "tags": [
            {
               "name": "disease"
            },
            {
               "name": "drug"
            },
            {
               "name": "chemical_substance"
            },
            {
               "name": "phenotypic_feature"
            },
            {
               "name": "clinical_finding"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "5219cefb9d2b8d5df08c3a956fdd20f3",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "disease-gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "association.freq_by_sample,subject.SYMBOL",
                        "q": "object.id:\"{inputs[0]}\" AND association.freq_by_sample:>0.1",
                        "size": "1000",
                        "sort": "-association.freq_by_sample"
                     },
                     "predicate": "gene_has_variant_that_contributes_to_disease_association",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease-gene"
                     },
                     "source": "Multiomics Provider",
                     "supportBatch": false
                  }
               ],
               "gene-disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "SYMBOL",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "association.freq_by_sample,object.MONDO",
                        "q": "subject.SYMBOL:{inputs[0]} AND association.freq_by_sample:>0.1",
                        "size": "1000",
                        "sort": "-association.freq_by_sample"
                     },
                     "predicate": "gene_has_variant_that_contributes_to_disease_association",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene-disease"
                     },
                     "source": "Multiomics",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "disease-gene": {
                  "SYMBOL": "hits.subject.SYMBOL",
                  "frequency": "hits.association.freq_by_sample"
               },
               "gene-disease": {
                  "MONDO": "hits.object.MONDO",
                  "frequency": "hits.association.freq_by_sample"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the TCGA Mutation Frequency KP query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "TCGA Mutation Frequency KP API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Multiomics Provider",
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/association",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Association"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching association objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of association IDs, return the matching disease object",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/association/{associationid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.",
                           "example": "NRAS-TCGA-LUAD",
                           "in": "path",
                           "name": "associationid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Association"
                                 }
                              }
                           },
                           "description": "A matching association object"
                        },
                        "404": {
                           "description": "A response indicating an unknown association ID"
                        }
                     },
                     "summary": "Retrieve association objects based on ID",
                     "tags": [
                        "association"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "KP metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from the API",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "object.MONDO:\"MONDO:0005061\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease-gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene-disease"
                        }
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/tcga_mut_freq_kp"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/tcga_mut_freq_kp"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "association"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "biothings_graph"
            }
         ]
      },
      {
         "_id": "77ed27f111262d0289ed4f4071faa619",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "disease_related_to_gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MGI",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "_id",
                        "size": "300"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mgi.associated_with_disease.doid"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/mgi"
                     },
                     "source": "mgi_gene2phenotype",
                     "supportBatch": true
                  }
               ],
               "gene_related_to_disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MGI",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "mgi.associated_with_disease"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene_related_to_disease"
                     },
                     "source": "mgi_gene2phenotype",
                     "supportBatch": true
                  }
               ],
               "gene_related_to_phenotype": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MGI",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "mgi.associated_with_phenotype"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene_related_to_phenotype"
                     },
                     "source": "mgi_gene2phenotype",
                     "supportBatch": true
                  }
               ],
               "phenotype_related_to_gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "MP",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MGI",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "_id",
                        "size": "300"
                     },
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "mgi.associated_with_phenotype.mp"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/mgi"
                     },
                     "source": "mgi_gene2phenotype",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "gene_related_to_disease": {
                  "DOID": "mgi.associated_with_disease.doid",
                  "name": "mgi.associated_with_disease.name"
               },
               "gene_related_to_phenotype": {
                  "MP": "mgi.associated_with_phenotype.mp",
                  "pubmed": "mgi.associated_with_phenotype.pubmed"
               },
               "mgi": {
                  "MGI": "_id"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "JIWEN XIN",
               "x-id": "https://github.com/kevinxin90",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the MGIgene2phenotype query web services.",
            "termsOfService": "https://biothings.io/about",
            "title": "MGIgene2phenotype API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple MGI Gene IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Gene"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching gene objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of chemical IDs, return the matching gene object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/gene/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve gene objects based on MGI Gene ID  Supports JSONP and CORS as well.",
                           "example": "MGI:101864",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Gene"
                                 }
                              }
                           },
                           "description": "A matching gene object"
                        },
                        "404": {
                           "description": "A response indicating an unknown gene ID"
                        }
                     },
                     "summary": "Retrieve gene objects based on ID",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MGIgene2phenotype metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from MGIgene2phenotype",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "MGIgene2phenotype metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a MGIgene2phenotype gene object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.",
                           "example": "mgi.associated_with_disease.doid:\"DOID:0110293\"",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make queries and return matching gene hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch gene queries and return matching gene hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene_related_to_phenotype"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene_related_to_disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/phenotype_related_to_gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease_related_to_gene"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Encrypted Production server",
               "url": "https://biothings.ncats.io/mgigene2phenotype"
            },
            {
               "description": "Production server",
               "url": "http://biothings.ncats.io/mgigene2phenotype"
            }
         ],
         "tags": [
            {
               "name": "gene"
            },
            {
               "name": "phenotype"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            }
         ]
      },
      {
         "_id": "5a7d625d50fc518d33db48cf39ce9b30",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "BiologicalProcess-affected_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affected_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affected_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affected_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affected_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affected_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affected_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "affected_by"
                     },
                     "path": "/query",
                     "predicate": "affected_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-affects-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "affects"
                     },
                     "path": "/query",
                     "predicate": "affects",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-caused_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "caused_by"
                     },
                     "path": "/query",
                     "predicate": "caused_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-causes-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-causes-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-causes-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "causes"
                     },
                     "path": "/query",
                     "predicate": "causes",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-causes-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupted_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupted_by-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupted_by-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupted_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupted_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupted_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupted_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupted_by"
                     },
                     "path": "/query",
                     "predicate": "disrupted_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupts-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupts-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupts-Cell": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Cell"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-Cell"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupts-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupts-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-disrupts-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "disrupts"
                     },
                     "path": "/query",
                     "predicate": "disrupts",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulated_by-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulates-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-negatively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "negatively_regulates"
                     },
                     "path": "/query",
                     "predicate": "negatively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-physically_interacts_with-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-physically_interacts_with-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-physically_interacts_with-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-physically_interacts_with-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "physically_interacts_with"
                     },
                     "path": "/query",
                     "predicate": "physically_interacts_with",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-positively_regulated_by-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-positively_regulated_by-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-positively_regulated_by-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-positively_regulated_by-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulated_by"
                     },
                     "path": "/query",
                     "predicate": "positively_regulated_by",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-positively_regulates-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulates-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-positively_regulates-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulates-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-positively_regulates-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "positively_regulates"
                     },
                     "path": "/query",
                     "predicate": "positively_regulates",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulates-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-prevents-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "prevents"
                     },
                     "path": "/query",
                     "predicate": "prevents",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-prevents-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-related_to-AnatomicalEntity": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "AnatomicalEntity"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-AnatomicalEntity"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-related_to-BiologicalProcess": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-BiologicalProcess"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-related_to-CellularComponent": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "CellularComponent"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-CellularComponent"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-related_to-ChemicalSubstance": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-ChemicalSubstance"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-related_to-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-related_to-Gene": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-Gene"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-related_to-PhenotypicFeature": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "PhenotypicFeature"
                        }
                     ],
                     "parameters": {
                        "fields": "related_to"
                     },
                     "path": "/query",
                     "predicate": "related_to",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-PhenotypicFeature"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ],
               "BiologicalProcess-treats-Disease": [
                  {
                     "inputSeparator": ",",
                     "inputs": [
                        {
                           "id": "UMLS",
                           "semantic": "BiologicalProcess"
                        }
                     ],
                     "method": "post",
                     "outputs": [
                        {
                           "id": "UMLS",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "fields": "treats"
                     },
                     "path": "/query",
                     "predicate": "treats",
                     "requestBody": {
                        "body": {
                           "q": "{inputs[0]}",
                           "scopes": "umls"
                        }
                     },
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/BiologicalProcess-treats-Disease"
                     },
                     "source": "SEMMED",
                     "supportBatch": true
                  }
               ]
            },
            "x-bte-response-mapping": {
               "BiologicalProcess-affected_by-AnatomicalEntity": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "BiologicalProcess-affected_by-BiologicalProcess": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "BiologicalProcess-affected_by-CellularComponent": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "BiologicalProcess-affected_by-ChemicalSubstance": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "BiologicalProcess-affected_by-Disease": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "BiologicalProcess-affected_by-Gene": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "BiologicalProcess-affected_by-PhenotypicFeature": {
                  "pmid": "affected_by.pmid",
                  "umls": "affected_by.umls"
               },
               "BiologicalProcess-affects-AnatomicalEntity": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-affects-BiologicalProcess": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-affects-Cell": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-affects-CellularComponent": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-affects-ChemicalSubstance": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-affects-Disease": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-affects-Gene": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-affects-PhenotypicFeature": {
                  "pmid": "affects.pmid",
                  "umls": "affects.umls"
               },
               "BiologicalProcess-caused_by-AnatomicalEntity": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-caused_by-BiologicalProcess": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-caused_by-Cell": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-caused_by-CellularComponent": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-caused_by-ChemicalSubstance": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-caused_by-Disease": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-caused_by-Gene": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-caused_by-PhenotypicFeature": {
                  "pmid": "caused_by.pmid",
                  "umls": "caused_by.umls"
               },
               "BiologicalProcess-causes-BiologicalProcess": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "BiologicalProcess-causes-Disease": {
                  "pmid": "causes.pmid",
                  "umls": "causes.umls"
               },
               "BiologicalProcess-disrupted_by-BiologicalProcess": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "BiologicalProcess-disrupted_by-Cell": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "BiologicalProcess-disrupted_by-CellularComponent": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "BiologicalProcess-disrupted_by-ChemicalSubstance": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "BiologicalProcess-disrupted_by-Disease": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "BiologicalProcess-disrupted_by-Gene": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "BiologicalProcess-disrupted_by-PhenotypicFeature": {
                  "pmid": "disrupted_by.pmid",
                  "umls": "disrupted_by.umls"
               },
               "BiologicalProcess-disrupts-AnatomicalEntity": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "BiologicalProcess-disrupts-BiologicalProcess": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "BiologicalProcess-disrupts-Cell": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "BiologicalProcess-disrupts-CellularComponent": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "BiologicalProcess-disrupts-Disease": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "BiologicalProcess-disrupts-Gene": {
                  "pmid": "disrupts.pmid",
                  "umls": "disrupts.umls"
               },
               "BiologicalProcess-negatively_regulated_by-BiologicalProcess": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "BiologicalProcess-negatively_regulated_by-ChemicalSubstance": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "BiologicalProcess-negatively_regulated_by-Disease": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "BiologicalProcess-negatively_regulated_by-Gene": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "BiologicalProcess-negatively_regulated_by-PhenotypicFeature": {
                  "pmid": "negatively_regulated_by.pmid",
                  "umls": "negatively_regulated_by.umls"
               },
               "BiologicalProcess-negatively_regulates-BiologicalProcess": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "BiologicalProcess-negatively_regulates-ChemicalSubstance": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "BiologicalProcess-negatively_regulates-Disease": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "BiologicalProcess-negatively_regulates-Gene": {
                  "pmid": "negatively_regulates.pmid",
                  "umls": "negatively_regulates.umls"
               },
               "BiologicalProcess-physically_interacts_with-BiologicalProcess": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "BiologicalProcess-physically_interacts_with-ChemicalSubstance": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "BiologicalProcess-physically_interacts_with-Disease": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "BiologicalProcess-physically_interacts_with-Gene": {
                  "pmid": "physically_interacts_with.pmid",
                  "umls": "physically_interacts_with.umls"
               },
               "BiologicalProcess-positively_regulated_by-BiologicalProcess": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "BiologicalProcess-positively_regulated_by-ChemicalSubstance": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "BiologicalProcess-positively_regulated_by-Disease": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "BiologicalProcess-positively_regulated_by-Gene": {
                  "pmid": "positively_regulated_by.pmid",
                  "umls": "positively_regulated_by.umls"
               },
               "BiologicalProcess-positively_regulates-BiologicalProcess": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "BiologicalProcess-positively_regulates-ChemicalSubstance": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "BiologicalProcess-positively_regulates-Gene": {
                  "pmid": "positively_regulates.pmid",
                  "umls": "positively_regulates.umls"
               },
               "BiologicalProcess-prevents-Disease": {
                  "pmid": "prevents.pmid",
                  "umls": "prevents.umls"
               },
               "BiologicalProcess-related_to-AnatomicalEntity": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "BiologicalProcess-related_to-BiologicalProcess": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "BiologicalProcess-related_to-CellularComponent": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "BiologicalProcess-related_to-ChemicalSubstance": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "BiologicalProcess-related_to-Disease": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "BiologicalProcess-related_to-Gene": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "BiologicalProcess-related_to-PhenotypicFeature": {
                  "pmid": "related_to.pmid",
                  "umls": "related_to.umls"
               },
               "BiologicalProcess-treats-Disease": {
                  "pmid": "treats.pmid",
                  "umls": "treats.umls"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@biothings.io",
               "name": "Chunlei Wu",
               "x-id": "https://github.com/newgene",
               "x-role": "responsible developer"
            },
            "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)",
            "termsOfService": "http://biothings.ncats.io",
            "title": "SEMMED Biological Process API",
            "version": "1.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Service Provider"
               ]
            }
         },
         "paths": [
            {
               "path": "/geneset",
               "pathitem": {
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "ids": {
                                       "description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                       "type": "string"
                                    }
                                 },
                                 "required": [
                                    "ids"
                                 ]
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "items": {
                                       "$ref": "#/components/schemas/Disease"
                                    },
                                    "type": "array"
                                 }
                              }
                           },
                           "description": "A list of matching disease objects"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "For a list of disease IDs, return the matching disease object",
                     "tags": [
                        "gene"
                     ]
                  }
               }
            },
            {
               "path": "/geneset/{genesetid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Retrieve disease objects based on ID",
                           "example": "C0004096",
                           "in": "path",
                           "name": "genesetid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                 }
                              }
                           },
                           "description": "A matching disease object"
                        },
                        "404": {
                           "description": "A response indicating an unknown disease ID"
                        }
                     },
                     "summary": "Retrieve disease objects based on ID",
                     "tags": [
                        "disease"
                     ]
                  }
               }
            },
            {
               "path": "/metadata",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/callback",
                           "in": "query",
                           "name": "callback"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata object"
                        }
                     },
                     "summary": "Get metadata about the data available from mydisease.info",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/metadata/fields",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/search",
                           "name": "search"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/prefix",
                           "name": "prefix"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "mydisease.info metadata fields object"
                        }
                     },
                     "summary": "Get metadata about the data fields available from a mydisease.info chem object",
                     "tags": [
                        "metadata"
                     ]
                  }
               }
            },
            {
               "path": "/query",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"",
                           "example": "cancer",
                           "in": "query",
                           "name": "q",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        },
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/facet_size",
                           "name": "facet_size"
                        },
                        {
                           "$ref": "#/components/parameters/sort",
                           "name": "sort"
                        },
                        {
                           "$ref": "#/components/parameters/callback",
                           "name": "callback"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/facets",
                           "name": "facets"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/from",
                           "name": "from"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                 }
                              }
                           },
                           "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.",
                     "tags": [
                        "query"
                     ]
                  },
                  "post": {
                     "parameters": [
                        {
                           "$ref": "#/components/parameters/dotfield",
                           "name": "dotfield"
                        },
                        {
                           "$ref": "#/components/parameters/email",
                           "name": "email"
                        },
                        {
                           "$ref": "#/components/parameters/fields",
                           "name": "fields"
                        },
                        {
                           "$ref": "#/components/parameters/size",
                           "name": "size"
                        },
                        {
                           "$ref": "#/components/parameters/format",
                           "name": "format"
                        }
                     ],
                     "requestBody": {
                        "content": {
                           "application/x-www-form-urlencoded": {
                              "schema": {
                                 "properties": {
                                    "q": {
                                       "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                       "type": "string"
                                    },
                                    "scopes": {
                                       "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                       "type": "string"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "responses": {
                        "200": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/QueryPOSTResult"
                                 }
                              }
                           },
                           "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                           "content": {
                              "application/json": {
                                 "schema": {
                                    "$ref": "#/components/schemas/ErrorResult"
                                 }
                              }
                           },
                           "description": "A response indicating an improperly formatted query"
                        }
                     },
                     "summary": "Make batch disease queries and return matching disease hits",
                     "tags": [
                        "query"
                     ],
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-causes-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-causes-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-Cell"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulates-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulates-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulates-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-prevents-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-AnatomicalEntity"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-ChemicalSubstance"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-BiologicalProcess"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-Disease"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-PhenotypicFeature"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-Gene"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-CellularComponent"
                        },
                        {
                           "$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-treats-Disease"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://biothings.ncats.io/semmedbp"
            }
         ],
         "tags": [
            {
               "name": "chemical"
            },
            {
               "name": "annotation"
            },
            {
               "name": "query"
            },
            {
               "name": "translator"
            },
            {
               "name": "biothings"
            },
            {
               "name": "semmed"
            }
         ]
      },
      {
         "_id": "8d5ef70318e800e7020eba5ca812a1b0",
         "_score": 0.8,
         "components": {
            "x-bte-kgs-operations": {
               "chemical2disease": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-doid"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2disease-mondo"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  }
               ],
               "chemical2gene": [
                  {
                     "inputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "chebi": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chemical2gene"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  }
               ],
               "disease2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chembl"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2chemical-chebi"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  }
               ],
               "disease2gene": [
                  {
                     "inputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "parameters": {
                        "mondo": "{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/disease2gene"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  }
               ],
               "gene2chemical": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEMBL.COMPOUND",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chembl"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "CHEBI",
                           "semantic": "ChemicalSubstance"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2chemical-chebi"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  }
               ],
               "gene2disease": [
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "DOID",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-doid"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  },
                  {
                     "inputs": [
                        {
                           "id": "NCBIGene",
                           "semantic": "Gene"
                        }
                     ],
                     "outputs": [
                        {
                           "id": "MONDO",
                           "semantic": "Disease"
                        }
                     ],
                     "parameters": {
                        "geneid": "NCBIGene:{inputs[0]}"
                     },
                     "predicate": "related_to",
                     "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/gene2disease-mondo"
                     },
                     "source": "scigraph",
                     "supportBatch": false
                  }
               ]
            },
            "x-bte-response-mapping": {
               "chemical2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "chemical2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               },
               "chemical2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "disease2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "disease2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "disease2gene": {
                  "NCBIGene": "associated_with.ncbigene"
               },
               "gene2chemical-chebi": {
                  "CHEBI": "associated_with.chebi"
               },
               "gene2chemical-chembl": {
                  "CHEMBL.COMPOUND": "associated_with.chembl"
               },
               "gene2disease-doid": {
                  "DOID": "associated_with.doid"
               },
               "gene2disease-mondo": {
                  "MONDO": "associated_with.mondo"
               }
            }
         },
         "info": {
            "contact": {
               "email": "help@renci.org",
               "name": "Chris B."
            },
            "description": "Scibite",
            "termsOfService": "https://automat.renci.org",
            "title": "Automat CORD19 Scigraph API",
            "version": "2.0",
            "x-translator": {
               "component": "KP",
               "team": [
                  "Ranking Agent"
               ]
            }
         },
         "paths": [
            {
               "path": "/gene/chemical_substance/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2chemical"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/gene/disease/{geneid}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put NCBIGene ID here, e.g. 1017",
                           "example": "NCBIGene:1017",
                           "in": "path",
                           "name": "geneid",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "gene2disease",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/gene2disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/disease/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2disease",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2disease"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/chemical_substance/gene/{chebi}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put CHEBI ID here, e.g. \"CHEBI:661\"",
                           "example": "CHEBI:661",
                           "in": "path",
                           "name": "chebi",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "chemical2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/chemical2gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease/gene/{mondo}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put DOID ID here, e.g. \"DOID:123\"",
                           "example": "DOID:123",
                           "in": "path",
                           "name": "mondo",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "disease2gene",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease2gene"
                        }
                     ]
                  }
               }
            },
            {
               "path": "/disease/chemical_substance/{mondo}",
               "pathitem": {
                  "get": {
                     "parameters": [
                        {
                           "description": "Put DOID ID here, e.g. \"DOID:123\"",
                           "example": "DOID:123",
                           "in": "path",
                           "name": "mondo",
                           "required": true,
                           "schema": {
                              "type": "string"
                           }
                        }
                     ],
                     "responses": {
                        "200": {
                           "description": "An association object"
                        }
                     },
                     "summary": "disease2chemical",
                     "x-bte-kgs-operations": [
                        {
                           "$ref": "#/components/x-bte-kgs-operations/disease2chemical"
                        }
                     ]
                  }
               }
            }
         ],
         "servers": [
            {
               "description": "Production server",
               "url": "https://automat.renci.org/cord19-scigraph"
            }
         ],
         "tags": [
            {
               "name": "drug"
            },
            {
               "name": "gene"
            },
            {
               "name": "disease"
            },
            {
               "name": "automat"
            },
            {
               "name": "translator"
            }
         ]
      }
   ]
}